@model List<ABC.EFCore.Repository.Edmx.CustomerOrder>

@{
    ViewData["Title"] = "Ready Tp Approve";
   Layout = "~/Views/Shared/_LayoutManagers.cshtml";
}

<script src="~/Scripts/jquery-3.4.1.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
<link href="~/vendors/sweetalert2/sweetalert2.min.css" rel="stylesheet" />
<script src="~/vendors/sweetalert2/sweetalert2.all.min.js"></script>
<script src="/vendors/datatables.net/jquery.dataTables.js"></script>
<script src="/vendors/datatables.net-bs4/dataTables.bootstrap4.js"></script>
@*<link href="~/vendors/jquery-bar-rating/fontawesome-stars.css" rel="stylesheet" />*@
@*<link href="~/vendors/jquery-bar-rating/fontawesome-stars-o.css" rel="stylesheet" />*@
<link href="~/vendors/font-awesome/css/font-awesome.min.css" rel="stylesheet" />
<link rel="stylesheet" href="/vendors/datatables.net-bs4/dataTables.bootstrap4.css">
<link rel="stylesheet" href="/js/select.dataTables.min.css">

<link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/css/toastr.min.css">
<script src="//cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/js/toastr.min.js"></script>
<style>
    label.error {
        color: red;
    }

    .customModal {
        overflow-y: hidden !important;
        left: 28% !important;
        width: 40% !important;
    }

    .st-1 {
        color: #0000ab;
        border: 1.1px solid #b0bde0;
        font-size: xxx-large;
        font-style: bold;
        font-weight: 900;
        width: 100%;
    }

    .width-19 {
      /*  width: 19% !important;*/
      display: inline-flex;
    }

    tr.border_bottom td {
        border-bottom: 1px solid black;
    }

    .late {
        background-color: #ef45127a !important;
    }

    .pending {
        background-color: #ffaf00de !important;
    }
</style>

<div class="card">
    <div class="card-body">
        <h4 class="card-title">New Orders <small>(Ready to be Approved)</small> </h4>
        <div id="performance-line-legend"><div class="chartjs-legend"><ul><li><span style="background-color:#ef45127a !important"></span>Pending Orders More Then 2 days</li><li><span style="background-color:#ffaf00de !important;"></span>Previous Credit Exist</li></ul></div></div>
        <div class="tab-content">
            <div class="tab-pane fade active show" id="pending-1" role="tabpanel" aria-labelledby="pending-tab">
                <table id="order-listing" class="col-12">
                    <thead>
                        <tr role="row">
                            <td style="font-weight:600">Sr#</td>
                            <th style="width:13%">
                                Order #
                            </th>
                            <th>
                                Customer
                            </th>
                            <th>
                                Customer Code
                            </th>
                            <th>
                                Phone
                            </th>
                            <th>
                                Line Count
                            </th>
                            <th>
                                Amount
                            </th>
                              <th>
                                Order Date
                            </th>
                            <th>
                                Action
                            </th>

                        </tr>
                    </thead>
                    <tbody>
                        @{
                            var i = 0;
                        }

                        @if (Model != null)
                        {
                            @foreach (var item in Model)
                            {
                                @if (item.AdminStatus == false)
                                {
                                    i = i + 1;
                                    @if (item.OrderDaysAlert == true && item.Balance == "0" || item.Balance == null)
                                    {
                                        <tr class="odd late border_bottom">

                                            <td class="sorting_1 ">@i</td>

                                            <td>@item.TicketId</td>
                                            <td>@item.CustomerName</td>
                                            <td>@item.CustomerCode</td>
                                            <td class="w-100">@item.Phone</td>
                                            <td>@item.LineCounts</td>
                                            <td id="orderdata-@i">@item.OrderAmount</td>
                                            <td>@Html.FormatValue("dd/MM/yyyy", item.OrderDate?.ToString("dd/MM/yyyy"))</td>

                                            <td class="width-19">
                                                @if (item.Balance != "0" && item.Balance != null)
                                                {
                                                    <a class="btn btn-dark py-2" data-orderId="@item.OrderId" data-orderNum="@item.TicketId" style="color:white; font-size:15px; height:30px;" onclick="ShowReceivables(`@item.Balance`, `@item.CustomerName`,'@item.Phone','@item.BillingAddress','@i','@item.UserId','@item.TicketId')" id="approveId">Approve</a>
                                                }
                                                else
                                                {
                                                    <a class="btn btn-dark py-2 btnApprove" data-orderId="@item.OrderId" data-orderNum="@item.TicketId" style="color:white; font-size:15px; height:30px;" id="">Approve</a>
                                                }
                                                <a class="btn btn-dark py-2 btnReject" data-orderId="@item.OrderId" data-orderNum="@item.TicketId" style="color:white; font-size:15px; height:30px;" id="">Reject</a>
                                                <a class="btn btn-dark py-2" data-ticketId="@item.TicketId" data-orderId="@item.UserId" style="color:white; font-size:15px; height:30px;" href='@Url.Action("OrderDetails", "Order", new { id = @item.TicketId })': null"><i class="fa fa-eye"></i></a>
                                            </td>
                                        </tr>
                                    }
                                    else if (item.Balance != "0" && item.Balance != null)
                                    {
                                        <tr class="odd pending border_bottom">
                                            <td class="sorting_1 ">@i</td>
                                            <td>@item.TicketId</td>
                                            <td>@item.CustomerName</td>
                                            <td>@item.CustomerCode</td>
                                                 <td class="w-100">@item.Phone</td>
                                            <td>@item.LineCounts</td>
                                              <td id="orderdata-@i">@item.OrderAmount</td>
                                            <td>@Html.FormatValue("dd/MM/yyyy", item.OrderDate?.ToString("dd/MM/yyyy"))</td>

                                            <td class="width-19">
                                                @if (item.Balance != "0" && item.Balance != null)
                                                {
                                                    <a class="btn btn-dark py-2" data-userId="@item.UserId" data-orderId="@item.OrderId" data-orderNum="@item.TicketId" style="color:white; font-size:15px; height:30px;" onclick="ShowReceivables(`@item.Balance`, `@item.CustomerName`,'@item.Phone','@item.BillingAddress','@i','@item.UserId','@item.TicketId')" id="approveId">Approve</a>
                                                }
                                                else
                                                {
                                                    <a class="btn btn-dark py-2 btnApprove" data-userId="@item.UserId" data-orderId="@item.OrderId" data-orderNum="@item.TicketId" style="color:white; font-size:15px; height:30px;" id="">Approve</a>
                                                }
                                                <a class="btn btn-dark py-2 btnReject" data-orderId="@item.OrderId" data-orderNum="@item.TicketId" style="color:white; font-size:15px; height:30px;" id="">Reject</a>
                                                <a class="btn btn-dark py-2" data-ticketId="@item.TicketId" data-orderId="@item.UserId" style="color:white; font-size:15px; height:30px;" href='@Url.Action("OrderDetails", "Order", new { id = @item.TicketId })': null"><i class="fa fa-eye"></i></a>
                                            </td>
                                        </tr>
                                    }
                                    else
                                    {
                                        <tr class="odd border_bottom">

                                            <td class="sorting_1">@i</td>

                                            <td>@item.TicketId</td>
                                            <td>@item.CustomerName</td>
                                            <td>@item.CustomerCode</td>
                                                 <td class="w-100">@item.Phone</td>
                                            <td>@item.LineCounts</td>
                                            <td id="orderdata-@i">@item.OrderAmount</td>
                                            <td>@Html.FormatValue("dd/MM/yyyy", item.OrderDate?.ToString("dd/MM/yyyy"))</td>
                                            <td class="width-19">
                                                @if (item.Balance != "0" && item.Balance != null)
                                                {
                                                    <a class="btn btn-dark py-2" data-orderId="@item.OrderId" data-orderNum="@item.TicketId" style="color:white; font-size:15px; height:30px;" onclick="ShowReceivables(`@item.Balance`, `@item.CustomerName`,'@item.Phone','@item.BillingAddress','@i','@item.UserId','@item.TicketId')" id="approveId">Approve</a>
                                                }
                                                else
                                                {
                                                    <a class="btn btn-dark py-2 btnApprove" data-orderId="@item.OrderId" data-orderNum="@item.TicketId" style="color:white; font-size:15px; height:30px;" id="">Approve</a>
                                                }
                                                <a class="btn btn-dark py-2 btnReject" data-orderId="@item.OrderId" data-orderNum="@item.TicketId" style="color:white; font-size:15px; height:30px;" id="">Reject</a>
                                                <a class="btn btn-dark py-2" data-ticketId="@item.TicketId" data-orderId="@item.UserId" style="color:white; font-size:15px; height:30px;"  href='@Url.Action("OrderDetails", "Order", new { id = @item.TicketId })': null"><i class="fa fa-eye"></i></a>
                                            </td>
                                        </tr>
                                    }


                                }
                            }
                        }
                    </tbody>
                </table>

            </div>


        </div>

    </div>
</div>

<div class="modal fade" id="input-delivery" tabindex="-1" aria-labelledby="ModalLabel" style="display: none;" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="ModalLabel">Order Deliver Day</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close" onclick="closemodal()">
                    <span aria-hidden="true">×</span>
                </button>
            </div>
            <div class="modal-body text-center">
                <label>Expected Delivered Date</label>
                <input name="deliverDate" id="deliverDate" class="col-7 form-control" type="date" />

            </div>

            <div class="modal-body text-center">
                <label for="recipient-name" class="col-form-label">Select Puller Employee:</label>
                @Html.DropDownList("PullerEmployeeId", (IEnumerable<SelectListItem>)ViewBag.Employee, "--Choose Employee For Pull Order --", new { @class = "form-control col-7", id = "selectpuller", name="selectpuller" })
            </div>
            <div class="modal-footer">
                <button type="submit" class="btn btn-success" data-orderId="" data-orderNum="" id="approveorder">Approve</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="Accessinput-delivery" tabindex="-1" aria-labelledby="ModalLabel" style="display: none;" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="ModalLabel">Order Deliver Day</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close" onclick="closemodal()">
                    <span aria-hidden="true">×</span>
                </button>
            </div>
            <div class="modal-body text-center">
                <label>Expected Delivered Date</label>
                <input name="deliverDate" id="accessdeliverDate" class="col-7 form-control" type="date" />

            </div>

            <div class="modal-body text-center">
                <label for="recipient-name" class="col-form-label">Select Puller Employee:</label>
                @Html.DropDownList("PullerEmployeeId", (IEnumerable<SelectListItem>)ViewBag.Employee, "--Choose Employee For Pull Order --", new { @class = "form-control col-7", id = "accessselectpuller", name="selectpuller" })
            </div>
            <div class="modal-footer">
                <button type="submit" class="btn btn-success" data-userId="" data-orderId="" data-orderNum="" id="Accessapproveorder">Approve</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="input-reject" tabindex="-1" aria-labelledby="ModalLabel" style="display: none;" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <form id="rejectform">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="ModalLabel">Reason of Rejection</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close" onclick="closemodal()">
                        <span aria-hidden="true">×</span>
                    </button>
                </div>
                <div class="modal-body text-center">
                    <label>Note/Reason</label>
                    <input name="txtreason" id="txtreason" class="col-7 form-control" type="text" />

                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-success" data-orderId="" data-orderNum="" id="rejectorder">Reject</button>
                </div>
            </div>
        </form>
    </div>
</div>
<div class="modal fade" id="approve-register" tabindex="-1" aria-labelledby="ModalLabel" style="display: none;" aria-hidden="true">
    <div class="modal-dialog" style="max-width:max-content" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="ModalLabel">Order Details</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close" onclick="closemodal()">
                    <span aria-hidden="true">×</span>
                </button>
            </div>
            <div class="modal-body">
                <table class="mb16 table table-striped table-sm js_cart_lines" id="cart_products">
                    <thead>
                        <tr>
                            <th class="td-img">Product Code</th>
                            <th>Name</th>
                            <th class="text-center td-qty">
                                Quantity
                            </th>
                            <th class="text-center"> Retail</th>
                            <th class="text-center"> Total</th>

                        </tr>
                    </thead>

                    <tbody id="cart_body">
                    </tbody>
                </table>

            </div>
            <div class="modal-footer">
                @*<button type="button" class="btn btn-success" id="registeremployee" onclick="approveregister()">Register</button>*@
            </div>
        </div>
    </div>
</div>





<div id="receivablesid" class="modal fade bd-example-modal-sm customModal" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog modal-sm">
    </div>
</div>
<div id="verifycreditallow" class="modal fade bd-example-modal-sm customModal" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog modal-sm">
    </div>
</div>

<script>

            



        function ShowReceivables(balance,customerName,telephone,address,index,userID,OrderNumber) {

             $(".forremovingmodel").empty();
             var html = "";

             html += '<div class="modal-content forremovingmodel">';
             html += '<div class="modal-header" style="padding:1rem!important;">';
             html += '<h5 class="modal-title" id="ModalLabel">Balance Overdue</h5>';
             html += '<button type="button" class="close" data-dismiss="modal" aria-label="Close" onclick="closemodalabcd()">';
             html += '<span aria-hidden="true">×</span>';
             html += '</button>';
             html += '</div>';
             html += '<div class="modal-body" style="color: #0000ab; background-color: #ff99cc;padding-top:10px;">';
             html += '<div class="row">';
             html += '<div class="col-lg-12 col-md-12 col-sm-12 col">';
             html += '<label style="font-weight:700">Customer: <label id="customerNo">'+customerName+'</label></label>';
             html += '</div>';
             html += '</div>';
             html += '<div class="row mt-1">';
             html += '<div class="col-lg-6 col-md-12 col-sm-12 col font-size">';
             html += '<label id="Storename">Billing Address:</label>';
             html += '</div>';
             html += '</div>';
             html += '<div class="row mt-1">';
             html += '<div class="col-lg-6 col-md-12 col-sm-12 col font-size">';
             html += '<label>'+address+'</label >';
             html += '</div>';
             html += '</div>';
             html += '<div class="row mt-1">';
             html += '<div class="col-lg-12 col-md-12 col-sm-12 col font-size">';
             html += '<label>Tel: <label id="telno">'+telephone+'</label></label>';
             html += '</div>';
             html += '</div>';
             html += '<div class="row mt-2">';
             html += '<div class="col-lg-12 col-md-12 col-sm-12 col">';
             html += '<h2 class="text-center">Balance Overdue</h2>';
             html += '</div>';
             html += '</div>';
             html += '<div class="row mt-2">';
             html += '<div class="col-lg-12 col-md-12 col-sm-12 col text-center">';
             html += '<input type="text" class="text-center st-1" name="name" disabled value="'+balance+'"  />';
             html += '</div>';
             html += '</div>';
             html += '<div class="row mt-2">';
             html += '<div class="col-lg-12 col-md-12 col-sm-12 col text-center">';
             html += '<label>DueDate: <label id="date"></label></label>';
             html += '</div>';
             html += '<div class="row mt-2">';
             html += '<div class="col-lg-12 col-md-12 col-sm-12 col text-end">';
             html += '<button class="btn btn-dark py-3" onclick="btnApproved('+index+','+userID+','+OrderNumber+')" style="color:white;">Authorize</button>';
             html += '</div>';
             html += '</div>';
             html += '</div>';
             html += '</div>';

             $('#receivablesid').append(html);
             $('#receivablesid').modal('show');

            //    console.log(html);
        };
        function closemodalabcd() {
            $("#receivablesid").modal('hide');
              $("#verifycreditallow").modal("hide");

        };
        function btnApproved(index,userID,OrderNumber) {
          $(".forremovingAccessmodel").empty();
           var html = "";
            html += '<div class="modal-content forremovingAccessmodel">';
                html += '<div class="modal-header" style="padding:0.5rem!important;">';
                    html += '<h5 class="modal-title" id="ModalLabelAuth">Allow Order# '+ OrderNumber +' on credit</h5>';
                    html += '<button type="button" class="close" data-dismiss="modal" aria-label="Close" onclick="closemodalabcd()">';
                        html += '<span aria-hidden="true">×</span>';
                    html += '</button>';
                html += '</div>';
                html += '<div class="modal-body" style="color: #0000AB; padding-top: 10px;padding-bottom:10px;">';
                    html += '<div class="row">';
                        html += '<div class="col-lg-12 col-md-12 col-sm-12 col">';
                            html += '<div class="row mt-3">';
                                html += '<div class="col-lg-3 col-md-3 col-sm-12 col">';
                                    html += '<label class="col-lg-12">Pin</label>';
                                html += '</div>';
                                html += '<div class="col-lg-8 col-md-8 col-sm-12 col p-0 m-0">';
                                    html += '<input type="password" class="form-control" id="superPin" name="pin" value="" placeholder="Pin" required="required"/>';
                                html += '</div>';
                            html += '</div>';
                            html += '<div class="row mt-3">';
                                html += '<div class="col-lg-3 col-md-3 col-sm-12 col">';
                                    html += '<label class="col-lg-12">Comment</label>';
                                html += '</div>';
                                html += '<div class="col-lg-8 col-md-8 col-sm-12 col p-0 m-0">';
                                    html += '<textarea id="superComment" class="form-control h-100" rows="4" cols="33" name="comment" form="usrform" placeholder="Enter Comment here..." required="required"></textarea>';
                                html += '</div>';
                            html += '</div>';
                            html += '<div class="row mt-3">';
								html += '<div class="col-lg-3 col-md-3 col-sm-12 col">';
									html += '<label class="col-lg-12">Due Date</label>';
								html += '</div>';
								html += '<div class="col-lg-8 col-md-8 col-sm-12 col p-0 m-0">';
									html += '<input id="DueDate" class="form-control" type="date" min="" name="DueDate" form="usrform"  required="required">';
								html += '</div>';
							html += '</div>';
                            html += '<div class="row mt-3">';
                                html += '<div class="col-lg-8 col-md-8 col-sm-12 col"></div>';
                                html += '<div class="col-lg-4 col-md-4 col-sm-12 col ps-0">';
                                    html += '<button type="button" onclick="authorizeSupervisor('+index+','+userID+','+OrderNumber+')" class="btn btn-lg btn-warning ps-4 pe-4">Authenticate</button>';
                                html += '</div>';
                            html += '</div>';
                        html += '</div>';
                    html += '</div>';
                html += '</div>';
            html += '</div>';
            $('#verifycreditallow').append(html);

            var dtToday = new Date();
			var month = dtToday.getMonth() + 1;
			var day = dtToday.getDate();
			var year = dtToday.getFullYear();
			if (month < 10)
            month = '0' + month.toString();
			if (day < 10)
            day = '0' + day.toString();
			var maxDate = year + '-' + month + '-' + day;
			var minDate = year + '-' + month + '-' + (day + 7);
			$('#DueDate').attr('min', maxDate);
			$('#DueDate').attr('max', minDate);
            $("#receivablesid").modal('hide');
            $("#verifycreditallow").modal('show');
        };

        function authorizeSupervisor(index,userID,OrderNumber) {
            $("#receivablesid").modal('hide');
            var pin = $("#superPin").val();
            var comment = $("#superComment").val();
            var duedate = $("#DueDate").val();
            var customerId = userID;
            var Supervisor = {
                accessPin : pin,
                customerId: customerId,
            };
        //Supervisor.customerId = customerId.toString();
            var customer = JSON.stringify(customerId);
            var supper = JSON.stringify(Supervisor);
            var invoiceTotal = ($("#orderdata-"+index).text());
            if(invoiceTotal == "" || invoiceTotal == null || invoiceTotal == "undefined"){
                invoiceTotal = "60";
            }
       //     invoiceTotal = JSON.stringify(invoiceTotal);
            var things = { "customerId": customerId, 'supervisor': Supervisor};
            $.ajax({
                type: "POST",
                data: { 'customerId': customerId, 'accessPin': pin, 'comment': comment, 'creditAmount': invoiceTotal, 'duedate':duedate},
                dataType: 'json',
                url: '@Url.Action("CheckSupervisorCreditAmount", "Order")',
                success: function (response) {
                    if (response == "Success.") {
                        $("#verifycreditallow").modal("hide");
                        toastr.success('Pin Verified');
                        InsertInvoiceForSale(userID,OrderNumber,invoiceTotal,comment);
                        Swal.fire(
                            'Autorized',
                            'Success',
                            'success'
                        );
                    }
                    else if (response == "ExceedLimit.") {
                         toastr.error('Your Credit limit has been exceed, Call Your Manager or Admin');
                        Swal.fire(
                            'Error',
                            'Your Credit limit has been exceed, Call Your Manager or Admin!',
                            'error'
                        )
                    } 
                    else if (response == "This Supervisor Already Availed Credits.") {
                         toastr.error('This Supervisor Account already have unpaid invoice against this customer, Call Sales Manager!');
                        Swal.fire(
                            'Error',
                            'This Supervisor Account already have unpaid invoice against this customer, Call Sales Manager!',
                            'error'
                        )
                    } else if (response == "This Manager Already Availed Credits.") {
                         toastr.error('This Manager Account also have unpaid invoice against this customer, Cannot proceed.');
                        Swal.fire(
                            'Error',
                            'This Manager Account also have unpaid invoice against this customer, Cannot proceed.',
                            'error'
                        )
                    }
                    else if (response == "InvlaidPin.") {
                        toastr.error('Invalid Pin');
                        Swal.fire(
                            'Error',
                            'You entered Invalid pin!',
                            'error'
                        )
                    }

                    else if (response == "false") {
                            toastr.error('Unable to autherize');
                        Swal.fire(
                            'Error',
                            'Fileds Are Required.!',
                            'error'
                        )
                    }
                },
                error: function (err) {

                }

            });
        }

        function InsertInvoiceForSale(userID,OrderNumber,invoiceTotal,comment){
            $("#Accessapproveorder").attr("data-orderNum", OrderNumber);
            $("#Accessapproveorder").attr("data-userId", userID);
            $("#Accessinput-delivery").modal('show');
        };

        $("#Accessapproveorder").click(function(){

        var isValid = true;
              var orderId = parseInt($("#Accessapproveorder").attr("data-orderId"));
              var orderNum = $("#Accessapproveorder").attr("data-orderNum");
              var deliverDate = $("#accessdeliverDate").val();
                 var pullerId = $("#accessselectpuller").val();
                 var userId =$("#Accessapproveorder").attr("data-userId");
                 var autherizePin = $("#superPin").val();

                 if(deliverDate != "" && deliverDate != null && deliverDate != "undefined"){

                 }else{
                     toastr.error('Deliver Date is Required');
                     isValid = false;
                 }

                 if(pullerId != "--Choose Employee For Pull Order --" && pullerId != "" && pullerId != null && pullerId != "undefined"){

                 }else{
                     toastr.error('Puller Employee is Required');
                       isValid = false;
                 }
                 if(isValid){
                 $.ajax({
                  type: "GET",
                  url: '@Url.Action("AccessApproveOrder", "Order")',
                  data: {
                      id: orderId,
                      userId: userId,
                      ordernum: orderNum,
                      orderDate: deliverDate,
                      pulleremployeeid: pullerId,
                      autherizePin: autherizePin
                  },
                  //async: false,
                  dataType: "json",
                  async: false,
                  cache: false,
                  success: function (result) {

                      if(result == 'Need pin validation again.'){
                          toastr.error('Need pin validation again.');
                      }
                      else if (result != 'null' && result != 'false'){
                           toastr.success('Order Approve, and ready to be pulled');
                          $("#deliverDate").val('');
                          $("#input-delivery").modal('hide');
                          Swal.fire({
                              icon: 'success',
                              title: 'Order Approved!',
                              text: orderNum,
                              confirmButtonText: 'Ok',
                              allowOutsideClick: false
                          }).then((result) => {
                              if (result.isConfirmed) {
                                location.reload();
                              }
                          })
                      }
                        else {
                              toastr.error('Order unabled to approved, Failed.');

                        }
                      },
                  error: function () {
                      toastr.error('Failed to receive the Data');
                  }
              });

              }

    });

</script>
<script>
      var table = null;
      $(document).ready(function () {
          table = $("#order-listing").DataTable({
              "columnDefs": [{
                  "targets": 8,
                  "orderable": false
              }]
          });
          var approvetable = $("#approve-listing").DataTable({
              "columnDefs": [{
                  "targets": 8,
                  "orderable": false
              }]
          });
      });

      $("#rejectform").validate({
          rules: {
              txtreason: {
                  "required": true,
              },

          },
          messages: {
              txtreason: {
                  required: "Note is Required",
              },
          },
          submitHandler: function (form) {
              var orderId = parseInt($("#rejectorder").attr("data-orderId"));
              var orderNum = $("#rejectorder").attr("data-orderNum");
              var reason = $("#txtreason").val();
               $.ajax({
                  type: "GET",
                  url: '@Url.Action("RejectOrder", "Order")',
                  data: {
                      id: orderId,
                      ordernum: orderNum,
                      reason: reason
                  },
                  //async: false,
                  dataType: "json",
                  async: false,
                  cache: false,
                  success: function (result) {
                      if (result != 'null' && result != 'false')
                      {
                          toastr.success('Order Rejected, and email send to customer');
                          $("#deliverDate").val('');
                          $("#input-delivery").modal('hide');
                          Swal.fire({
                              icon: 'success',
                              title: 'Order Rejected!',
                              text: orderNum,
                              confirmButtonText: 'Ok',
                              allowOutsideClick: false
                          }).then((result) => {
                              if (result.isConfirmed) {
                                location.reload();
                              }
                          });
                      }
                        else {
                              toastr.error('Order unabled to reject, Failed.');

                        }
                      },
                  error: function () {
                      toastr.error('Failed to receive the Data');
                  },
              });
              }
      });


    $("#approveorder").click(function(){

        var isValid = true;
                   var orderId = parseInt($("#approveorder").attr("data-orderId"));
              var orderNum = $("#approveorder").attr("data-orderNum");
              var deliverDate = $("#deliverDate").val();
                 var pullerId = $("#selectpuller").val();

                 if(deliverDate != "" && deliverDate != null && deliverDate != "undefined"){

                 }else{
                     toastr.error('Deliver Date is Required');
                     isValid = false;
                 }

                 if(pullerId != "--Choose Employee For Pull Order --" && pullerId != "" && pullerId != null && pullerId != "undefined"){

                 }else{
                     toastr.error('Puller Employee is Required');
                       isValid = false;
                 }
                 if(isValid){
                 $.ajax({
                  type: "GET",
                  url: '@Url.Action("ApproveOrder", "Order")',
                  data: {
                      id: orderId,
                      ordernum: orderNum,
                      orderDate: deliverDate,
                      pulleremployeeid: pullerId
                  },
                  //async: false,
                  dataType: "json",
                  async: false,
                  cache: false,
                  success: function (result) {
                      if (result != 'null' && result != 'false'){
                           toastr.success('Order Approve, and ready to be pulled');
                          $("#deliverDate").val('');
                          $("#input-delivery").modal('hide');
                          Swal.fire({
                              icon: 'success',
                              title: 'Order Approved!',
                              text: orderNum,
                              confirmButtonText: 'Ok',
                              allowOutsideClick: false
                          }).then((result) => {
                              if (result.isConfirmed) {
                                location.reload();
                              }
                          })
                      }
                        else {
                              toastr.error('Order unabled to approved, Failed.');

                        }
                      },
                  error: function () {
                      toastr.error('Failed to receive the Data');
                  }
              });

              }

    });
       $("#approveform").validate({
          rules: {
              deliverDate: {
                  "required": true,
              },
              selectpuller: {
                  "required": true,
              },
          },
          messages: {
              deliverDate: {
                  required: "Deliver Date is Required",
              },
               selectpuller: {
                  required: "Puller Employee is Required",
              },
          },
          submitHandler: function (form) {
              var orderId = parseInt($("#approveorder").attr("data-orderId"));
              var orderNum = $("#approveorder").attr("data-orderNum");
              var deliverDate = $("#deliverDate").val();
                 var pullerId = $("#selectpuller").val();

              }
              });
        $(".btnDetails").click(function () {

          var thiss = this;
          var orderId = parseInt($(this).attr("data-orderId"));
          var ticket = $(this).attr("data-ticketId");

          $.ajax({
              type: "GET",
             url: '@Url.Action("ListOfCartAminApproval", "Order")',
              data: {
                  id: orderId,
                  ticketId : ticket,
                },
              //async: false,
              dataType: "json",
              success: function (result) {

                      $('#cart_body tr').remove();

                  if (result.length > 0 && result != "null" && result != "false" && result != "") {
                      $.each(result, function (index, value) {
                          $('#cart_body').append("<tr><td>" + value.productCode + "</td><td>" + value.name + "</td><td>" + value.quantity+"</td><td>" + value.retail + "</td><td>" + value.total+"</td></tr>");
                      });
                  }else{
                       $('#cart_body').append("<tr><td>No Detail Found</td><td></td><td></td><td></td><td></td></tr>");
                  }

              },
              error: function () {
                  alert('Failed to receive the Data');
                  console.log('Failed ');
              }
          });
          $("#approve-register").modal('show');
      });

      $(".btnApprove").click(function () {
          var orderId = parseInt($(this).attr("data-orderId"));
          var orderNum = $(this).attr("data-orderNum");
          $("#approveorder").attr("data-orderId", orderId);
          $("#approveorder").attr("data-orderNum", orderNum);
          $("#input-delivery").modal('show');

      });

      $(".btnReject").click(function () {
          var orderId = parseInt($(this).attr("data-orderId"));
          var orderNum = $(this).attr("data-orderNum");
          $("#rejectorder").attr("data-orderId", orderId);
          $("#rejectorder").attr("data-orderNum", orderNum);
          $("#input-reject").modal('show');

      });
      $(".btnDeliver").click(function () {
          var orderId = parseInt($(this).attr("data-orderId"));
          var orderNum = $(this).attr("data-orderNum");

          $.ajax({
              type: "GET",
             url: '@Url.Action("DeliverOrder", "Order")',
              data: {
                  id: orderId,
                  ordernum: orderNum
                },
              //async: false,
              dataType: "json",
               async: false,
                  cache: false,
              success: function (result) {
                  if (result != null) {
                      if (result == true) {
                          Swal.fire({
                              icon: 'success',
                              title: 'Order Deliver!',
                              text: orderNum,
                              confirmButtonText: 'Ok',
                              allowOutsideClick: false
                          }).then((result) => {
                              if (result.isConfirmed) {
                                  location.reload();
                              }
                          })
                      }
                      if (result.length > 0 ) {
                          $('#notdeliver_body tr').remove();
                          $.each(result, function (index, value) {
                              debugger;
                              $('#notdeliver_body').append("<tr><td>" + value.productCode + "</td><td>" + value.name + "</td><td>" + value.quantity + "</td><td>" + value.retail + "</td><td>" + value.total + "</td></tr>");
                          });
                          $("#notDeliver").modal('show');
                      }
                      if (result == false) {
                          Swal.fire(
                              'Quantity Error',
                              'Item Quantity Error',
                              'error'
                          )
                      }

                  }

              },
              error: function () {
                  alert('Failed to receive the Data');
                  console.log('Failed ');
              }
          });
      });
      function closemodal() {
          $("#approve-register").modal('hide');
          $("#notDeliver").modal('hide');
          $("#input-delivery").modal('hide');
      };

        function DropdownLink() {
              $("#DropdownLink").toggleClass("show");
          }

          var today = new Date().toISOString().split('T')[0];
        document.getElementsByName("deliverDate")[0].setAttribute('min', today);
</script>