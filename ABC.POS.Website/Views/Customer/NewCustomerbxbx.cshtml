@model ABC.EFCore.Repository.Edmx.CustomerInformation
@{ ViewData["Title"] = "NewCustomer";
    Layout = "~/Views/Shared/_Layout.cshtml"; }
<script src="~/Scripts/jquery-3.4.1.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>

<style>
    .form-control {
        color: #00008B;
        font-weight: 500;
    }

    .panel-head {
        padding: 10px 15px;
        border-bottom: 1px solid transparent;
        border-top-left-radius: 3px;
        border-top-right-radius: 3px;
    }

    label {
        color: #00008B;
    }

    .add-style {
        color: red;
    }

    .dropadditemCategory {
        background: #e9ecef;
        opacity: 1;
        border: 0;
        outline: 1px solid #dee2e6;
        font-weight: 400;
        font-size: 0.875rem;
        border-radius: 4px;
        height: 2rem;
    }

    .progress-bar-vertical {
        width: 20px;
        min-height: 200px;
        margin-right: 20px;
        background: #d0cece;
        display: -webkit-box;
        display: -ms-flexbox;
        display: -webkit-flex;
        display: flex;
        align-items: flex-end;
        -webkit-align-items: flex-end
    }

        .progress-bar-vertical .progress-bar {
            width: 100%;
            height: 0;
            -webkit-transition: height 0.6s ease;
            -o-transition: height 0.6s ease;
            transition: height 0.6s ease
        }

    .actionbox {
        background: white;
        box-sizing: border-box;
        margin-bottom: 2%;
        border-radius: 20px;
    }

    .setsearchbox {
        position: relative;
        margin-top: 0%;
        width: auto;
        background-color: antiquewhite;
        border-radius: 0px;
    }

    .searchheader {
        font-size: 16px;
        text-align: center;
        font-weight: bold;
        display: inline-block;
        width: 50%;
        text-align: start;
        border-bottom: 1px solid #dee2e6;
        border-right: 1px solid #dee2e6;
    }

    .di {
        display: inline-block;
    }

    .itemnumberbox {
        border: 1px solid #989a9d;
        background: #80808047;
    }

    .fr {
        float: right !important;
    }

    .mg-t-5 {
        margin-top: 5%;
    }

    .ml-2 {
        margin-left: 2%;
    }

    .mg-t-2 {
        margin-top: 2%;
    }

    .ml-3 {
        margin-left: 3%;
    }

    .mg-t-3 {
        margin-top: 3%;
    }

    .dn {
        display: none;
    }

    .checkcheapitems {
        margin-top: 50%;
        position: relative;
        left: 110%;
        width: 20%;
    }

    .emptygrid {
        height: 300px;
        background-color: antiquewhite;
    }

    .table td, .table th {
        padding: 5px !important;
        width: 100%;
    }

    .dropdowncursor {
        cursor: pointer;
    }
    .height{
        height:auto !important;
    }
    
</style>


<div class="col-12 grid-margin">
    <div class="card">
        <div class="card-body">
            <div class="panel panel-primary ">
                <div class="w-100 p-3 h-100 d-inline-block">

                    <div id="onlisticon" class="di">
                        <img class="createnew" src="~/images/add.png" style="width:50px" title="Create" onclick="triggerAddCustomer()" />&ensp;&ensp;&ensp;
                        <img id="refresh-id" src="~/images/refresh.png" style="width:50px" title="Refresh" onclick="ReloadPage()" />&ensp;&ensp;&ensp;
                    </div>
                    <div id="defaultlisticons" class="di"></div>
                    <div id="onsaveicon">

                    </div>
                    <div class="row fr" id="existingitemnumber">
                        @Html.HiddenFor(model => model.CustomerCode, new { @class = "form-control", id = "hiddencustomercode" })
                        @Html.HiddenFor(model => model.Id, new { @class = "form-control", id = "customerinformationid" })
                    </div>
                    <div class="row fr" id="newitemnumber">
                        @Html.HiddenFor(model => model.CustomerCode, new { @class = "form-control" })
                        @Html.HiddenFor(model => model.Balance, new { @class = "form-control" })
                    </div>
                    @*<a href="#"> <img src="~/images/create.png" style="width:50px" title="Create" id="createicon" /></a>&ensp;&ensp;&ensp;
                        <a href="#"> <img src="~/images/attach.png" style="width:50px" title="Attachments" id="attachmentsicon" /></a>&ensp; &ensp; &ensp;
                        <a href="#"> <img src="~/images/edit.png" style="width:50px" title="Edit" id="editicon" /></a>&ensp; &ensp; &ensp;
                        <a href="#"> <img src="~/images/delete.png" style="width:50px" title="Delete" id="deleteicon" /></a>&ensp; &ensp; &ensp;
                        <a href="#"> <img src="~/images/printer.png" style="width:50px" title="Print" id="printicon" /></a>&ensp; &ensp; &ensp;*@
                </div>
                <div class="panel-heading" id="panelheading">Customers</div>
                <div class="panel-body">
                    @*<div class="row">
                            <div class="col-lg-8 col-sm-8">
                                <input type="text" id="searchcompany" class="w-100" placeholder="Searching By Company Name" />
                            </div>
                            <div class="col-lg-3 col-sm-3">
                                <button type="button" class="btn btn-primary" id="searchbutton">Search</button>
                            </div>
                        </div>*@

                    <ul class="nav nav-tabs" role="tablist">
                        <li class="nav-item">
                            <a class="nav-link active" id="infotab" data-bs-toggle="tab" href="#infodata" role="tab" aria-controls="infodata" aria-selected="true">Information</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" id="classificationtab" data-bs-toggle="tab" href="#classificationdata" role="tab" aria-controls="classificationdata" aria-selected="false">Classification</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" id="billinginfotab" data-bs-toggle="tab" href="#billinginfodata" role="tab" aria-controls="billinginfodata" aria-selected="false">Billing Info</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" id="saledatatab" data-bs-toggle="tab" href="#saledata" role="tab" aria-controls="saledata" aria-selected="false">Sales</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link " id="paymentdatatab" data-bs-toggle="tab" href="#paymentdata" role="tab" aria-controls="paymentdata" aria-selected="false">Payements</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link " id="home-tab" data-bs-toggle="tab" href="#home-1" role="tab" aria-controls="home-1" aria-selected="false">Unpaid Invoice</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link " id="accounthistorydatatab" data-bs-toggle="tab" href="#accounthistorydata" role="tab" aria-controls="accounthistorydata" aria-selected="false">Account History</a>
                        </li>
                    </ul>
                    <div class="tab-content">
                        <div class="tab-pane fade active show row" id="infodata">
                            <div class="row">
                                <div class="col-lg-8 col-sm-8">
                                    <div class="form-group">
                                        <label class="dim col-sm-12">Company</label>
                                        @Html.EditorFor(model => model.Company, new { htmlAttributes = new { @class = "form-control searchname", placeholder = "Enter Company Name", id = "companyname", onkeydown = "GetAllMatchedItems(event)", autocomplete = "off" } })
                                        <div style="cursor:pointer" id="listallmissions"></div>
                                        <label class="text-danger db" id="companyvalidation"></label>
                                    </div>
                                </div>

                            </div>
                            <div class="row">
                                <div class="col-lg-8 col-sm-8">
                                    <div class="row">
                                        <div class="col-lg-2 col-sm-2">
                                            <div class="form-group">
                                                <label class="dim col-sm-8">Mr./Mrs.</label>
                                                @Html.DropDownListFor(model => model.Gender, (IEnumerable<SelectListItem>)ViewData["Gender"], "--Choose Title", new { @class = "form-control dropdowncursor", id = "txtgender" })
                                                <label class="text-danger db" style="display:none" id="msgcustomertype">Enter Gender Type</label>
                                            </div>
                                        </div>
                                        <div class="col-lg-5 col-sm-5">
                                            <div class="form-group">
                                                <label class="dim col-sm-6">First Name</label>
                                                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control ", placeholder = "First Name", id = "txtFirstName" } })
                                                <label class="text-danger db" id="fnamevalidation"></label>

                                            </div>
                                        </div>

                                        <div class="col-lg-5 col-sm-5">
                                            <div class="form-group">
                                                <label class="dim col-sm-6">Last name</label>
                                                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control ", placeholder = "Last Name", id = "txtLastName" } })
                                                <label class="text-danger db" id="lnamevalidation"></label>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-lg-8 col-sm-8">
                                    <div class="row">
                                        <div class="col-lg-6 col-sm-6">
                                            <div class="form-group">
                                                <label class="dim col-sm-12"> Street </label>
                                                @Html.EditorFor(model => model.Street, new { htmlAttributes = new { @class = "form-control ", placeholder = "Enter Street ", id = "StretNumber" } })
                                                @Html.ValidationMessageFor(model => model.Street, "", new { @class = "text-danger db" })
                                            </div>
                                        </div>
                                        <div class="col-lg-6 col-sm-6">
                                            <div class="form-group">
                                                <label class="dim col-sm-12">Ste A  </label>
                                                @Html.EditorFor(model => model.Street, new { htmlAttributes = new { @class = "form-control ", placeholder = "STE A", id = "streetNumber" } })
                                                @Html.ValidationMessageFor(model => model.Street, "", new { @class = "text-danger db" })
                                            </div>
                                        </div>
                                    </div>
                                </div>

                            </div>
                            <div class="row">
                                <div class="col-lg-8 col-sm-8">
                                    <div class="row">
                                        <div class="col-lg-8 col-sm-8">
                                            <div class="row">
                                                <div class="col-lg-5 col-sm-5">
                                                    <div class="form-group">
                                                        <label class="dim col-sm-12">City</label>
                                                        @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control ", placeholder = "Enter City", id = "txtcity" } })
                                                        @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger db" })
                                                    </div>
                                                </div>
                                                <div class="col-lg-5 col-sm-5">
                                                    <div class="form-group">
                                                        <label class="dim col-sm-12">State</label>
                                                        @Html.DropDownListFor(model => model.State, (IEnumerable<SelectListItem>)ViewBag.CustomerState, "--Choose State--", new { @class = "form-control dropdowncursor", id = "state" })
                                                        <label class="text-danger db" style="display:none" id="msgstate">Enter Customer State</label>
                                                    </div>

                                                </div>
                                                <div class="col-lg-2 col-sm-2 mt-4">
                                                    <i class="mdi mdi-plus text-primary" data-bs-toggle="modal" data-bs-target="#addcustomerstate"></i>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-lg-4 col-sm-4">
                                            <div class="row">
                                                <div class="col-lg-10 col-sm-10">
                                                    <div class="form-group">
                                                        <label class="dim col-sm-12">Zip</label>
                                                        @Html.EditorFor(model => model.Zip, new { htmlAttributes = new { @class = "form-control ", placeholder = "ZipCode", id = "txtzipcode" } })
                                                        @Html.ValidationMessageFor(model => model.Zip, "", new { @class = "text-danger db" })
                                                    </div>
                                                </div>
                                                <div class="col-lg-2 col-sm-2 mt-4">
                                                    <div class="form-group">
                                                        <i class="mdi mdi-plus text-primary" data-bs-toggle="modal" data-bs-target="#addzipcode"></i>
                                                    </div>
                                                </div>
                                            </div>

                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-lg-8 col-sm-8">
                                    <div class="row">
                                        <div class="col-lg-8 col-sm-8">
                                            <div class="form-group">
                                                <label class="dim col-sm-12">Country </label>
                                                @Html.EditorFor(model => model.Country, new { htmlAttributes = new { @class = "form-control ", placeholder = "Country", id = "Country" } })
                                                @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger db" })
                                            </div>
                                        </div>
                                        <div class="col-lg-4 col-sm-4 mt-4">
                                            <div class="form-group py-3">
                                                @Html.CheckBox("CheckAdress", false, new { @id = "CheckAdress", })
                                                <label class="dim col-sm-8" for="CheckAdress">
                                                    CheckAdress
                                                </label>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-lg-8 col-sm-8">
                                    <div class="row">
                                        <div class="col-lg-6 col-sm-6">
                                            <div class="form-group">
                                                <label class="dim col-sm-12"> Phone</label>
                                                @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control ", placeholder = "Enter Phone ", id = "phonenumber", type = "number" } })
                                                @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger db" })
                                            </div>
                                        </div>
                                        <div class="col-lg-6 col-sm-6">
                                            <div class="form-group">
                                                <label class="dim col-sm-12">Fax</label>
                                                @Html.EditorFor(model => model.Fax, new { htmlAttributes = new { @class = "form-control ", placeholder = "EnterFax", id = "txtfax" } })
                                                @Html.ValidationMessageFor(model => model.Fax, "", new { @class = "text-danger db" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class=" col-lg-12 col-sm-12">
                                    <div class="row">
                                        <div class="col-lg-8 col-sm-8">
                                            <div class="row">
                                                <div class="col-lg-6 col col-sm-6">
                                                    <div class="form-group">
                                                        <label class="dim col-sm-12"> Cell </label>
                                                        @Html.EditorFor(model => model.Cell, new { htmlAttributes = new { @class = "form-control ", placeholder = "Enter Cell ", id = "txtcell", type = "number" } })
                                                        @Html.ValidationMessageFor(model => model.Cell, "", new { @class = "text-danger db" })
                                                    </div>
                                                </div>
                                                <div class="col-lg-6 col-sm-6">
                                                    <div class="row">
                                                        <div class="col-lg-10 col-sm-10">
                                                            <div class="form-group">
                                                                <label class="dim col-sm-8">Provider</label>
                                                                @Html.DropDownListFor(model => model.ProviderId, (IEnumerable<SelectListItem>)ViewBag.Provider, "--Choose Provider--", new { @class = "form-control dropdowncursor", id = "ProviderID" })

                                                                <label class="text-danger db" style="display:none" id="msgcustomertype">Enter Provider</label>
                                                            </div>
                                                        </div>
                                                        <div class="col-lg-2 col-sm-2 mt-4 ">
                                                            <i class="mdi mdi-plus text-primary" data-bs-toggle="modal" data-bs-target="#addprovider"></i>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-lg-4 col-sm-4">
                                            <div class="row ">
                                                <div class="col-lg-10 col-sm-10">
                                                    <div class="form-group">
                                                        <label class="dim col-sm-6">Customer Type </label>
                                                        @Html.DropDownListFor(model => model.CustomerType, (IEnumerable<SelectListItem>)ViewBag.CustomerType, "--Choose Customer Type--", new { @class = "form-control dropdowncursor", id = "customertype" })
                                                        <label class="text-danger db" style="display:none" id="msgcustomertype">Enter Customer Type</label>
                                                    </div>
                                                </div>
                                                <div class="col-lg-2 col-sm-2 mt-4">
                                                    <i class="mdi mdi-plus text-primary" data-bs-toggle="modal" data-bs-target="#addcustomertype"></i>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-lg-8 col-sm-8">
                                    <div class="row">
                                        <div class="col-lg-6 col-sm-6">
                                            <div class="form-group">
                                                <label class="dim col-sm-12"> Other </label>
                                                @Html.EditorFor(model => model.Other, new { htmlAttributes = new { @class = "form-control ", placeholder = "other ", id = "other" } })
                                                @Html.ValidationMessageFor(model => model.Other, "", new { @class = "text-danger db" })
                                            </div>
                                        </div>
                                        <div class="col-lg-6 col-sm-6">
                                            <div class="form-group">
                                                <label class="dim col-sm-12"> Owner Adrss</label>
                                                @Html.EditorFor(model => model.OwnerAddress, new { htmlAttributes = new { @class = "form-control ", placeholder = "Owner Adress ", id = "txtowneraddress" } })
                                                @Html.ValidationMessageFor(model => model.OwnerAddress, "", new { @class = "text-danger db" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-4 col-sm-4">
                                    <div class="form-group">
                                        <label class="dim col-sm-12"> Vehicle Number </label>
                                        @Html.EditorFor(model => model.VehicleNumber, new { htmlAttributes = new { @class = "form-control ", placeholder = "Enter Cell ", id = "txtvehiclenumber" } })
                                        @Html.ValidationMessageFor(model => model.VehicleNumber, "", new { @class = "text-danger db" })
                                    </div>
                                </div>

                            </div>
                            <div class="row">
                                <div class="col-lg-8 col-sm-8">
                                    <div class="row">
                                        <div class="col-lg-6 col-sm-6">
                                            <div class="form-group">
                                                <label class="dim col-sm-6"> Emial </label>
                                                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control ", placeholder = "Email ", id = "email" } })
                                                <label class="text-danger db" id="emailvalidation"></label>
                                            </div>
                                        </div>
                                        <div class="col-lg-6 col-sm-6">
                                            <div class="form-group">
                                                <label class="dim col-sm-6"> Website</label>
                                                @Html.EditorFor(model => model.Website, new { htmlAttributes = new { @class = "form-control ", placeholder = "Website ", id = "Website" } })
                                                @Html.ValidationMessageFor(model => model.Website, "", new { @class = "text-danger db" })
                                            </div>
                                        </div>

                                    </div>
                                </div>
                                <div class="col-lg-4 col-sm-4">
                                    <div class="form-group">
                                        <label class="dim col-sm-12"> DOB </label>
                                        @Html.EditorFor(model => model.Dob, new { htmlAttributes = new { @class = "form-control dropdowncursor", id = "txtdob" } })
                                        @Html.ValidationMessageFor(model => model.Dob, "", new { @class = "text-danger db" })
                                    </div>
                                </div>

                            </div>
                            <div class="row">
                                <div class="col-lg-8 col-sm-8">
                                    <div class="row">
                                        <div class="col-lg-6 col-sm-6">
                                            <div class="form-group">
                                                <label class="dim col-sm-12"> Tax Id [FEIN] </label>
                                                @Html.EditorFor(model => model.TaxIdfein, new { htmlAttributes = new { @class = "form-control ", placeholder = "TaxID ", id = "Taxidfein" } })
                                                @Html.ValidationMessageFor(model => model.TaxIdfein, "", new { @class = "text-danger db" })
                                            </div>
                                        </div>
                                        <div class="col-lg-6 col-sm-6">
                                            <div class="form-group">
                                                <label class="dim col-sm-12"> State ID # </label>
                                                @Html.EditorFor(model => model.StateIdnumber, new { htmlAttributes = new { @class = "form-control ", placeholder = "State ID Number ", id = "Stateidnumber" } })
                                                @Html.ValidationMessageFor(model => model.StateIdnumber, "", new { @class = "text-danger db" })
                                            </div>
                                        </div>

                                    </div>
                                </div>
                                <div class="col-lg-4 col-sm-4">
                                    <div class="form-group">
                                        <label class="dim col-sm-6"> SSN </label>
                                        @Html.EditorFor(model => model.Ssn, new { htmlAttributes = new { @class = "form-control ", placeholder = "SSN ", id = "Ssn" } })
                                        <label class="text-danger db" id="ssnvalidation"></label>
                                    </div>
                                </div>

                            </div>
                            <div class="row">
                                <div class="col-lg-8 col-sm-8">
                                    <div class="row">
                                        <div class="col-lg-6 col-sm-6">
                                            <div class="form-group">
                                                <label class="dim col-sm-12"> Tobacco License </label>
                                                @Html.EditorFor(model => model.TobaccoLicenseNumber, new { htmlAttributes = new { @class = "form-control ", placeholder = "Tobacco Licenese ", id = "TobaccoLiscenese" } })
                                                @Html.ValidationMessageFor(model => model.TobaccoLicenseNumber, "", new { @class = "text-danger db" })
                                            </div>
                                        </div>
                                        <div class="col-lg-6 col-sm-6">
                                            <div class="form-group">
                                                <label class="dim col-sm-6"> Vendor </label>
                                                @Html.EditorFor(model => model.Vendor, new { htmlAttributes = new { @class = "form-control ", placeholder = "Vendor", id = "vendor" } })
                                                @Html.ValidationMessageFor(model => model.Vendor, "", new { @class = "text-danger db" })
                                            </div>
                                        </div>

                                    </div>
                                </div>
                                <div class="col-lg-4 col-sm-4">
                                    <div class="row">
                                        <div class="col-lg-6 col-sm-6">
                                            <div class="form-group">
                                                <label class="dim col-sm-6"> DL Number </label>
                                                @Html.EditorFor(model => model.DrivingLicenseNumber, new { htmlAttributes = new { @class = "form-control ", placeholder = "Driving Licenese ", id = "txtdrivingnumber" } })
                                                @Html.ValidationMessageFor(model => model.DrivingLicenseNumber, "", new { @class = "text-danger db" })
                                            </div>
                                        </div>
                                        <div class="col-lg-6 col-sm-6">
                                            <div class="row">
                                                <div class="col-lg-9 col col-sm-9">
                                                    <div class="form-group">
                                                        <label class="dim col-sm-12">License State</label>
                                                        @Html.DropDownListFor(model => model.DrivingLicenseStateId, (IEnumerable<SelectListItem>)ViewBag.DrivingLicenseState, "--Choose State--", new { @class = "form-control dropdowncursor", id = "txtdrivinglicensestate" })
                                                        <label class="text-danger db" style="display:none" id="msgcustomertype">Enter Driving License State</label>
                                                    </div>
                                                </div>
                                                <div class="col-lg-3 col-sm-3 mt-4">
                                                    <i class="mdi mdi-plus text-primary" data-bs-toggle="modal" data-bs-target="#adddrivinglicensestate"></i>

                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                            </div>
                            <div class="row">
                                <div class="col-lg-8 col-sm-8">
                                    <div class="row">
                                        <div class="col-lg-6 col-sm-6">
                                            <div class="form-group">
                                                <label class="dim col-sm-6"> Cigaratte License </label>
                                                @Html.EditorFor(model => model.CigaretteLicenseNumber, new { htmlAttributes = new { @class = "form-control ", placeholder = "Cigratte License Number ", id = "txtcigarettelicensenumber" } })
                                                @Html.ValidationMessageFor(model => model.CigaretteLicenseNumber, "", new { @class = "text-danger db" })
                                            </div>
                                        </div>
                                        <div class="col-lg-6 col-sm-6">
                                            <div class="form-group">
                                                <label class="dim col-sm-6"> DEA </label>
                                                @Html.EditorFor(model => model.Dea, new { htmlAttributes = new { @class = "form-control ", placeholder = "DEA", id = "dea" } })
                                                @Html.ValidationMessageFor(model => model.Dea, "", new { @class = "text-danger db" })
                                            </div>
                                        </div>

                                    </div>
                                </div>
                                <div class="col-lg-4 col-sm-4 mt-4">
                                    <div class="form-group py-3">
                                        @Html.CheckBox("Authorized", false, new { @id = "Authorized", })
                                        <label class="dim col-sm-8" for="Authorized">
                                            Authorized
                                        </label>
                                    </div>
                                </div>

                            </div>
                            <div class="row">
                                <div class="col-lg-12 col-sm-12">
                                    <div class="form-group">
                                        <label class="dim col-sm-12"> Memo </label>
                                        @Html.TextAreaFor(model => model.Memo,5,12, new { @class = "form-control height", placeholder = "memo", id = "memo"} )
                                        @Html.ValidationMessageFor(model => model.Memo, "", new { @class = "text-danger db" })
                                    </div>
                                </div>
                            </div>
                            @*</form>*@
                        </div>
                        <div class="tab-pane fade row" id="classificationdata">
                            <div class="row">
                                <div class="col-lg-4 col-sm-4">
                                    <div class="row">
                                        <div class="row">
                                            <div class=" col-lg-10 col-sm-10">
                                                <div class="form-group">
                                                    <label class="dim col-sm-6">Group </label>
                                                    @Html.DropDownListFor(model => model.CustomerClassification.GroupId, (IEnumerable<SelectListItem>)ViewBag.Group, "--Group--", new { @class = "form-control dropdowncursor", id = "Group" })
                                                    <label class="text-danger db" style="display:none" id="msgcustomertype">Select Group</label>
                                                </div>
                                            </div>
                                            <div class=" col-lg-2 col-sm-2 py-4">
                                                <i class="mdi mdi-plus text-primary" data-bs-toggle="modal" data-bs-target="#addgroup"></i>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class=" col-lg-10 col-sm-10">
                                                <div class="form-group">
                                                    <label class="dim col-sm-6"> SubGroup </label>
                                                    @Html.DropDownListFor(model => model.CustomerClassification.SubGroupId, (IEnumerable<SelectListItem>)ViewBag.SubGroup, "--SubGroup--", new { @class = "form-control dropdowncursor", id = "SubGroup" })
                                                    <label class="text-danger db" style="display:none" id="msgcustomertype">Select Group</label>
                                                </div>
                                            </div>
                                            <div class="col-lg-2 col-sm-2 py-4">
                                                <i class="mdi mdi-plus text-primary" data-bs-toggle="modal" data-bs-target="#addsubgroup"></i>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-lg-10 col-sm-10">
                                                <div class="form-group">
                                                    <label class="dim col-sm-6">Zone </label>
                                                    @Html.DropDownListFor(model => model.CustomerClassification.Zone, (IEnumerable<SelectListItem>)ViewBag.Zone, "--Zone--", new { @class = "form-control dropdowncursor", id = "Zone" })
                                                    <label class="text-danger db" style="display:none" id="msgcustomertype">Select Zone</label>

                                                </div>
                                            </div>
                                            <div class="col-lg-2 col-sm-2 py-4">
                                                <i class="mdi mdi-plus text-primary" data-bs-toggle="modal" data-bs-target="#addzone"></i>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-lg-10 col-sm-10">
                                                <div class="form-group">
                                                    <label class="dim col-sm-6">BusinessType</label>
                                                    @Html.DropDownListFor(model => model.CustomerClassification.BusinessTypeId, (IEnumerable<SelectListItem>)ViewBag.BusinessType, "--BusinessType--", new { @class = "form-control dropdowncursor", id = "BusinessType" })
                                                    <label class="text-danger db" style="display:none" id="msgcustomertype">Select Business Type</label>

                                                </div>
                                            </div>
                                            <div class="col-lg-2 col-sm-2 py-4">
                                                <i class="mdi mdi-plus text-primary" data-bs-toggle="modal" data-bs-target="#addbusinesstype"></i>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-lg-10 col-sm-10">
                                                <div class="form-group">
                                                    <label class="dim col-sm-6">Salesman</label>
                                                    @Html.DropDownListFor(model => model.CustomerClassification.SalesmanId, (IEnumerable<SelectListItem>)ViewBag.Salesman, "--Salesman--", new { @class = "form-control dropdowncursor", id = "SalesMan" })
                                                    <label class="text-danger db" style="display:none" id="msgcustomertype">Select SalesMan</label>

                                                </div>
                                            </div>
                                            <div class="col-lg-2 col-sm-2 py-4">
                                                <i class="mdi mdi-plus text-primary" data-bs-toggle="modal" data-bs-target="#addsalesman"></i>
                                            </div>
                                        </div>

                                    </div>

                                </div>
                                <div class="col-lg-4 col-sm-4">
                                    <div class="row">
                                        <div class="col-lg-10 col-sm-10">
                                            <div class="form-group">
                                                <label class="dim col-sm-6">Ship To Reference </label>
                                                @Html.DropDownListFor(model => model.CustomerClassification.ShiptoReference, (IEnumerable<SelectListItem>)ViewBag.ShiptoReference, "--Select--", new { @class = "form-control dropdowncursor", id = "ShipToReference" })
                                                <label class="text-danger db" style="display:none" id="msgcustomertype">Select Ship to Reference</label>
                                            </div>
                                        </div>
                                        <div class="col-lg-2 col-sm-2 py-4">
                                            <i class="mdi mdi-plus text-primary" data-bs-toggle="modal" data-bs-target="#addshiptoreference"></i>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-lg-12 col-sm-12">
                                    <div class="row">
                                        <div class="col-lg-4 col-sm-4 border">
                                            <br />
                                            <h2> Shipping Info</h2>
                                            <div class="row">
                                                <div class="col-lg-10 col-sm-10">
                                                    <div class="form-group">
                                                        <label class="dim col-sm-12">ShippedVia</label>
                                                        @Html.DropDownListFor(model => model.CustomerClassification.ShippedViaId, (IEnumerable<SelectListItem>)ViewBag.ShipmentPurchase, "--ShippedVia--", new { @class = "form-control dropdowncursor", id = "ShippedVia" })
                                                        <label class="text-danger db" style="display:none" id="msgcustomertype">Select ShippedVia</label>
                                                    </div>
                                                </div>
                                                <div class="col-lg-2 col-sm-2 py-4">
                                                    <i class="mdi mdi-plus text-primary" data-bs-toggle="modal" data-bs-target="#addshippedvia"></i>

                                                </div>
                                            </div>
                                            <div class="row">
                                                <div class="col-lg-10 col-sm-10">
                                                    <div class="form-group">
                                                        <label class="dim col-sm-12">Route name</label>
                                                        @Html.DropDownListFor(model => model.CustomerClassification.RouteId, (IEnumerable<SelectListItem>)ViewBag.Route, "--Route--", new { @class = "form-control dropdowncursor", id = "Route" })
                                                        <label class="text-danger db" style="display:none" id="msgcustomertype">Select Route</label>
                                                    </div>
                                                </div>
                                                <div class="col-lg-2 col-sm-2 py-4">
                                                    <i class="mdi mdi-plus text-primary" data-bs-toggle="modal" data-bs-target="#addroutename"></i>

                                                </div>
                                            </div>
                                            <div class="row">
                                                <div class="col-lg-10 col-sm-10">
                                                    <div class="form-group">
                                                        <label class="dim col-sm-12">Route Delievery Day</label>
                                                        @Html.DropDownListFor(model => model.CustomerClassification.RouteDeliveryDay, (IEnumerable<SelectListItem>)ViewBag.routedeliverydays, "--Delievery Days--", new { @class = "form-control dropdowncursor", id = "routedeliveryday" })
                                                        <label class="text-danger db" style="display:none" id="msgcustomertype">Select Group</label>

                                                    </div>
                                                </div>

                                            </div>
                                            <div class="row">
                                                <div class="col-lg-10 col-sm-10">
                                                    <div class="form-group">
                                                        <label class="dim col-sm-12">Driver,s name</label>
                                                        @Html.DropDownListFor(model => model.CustomerClassification.DriverName, (IEnumerable<SelectListItem>)ViewBag.Driver, "--Driver--", new { @class = "form-control dropdowncursor", id = "Driver" })
                                                        <label class="text-danger db" style="display:none" id="msgcustomertype">Select Driver</label>
                                                    </div>
                                                </div>
                                                <div class="col-lg-2 col-sm-2 py-4">
                                                    <i class="mdi mdi-plus text-primary" data-bs-toggle="modal" data-bs-target="#adddrivername"></i>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-lg-4 col-sm-4 border">
                                            <br />
                                            <h2>Customer Setting</h2>
                                            <div class="col-lg-12 col-sm-12 mt-4">
                                                <div class="form-group py-3">
                                                    @Html.CheckBox("CustomerClassification.OutOfStateCustomer", false, new { @id = "txtOutOfstateCustomer", })
                                                    <label class="dim col-sm-8" for="OutOfStateCustomer">
                                                        Out Of State Customer
                                                    </label>
                                                </div>
                                            </div>
                                            <div class="col-lg-12 col-sm-12 mt-4">
                                                <div class="form-group py-3">
                                                    @Html.CheckBox("CustomerClassification.AddtoMaillingList", false, new { @id = "txtAddToMailingList", })
                                                    <label class="dim col-sm-8" for="AddtoMaillingList">
                                                        Add To Mailing List
                                                    </label>
                                                </div>
                                            </div>
                                            <div class="col-lg-12 col-sm-12 mt-4">
                                                <div class="form-group py-3">
                                                    @Html.CheckBox("CustomerClassification.AddtoemailTextList", false, new { @id = " txtaddtoemailtextlist", })
                                                    <label class="dim col-sm-8" for="AddtoemailTextLis">
                                                        Add To Emial/Text List
                                                    </label>
                                                </div>
                                            </div>
                                            <div class="col-lg-12 col-sm-12 mt-4">
                                                <div class="form-group py-3">
                                                    @Html.CheckBox("CustomerClassification.RejectPromotion", false, new { @id = "txtrejectpromotion", })
                                                    <label class="dim col-sm-8" for="RejectPromotion">
                                                        Reject Promotion
                                                    </label>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-lg-4 col-sm-4 border">
                                            <br />
                                            <h2>Invoice Setting</h2>
                                            <div class="col-lg-12 col-sm-12 mt-4">
                                                <div class="form-group py-3">
                                                    @Html.CheckBox("CustomerClassification.ViewInvoicePrevBalance", false, new { @id = "txtViewInvoicePrevBalance", })
                                                    <label class="dim col-sm-8" for="ViewInvoicePrevBalance">
                                                        View Invoice Prev.Balance
                                                    </label>
                                                </div>
                                            </div>
                                            <div class="col-lg-12 col-sm-12 mt-4">
                                                <div class="form-group py-3">
                                                    @Html.CheckBox("CustomerClassification.ViewRetailandDiscount", false, new { @id = "txtViewRetailandDiscount", })
                                                    <label class="dim col-sm-8" for="ViewRetailandDiscount">
                                                        View Retail And Discount
                                                    </label>
                                                </div>
                                            </div>
                                            <div class="col-lg-12 col-sm-12">
                                                <div class="form-group">
                                                    <label class="dim col-sm-12">Barcode</label>
                                                    @Html.DropDownListFor(model => model.CustomerClassification.BarCodeId, (IEnumerable<SelectListItem>)ViewData["Group"], "--Retail--", new { @class = "form-control dropdowncursor", id = "txtbarcode" })
                                                    <label class="text-danger db" style="display:none" id="msgcustomertype">Select Barcode</label>
                                                    @*<i class="mdi mdi-plus text-primary" data-bs-toggle="modal" data-bs-target="#addbarcode"></i>*@
                                                </div>
                                            </div>
                                            <div class="col-lg-12 col-sm-12 mt-4">
                                                <div class="form-group">
                                                    <label class="dim col-sm-8"> Default Invoice Copies </label>
                                                    @Html.EditorFor(model => model.CustomerClassification.DefaultInvoiceCopies, new { htmlAttributes = new { @class = "form-control ", id = "txtdefaultinvoicecopies" } })
                                                    @Html.ValidationMessageFor(model => model.CustomerClassification.DefaultInvoiceCopies, "", new { @class = "text-danger db" })
                                                </div>
                                            </div>
                                            <div class="col-lg-12 col-sm-12 mt-4">
                                                <div class="form-group">
                                                    @Html.CheckBox("CustomerClassification.SpecialInvoiceCustom", false, new { @id = "txtSpecialInvoiceCustom", })
                                                    <label class="dim col-sm-8" for="SpecialInvoiceCustom">
                                                        Special Invoive Custom
                                                    </label>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="row mt-3">
                                    <div class="offset-lg-4 col-lg-8 offset-sm-4 col-sm-8">
                                        <div class="form-group">
                                            @Html.CheckBox("CustomerClassification.UseDefaultInvMemo", false, new { @id = "defaultinvmemo", })
                                            <label class="dim col-sm-8" for="Default Inv Memo">
                                                User Default Inv Memo
                                            </label>
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-lg-4 col col-sm-4">
                                        <div class="form-group">
                                            <label class="dim col-sm-12"> Other Customer Reference </label>
                                            @Html.EditorFor(model => model.CustomerClassification.OtherCustomerReference, new { htmlAttributes = new { @class = "form-control ", placeholder = "Other Reference Number ", id = "txtOtherReferenceNumber " } })
                                            @Html.ValidationMessageFor(model => model.CustomerClassification.OtherCustomerReference, "", new { @class = "text-danger db" })
                                        </div>
                                    </div>
                                    <div class="col-lg-8 col col-sm-8">
                                        <div class="form-group">
                                            <label class="dim col-sm-12"> Invoice Memo </label>
                                            @Html.TextAreaFor(model => model.CustomerClassification.InvoiceMemo,5,12,  new { @class = "form-control height", placeholder = "InvoiceMemo", id = "txtinvoicememo" })
                                            @Html.ValidationMessageFor(model => model.CustomerClassification.InvoiceMemo, "", new { @class = "text-danger db" })
                                        </div>
                                    </div>

                                </div>
                            </div>
                        </div>
                        <div class="tab-pane fade row" id="billinginfodata">
                            <div class="col-lg-12 col-sm-12">
                                <div class="row">
                                    <div class="col-lg-8 col-sm-8 col px-md-5 ">
                                        <div class="row  border border-dark ">
                                            <div class="row">
                                                <h2>Sales Information</h2>

                                                <div class="form-group mt-4">
                                                    @Html.CheckBox("CustomerBillingInfo.IsTaxExempt", false, new { @id = "txttaxexempt", })
                                                    <label class="dim col-sm-8 fs-5 text-primary" for=" TaxExempt">
                                                        TaxExempt
                                                    </label>
                                                </div>

                                            </div>
                                            <div class=" col-lg-12 col-sm-12 mt-4">
                                                <div class="row">
                                                    <div class=" col-lg-6 col-sm-6">
                                                        <div class="row">
                                                            <div class="col-lg-10 col-sm-10">
                                                                <div class="form-group ">
                                                                    <label class="col-sm-12 col-lg-12 text-primary">Pricing</label>
                                                                    @Html.DropDownListFor(model => model.CustomerBillingInfo.PricingId, (IEnumerable<SelectListItem>)ViewBag.Pricing, "--Pricing--", new { @class = "form-control dropdowncursor", id = "txtpricingid" })
                                                                    <label class="text-danger db" style="display:none" id="msgcustomertype">Select Barcode</label>
                                                                </div>
                                                            </div>
                                                            <div class="col-lg-2 col-sm-2">
                                                                <div class="col-lg-2 col-sm-2 py-4">
                                                                    <i class="mdi mdi-plus text-primary" data-bs-toggle="modal" data-bs-target="#addpricing"></i>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="col-lg-3 col-sm-3">
                                                        <div class="form-group">
                                                            <label class="col-sm-12"> Retail Plus% </label>
                                                            @Html.EditorFor(model => model.CustomerBillingInfo.RetailPlusPercentage, new { htmlAttributes = new { @class = "form-control ", placeholder = "$0.00", id = "txtretailpluspercentage" } })
                                                            @Html.ValidationMessageFor(model => model.CustomerBillingInfo.RetailPlusPercentage, "", new { @class = "text-danger db" })
                                                        </div>
                                                    </div>
                                                    <div class=" col-lg-3 col-sm-3">
                                                        <div class="form-group">
                                                            <label> Retail Plus$ </label>
                                                            @Html.EditorFor(model => model.CustomerBillingInfo.RetailPlus, new { htmlAttributes = new { @class = "form-control ", placeholder = "$0.00", id = "txtretailplus" } })
                                                            @Html.ValidationMessageFor(model => model.CustomerBillingInfo.RetailPlus, "", new { @class = "text-danger db" })
                                                        </div>
                                                    </div>

                                                </div>
                                            </div>
                                            <br />
                                            <br />
                                            <br />
                                            <div class="col-lg-12 col-sm-12 mt-4">
                                                <div class="row">
                                                    <div class="form-group col-sm-6 col-lg-6">
                                                        <div class="form-group">
                                                            @Html.CheckBox("CustomerBillingInfo.IsGetSalesDiscounts", false, new { @id = "txtisgetsalesdiscounts", })
                                                            <label class="dim col-sm-10  text-primary" for=" GetSales/Discounts">
                                                                Get Sales/Discounts
                                                            </label>
                                                        </div>
                                                    </div>
                                                    <div class="col-sm-6 col-md-6 col-lg-6">
                                                        @Html.CheckBox("CustomerBillingInfo.IsOutOfStateCustomer", false, new { @id = "txtisoutofstatecustomer", })
                                                        <label class="dim col-sm-10 fs-5 text-primary " for=" OutOfStatesCustomers">
                                                            Out Of States Customers
                                                        </label>

                                                    </div>

                                                </div>
                                            </div>
                                        </div>
                                        <br />
                                        <div class=" col-lg-12 col-sm-12 mt-4">
                                            <div class="row">
                                                <div class=" col-lg-4 col-sm-4 mt-5">
                                                    <div class="form-group">
                                                        <button type="button" class="btn btn-light fs-6 btn-lg btn-block" , id="txtspecialprices">Special Prices</button>
                                                    </div>
                                                </div>

                                                <div class=" col-lg-8 col-sm-8 mt-5">
                                                    <div class="form-group">
                                                        <button type="button" class="btn btn-light fs-6 btn-lg btn-block" , id="txtadditionalitemdiscount/charge">Additional Item Discount/Charge</button>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>

                                        <div class=" col-lg-12 col-sm -12">
                                            <div class="row">
                                                <div class=" col-lg-6 col-sm-6  mt-5">
                                                    <div class="form-group">
                                                        <label class="col-sm-6 col-lg-6">Additional Invoice Charge</label>
                                                        @Html.EditorFor(model => model.CustomerBillingInfo.AdditionalInvoiceCharge, new { htmlAttributes = new { @class = "form-control ", placeholder = "%0.00", id = "txtadditionalinvoicecharge" } })
                                                        @Html.ValidationMessageFor(model => model.CustomerBillingInfo.AdditionalInvoiceCharge, "", new { @class = "text-danger db" })
                                                    </div>
                                                </div>
                                                <div class=" col-lg-6 col-sm-6  mt-5">
                                                    <div class="form-group">
                                                        <label class="col-sm-6 col-lg-6"> Additional Invoice Discount </label>
                                                        @Html.EditorFor(model => model.CustomerBillingInfo.AdditionalInvoiceDiscount, new { htmlAttributes = new { @class = "form-control ", placeholder = "$0.00", id = "txtadditionalinvoicediscount" } })
                                                        @Html.ValidationMessageFor(model => model.CustomerBillingInfo.AdditionalInvoiceDiscount, "", new { @class = "text-danger db" })
                                                    </div>
                                                </div>

                                            </div>
                                        </div>

                                    </div>


                                    <br />
                                    <div class="col-lg-4 col-sm-4 border border-dark">
                                        <div class="=row">
                                            <br />
                                            <h2>Customer Credit</h2>
                                            <div class="row">
                                                <div class="col-lg-10 col-sm-10">
                                                    <div class="form-group">
                                                        <label class="dim col-sm-8 text-primary">Payement Terms</label>
                                                        @Html.DropDownListFor(model => model.CustomerBillingInfo.PaymentTermsId, (IEnumerable<SelectListItem>)ViewBag.PaymentTerm, "--PayementTerms--", new { @class = "form-control dropdowncursor", id = "paymenttermsid" })
                                                        <label class="text-danger db" style="display:none" id="msgcustomertype">Select Barcode</label>
                                                    </div>
                                                </div>
                                                <div class="col-lg-2 col-sm-2 py-4">
                                                    <i class="mdi mdi-plus text-primary" data-bs-toggle="modal" data-bs-target="#addpayementterms"></i>
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                <label class="dim col-sm-8 text-primary">Credit Limit</label>
                                                @Html.EditorFor(model => model.CustomerBillingInfo.CreditLimit, new { htmlAttributes = new { @class = "form-control", placeholder = "$0.00", id = "creditlimit" } })
                                                @Html.ValidationMessageFor(model => model.CustomerBillingInfo.CreditLimit, "", new { @class = "text-danger db" })
                                            </div>
                                            <div class="form-group">
                                                @Html.CheckBox("CustomerBillingInfo.IsCreditHold", false, new { @id = "txtcredithold", })
                                                <label class="dim col-sm-8 fs-5 text-danger" for="CreditHold">
                                                    Credit Hold
                                                </label>
                                            </div>
                                            <div class="form-group">
                                                @Html.CheckBox("CustomerBillingInfo.IsBillToBill", false, new { @id = "txtbilltobill", })
                                                <label class="dim col-sm-8 fs-5 text-danger" for=" BillToBill">
                                                    Bill To Bill
                                                </label>
                                            </div>
                                            <div class="form-group">
                                                @Html.CheckBox("CustomerBillingInfo.IsNoCheckAccepted", false, new { @id = "txtnocheckaccepted", })
                                                <label class="dim col-sm-8 fs-5 text-danger" for=" NoChecksAccepted">
                                                    No Checks Accepted
                                                </label>
                                            </div>
                                            <div class="form-group">
                                                @Html.CheckBox("CustomerBillingInfo.IsExclude", false, new { @id = "txtexclude", })
                                                <label class="dim col-sm-8 fs-6 text-success" for="Exclude Overdue Popup Message on new Invoice">
                                                    Exclude Overdue Popup Message on new Invoice
                                                </label>
                                            </div>
                                            <div class="row">

                                                <div class="form-group ">
                                                    <label class="text-primary">3rd Party Check Charge</label>
                                                    @Html.EditorFor(model => model.CustomerBillingInfo.ThirdPartyCheckCharge, new { htmlAttributes = new { @class = "form-control ", placeholder = "$0.00", id = "txtthirdpartycheckcharge" } })
                                                    @Html.ValidationMessageFor(model => model.CustomerBillingInfo.ThirdPartyCheckCharge, "", new { @class = "text-danger db" })
                                                </div>
                                            </div>
                                            <div class=" col-lg-12 col-sm-12">
                                                <div class="row">
                                                    <div class="  col-lg-6 col-sm-6 ">
                                                        <div class="form-group">
                                                            @Html.CheckBox("CustomerBillingInfo.IsCashBackBalance", false, new { @id = "txtiscashbackbalance", })
                                                            <label class=" text-success" for=" CheckBackBalance">
                                                                Check Back Balance
                                                            </label>
                                                        </div>
                                                    </div>
                                                    <div class=" col-lg-6 col-sm-6">
                                                        <div class="form-group">

                                                            @Html.EditorFor(model => model.CustomerBillingInfo.CashBackBalance, new { htmlAttributes = new { @class = "form-control ", placeholder = "0.00", id = "txtcashbackbalance" } })
                                                            @Html.ValidationMessageFor(model => model.CustomerBillingInfo.CashBackBalance, "", new { @class = "text-danger db" })
                                                        </div>
                                                    </div>

                                                </div>

                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-12 col-sm-12">
                                <div class="row">
                                    <div class="col-lg-8  col px-md-5 mt-3 ">
                                        <div class="row  border border-dark ">
                                            <div class="col-lg-12 col-sm-12">
                                                <div class="row">
                                                    <div class=" col-lg-4 col-sm-4">
                                                        <div class="form-group  mt-5 fs-6">
                                                            <label class=" fs-6 text-primary">Schedule Message</label>

                                                        </div>
                                                    </div>
                                                    <div class=" col-lg-4 col-sm-4">
                                                        <div class="form-group  mt-4 ">
                                                            <label class=" text-primary">From</label>
                                                            @Html.EditorFor(model => model.CustomerBillingInfo.ScheduleMessageFromDate, new { htmlAttributes = new { @class = "form-control dropdowncursor", id = "txtschedulemessagefromdate" } })
                                                            @Html.ValidationMessageFor(model => model.CustomerBillingInfo.ScheduleMessageFromDate, "", new { @class = "text-danger db" })
                                                        </div>
                                                    </div>
                                                    <div class=" col-lg-4 col-sm-4">
                                                        <div class="form-group  mt-4 ">
                                                            <label class=" text-primary"> To </label>
                                                            @Html.EditorFor(model => model.CustomerBillingInfo.ScheduleMessageToDate, new { htmlAttributes = new { @class = "form-control dropdowncursor", id = "txtschedulemessagetodate" } })
                                                            @Html.ValidationMessageFor(model => model.CustomerBillingInfo.ScheduleMessageToDate, "", new { @class = "text-danger db" })
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-lg-12 col-sm-12">
                                                <div class="row">
                                                    <div class="form-group ">
                                                        @Html.TextAreaFor(model => model.CustomerBillingInfo.ScheduleMessage,5,12,  new { @class = "form-control height", placeholder = "", id = "txtschedulemessage" } )
                                                        @Html.ValidationMessageFor(model => model.CustomerBillingInfo.ScheduleMessage, "", new { @class = "text-danger db" })
                                                    </div>
                                                </div>
                                            </div>

                                        </div>
                                    </div>
                                    <div class=" col-lg-4 col-sm-4 border border-dark mt-3">
                                        <div class="form-group mt-4">
                                            @Html.CheckBox("CustomerBillingInfo.IsPopupMessage", false, new { @id = "txtispopupmessage", })
                                            <label class="dim col-sm-8 fs-5 text-primary" for=" Pop Up Message">
                                                Pop Up Message
                                            </label>
                                        </div>
                                        <div class=" col-lg-12 col-sm-12 ">

                                            <div class="form-group  mt-4">

                                                @Html.TextAreaFor(model => model.CustomerBillingInfo.PopupMessage,7,12,  new { @class = "form-control height", placeholder = "", id = "txtpopupmessage"  })
                                                @Html.ValidationMessageFor(model => model.CustomerBillingInfo.PopupMessage, "", new { @class = "text-danger db" })

                                            </div>
                                        </div>

                                    </div>

                                </div>

                            </div>
                        </div>

                        <div class="tab-pane fade row" id="saledata">
                            <div class="row mt-3">
                                <div class="col-lg-12 col-md-12 col-sm-12 col-12 table-responsive" id="saletable">
                                    <table class="table table-bordered table-condensed" id="saletable" style="border:0.7px solid;">
                                        <thead>
                                            <tr class="text-center" style="border:0.7px solid;border-bottom:1.4px solid">
                                                <th class="w-auto">Sr#</th>
                                                <th class="w-auto">Invoice#</th>
                                                <th class="w-auto">Inv. Date</th>
                                                <th class="w-auto">Printed Date</th>
                                                <th class="w-auto">SaleMan</th>
                                                <th class="w-auto">User</th>
                                                <th class="w-auto">Total Amount</th>
                                                <th class="w-auto">Total Paid</th>
                                                <th class="w-auto">Due</th>
                                            </tr>
                                        </thead>
                                        <tbody id="appendnewrowforsale">
                                            <!-- hidden row -->

                                        </tbody>
                                    </table>

                                </div>
                            </div>
                        </div>
                        <div class="tab-pane fade row" id="paymentdata">
                            <div class="row mt-3">
                                <div class="col-lg-12 col-md-12 col-sm-12 col-12 table-responsive" id="paymenttable">
                                    <table class="table table-bordered table-condensed" id="paymenttable" style="border:0.7px solid;">
                                        <thead>
                                            <tr class="text-center" style="border:0.7px solid;border-bottom:1.4px solid">
                                                <th style="width:10px;">Date Paid</th>
                                                <th style="width:10px;">Time</th>
                                                <th style="width:10px;">Hold Date</th>
                                                <th style="width:10px;">SID</th>
                                                <th style="width:10px;">Type</th>
                                                <th style="width:10px;">Check#</th>
                                                <th style="width:10px;">Amount Paid</th>
                                                <th style="width:10px;">Amount Alloc</th>
                                                <th style="width:10px;">Change</th>
                                               
                                            </tr>
                                        </thead>
                                        <tbody id="appendnewrowforpayment">
                                            <!-- hidden row -->
                                            
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>

                        <div class="tab-pane fade row" id="accounthistorydata">
                            <div class=" col-lg-12 col-sm-12">
                                <div class=" row ">
                                    <div class=" col-lg-6 col-sm-6 col px-md-5 ">
                                        <h3 class=" text-primary"> Customer,s Balance History</h3>
                                        <div class="row border border-dark ">
                                            <table class="table" id="accounthistoryscroll">
                                                <thead>
                                                    <tr>
                                                        <th scope="col" class="text-primary"> Cust balance</th>
                                                        <th scope="col" class="text-primary">Accurate Balacne</th>
                                                        <th scope="col" class="text-primary">DateTime</th>

                                                    </tr>
                                                </thead>
                                                <tbody>

                                                    <tr>
                                                        <th scope="col"> 92$</th>
                                                        <th scope="col">90$</th>
                                                        <th scope="col">10:13pm</th>

                                                    </tr>
                                                    <tr>
                                                        <th scope="col"> 100$</th>
                                                        <th scope="col">98$</th>
                                                        <th scope="col">11:37</th>

                                                    </tr>
                                                    <tr>
                                                        <th scope="col"> 192$</th>
                                                        <th scope="col">60$</th>
                                                        <th scope="col">10:13pm</th>

                                                    </tr>
                                                    <tr>
                                                        <th scope="col"> 1500$</th>
                                                        <th scope="col">98$</th>
                                                        <th scope="col">11:37</th>

                                                    </tr>
                                                    <tr>
                                                        <th scope="col"> 792$</th>
                                                        <th scope="col">980$</th>
                                                        <th scope="col">10:13pm</th>

                                                    </tr>
                                                    <tr>
                                                        <th scope="col"> 100$</th>
                                                        <th scope="col">98$</th>
                                                        <th scope="col">11:37</th>

                                                    </tr>
                                                    <tr>
                                                        <th scope="col"> 92$</th>
                                                        <th scope="col">90$</th>
                                                        <th scope="col">10:13pm</th>

                                                    </tr>
                                                    <tr>
                                                        <th scope="col"> 100$</th>
                                                        <th scope="col">98$</th>
                                                        <th scope="col">11:37</th>

                                                    </tr>

                                                    <tr>
                                                        <th scope="col"> 92$</th>
                                                        <th scope="col">90$</th>
                                                        <th scope="col">10:13pm</th>

                                                    </tr>

                                                </tbody>
                                            </table>

                                        </div>
                                    </div>


                                    <div class=" col-lg-6 col-sm-6">
                                        <h3 class="text-primary"> Attachments History</h3>
                                        <div class=" row border border-dark">
                                            <div class="col-lg-12 col-sm-12">
                                                <div class="row">

                                                    <div class=" col-lg-6 col-sm-6">
                                                        <label class="text-primary">Attch-Desc</label>

                                                    </div>
                                                    <div class=" col-lg-6 col-sm-6  ">
                                                        <label class="text-primary  ">Date- Time</label>

                                                    </div>
                                                </div>
                                            </div>
                                            <br />
                                            <br />
                                            <br />
                                            <br />
                                            <br />
                                            <br />
                                            <br />
                                            <br />
                                            <br />
                                            <br />


                                        </div>


                                        <h3 class="text-primary"> Account Statistics </h3>
                                        <div class="row border border-dark">
                                            <div class=" col-lg-12 col-sm-12">
                                                <div class="row">
                                                    <div class="col-lg-6 col sm-6">
                                                        <div class="form-group ">
                                                            <label class=" text-primary"> Created </label>
                                                            @Html.EditorFor(model => model.CustomerBillingInfo.ScheduleMessageToDate, new { htmlAttributes = new { @class = "form-control dropdowncursor", id = "txtschedulemessagetodate" } })
                                                            @Html.ValidationMessageFor(model => model.CustomerBillingInfo.ScheduleMessageToDate, "", new { @class = "text-danger db" })
                                                        </div>
                                                    </div>
                                                    <div class=" col-lg-6 col-sm-6">
                                                        <div class="form-group ">
                                                            <label class=" text-primary"> Last Used</label>
                                                            @Html.EditorFor(model => model.CustomerBillingInfo.ScheduleMessageToDate, new { htmlAttributes = new { @class = "form-control dropdowncursor", id = "txtschedulemessagetodate" } })
                                                            @Html.ValidationMessageFor(model => model.CustomerBillingInfo.ScheduleMessageToDate, "", new { @class = "text-danger db" })
                                                        </div>
                                                    </div>

                                                </div>
                                            </div>
                                            <div class=" col-lg-12 col-sm-12">

                                                <div class="row">
                                                    <div class="col-lg-6 col sm-6">
                                                        <div class="form-group ">
                                                            <label class=" text-primary"> Enabled </label>
                                                            @Html.EditorFor(model => model.Company, new { htmlAttributes = new { @class = "form-control ", id = "txtschedulemessagetodate" } })
                                                            @Html.ValidationMessageFor(model => model.Company, "", new { @class = "text-danger db" })
                                                        </div>
                                                    </div>
                                                    <div class=" col-lg-6 col-sm-6">
                                                        <div class="form-group ">
                                                            <label class=" text-primary"> Last Sales</label>
                                                            @Html.EditorFor(model => model.CustomerBillingInfo.ScheduleMessageToDate, new { htmlAttributes = new { @class = "form-control dropdowncursor", id = "txtschedulemessagetodate" } })
                                                            @Html.ValidationMessageFor(model => model.CustomerBillingInfo.ScheduleMessageToDate, "", new { @class = "text-danger db" })
                                                        </div>
                                                    </div>


                                                </div>
                                            </div>
                                            <br />
                                            <br />
                                            <div class=" col-lg-12 col-sm-12">

                                                <div class="row">
                                                    <div class="col-lg-6 col sm-6">
                                                        <div class="form-group ">
                                                            <label class=" text-primary"> Disabled </label>
                                                            @Html.EditorFor(model => model.Company, new { htmlAttributes = new { @class = "form-control ", id = "txtschedulemessagetodate" } })
                                                            @Html.ValidationMessageFor(model => model.Company, "", new { @class = "text-danger db" })
                                                        </div>
                                                    </div>
                                                    <div class=" col-lg-6 col-sm-6">
                                                        <div class="form-group ">
                                                            <label class=" text-primary"> Last Pay </label>
                                                            @Html.EditorFor(model => model.CustomerBillingInfo.ScheduleMessageToDate, new { htmlAttributes = new { @class = "form-control dropdowncursor", id = "txtschedulemessagetodate" } })
                                                            @Html.ValidationMessageFor(model => model.CustomerBillingInfo, "", new { @class = "text-danger db" })
                                                        </div>
                                                    </div>


                                                </div>

                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                    </div>
                </div>
            </div>

        </div>
    </div>
</div>


@*AddProvider*@
<div id="addprovider" class="modal fade" role="dialog">
    <div class="modal-dialog">


        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title mx-auto" id="ModalLabel">Add Provider </h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close" onclick="closemodal()">
                    <span aria-hidden="true">×</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="form-group">
                        <label for="groupname">Add Name </label>
                        <input class="form-control" type="text" placeholder="Name" id="providername" />
                        <label class="text-danger db" style="display:none" id="msgprovidername">Enter Provider Name</label>
                    </div>
                    <button type="button" onclick="addproviderdata()" class="btn btn-dark text-white mx-auto col-md-3 validationchkstore"><p style="color:white">Submit</p></button>
                </div>

            </div>

        </div>
    </div>
</div>
@*CustomerType*@
<div id="addcustomertype" class="modal fade" role="dialog">
    <div class="modal-dialog">


        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title mx-auto" id="ModalLabel">Add TypeName </h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close" onclick="closemodal()">
                    <span aria-hidden="true">×</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="form-group">
                        <label for="groupname">Add TypeName </label>
                        <input class="form-control" type="text" placeholder="Customer Type " id="customertype" />
                        <label class="text-danger db" style="display:none" id="msgcustomertype">Enter Customer TypeName </label>
                    </div>
                    <button type="button" onclick="addcustomertypedata()" class="btn btn-dark text-white mx-auto col-md-3 validationchkstore"><p style="color:white">Submit</p></button>
                </div>

            </div>

        </div>
    </div>
</div>


@*Add Customer Satet*@
<div id="addcustomerstate" class="modal fade" role="dialog">
    <div class="modal-dialog">


        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title mx-auto" id="ModalLabel">Add Customer State   </h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close" onclick="closemodal()">
                    <span aria-hidden="true">×</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="form-group">
                        <label for="groupname">StateName </label>
                        <input class="form-control" type="text" placeholder="StateName" id="StateName" />
                        <label class="text-danger db" style="display:none" id="msgStateName">Enter State Name</label>
                    </div>
                    <button type="button" onclick="addcustomerstatedata()" class="btn btn-dark text-white mx-auto col-md-3 validationchkstore"><p style="color:white">Submit</p></button>
                </div>

            </div>

        </div>
    </div>
</div>
@*Add Driving License State*@
<div id="adddrivinglicensestate" class="modal fade" role="dialog">
    <div class="modal-dialog">


        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title mx-auto" id="ModalLabel">Add Driving License State   </h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close" onclick="closemodal()">
                    <span aria-hidden="true">×</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="form-group">
                        <label for="groupname">Name </label>
                        <input class="form-control" type="text" placeholder="Name" id="driverlicensestatename" />
                        <label class="text-danger db" style="display:none" id="msgDrivingStateName">Enter  Driving State Name</label>
                    </div>
                    <button type="button" onclick="adddriverlicensestatedata()" class="btn btn-dark text-white mx-auto col-md-3 validationchkstore"><p style="color:white">Submit</p></button>
                </div>

            </div>

        </div>
    </div>
</div>

@*AddBarCode*@
<div id="addbarcode" class="modal fade" role="dialog">
    <div class="modal-dialog">


        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title mx-auto" id="ModalLabel">Add Barcode </h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close" onclick="closemodal()">
                    <span aria-hidden="true">×</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="form-group">
                        <label for="groupname">Add Barcode </label>
                        <input class="form-control" type="text" placeholder="Barcode" id="barcodenumber" />
                        <label class="text-danger db" style="display:none" id="msggroupname">Enter Barcode </label>
                    </div>
                    <button type="button" onclick="" class="btn btn-dark text-white mx-auto col-md-3 validationchkstore"><p style="color:white">Submit</p></button>
                </div>

            </div>

        </div>
    </div>
</div>
<div id="addshiptoreference" class="modal fade" role="dialog">
    <div class="modal-dialog">


        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title mx-auto" id="ModalLabel">Add Ship TO Reference  </h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close" onclick="closemodal()">
                    <span aria-hidden="true">×</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="form-group">
                        <label for="shiptoreferencename">Name </label>
                        <input class="form-control" type="text" placeholder="Name" id="shiptoreferencename" />
                        <label class="text-danger db" style="display:none" id="msgshiptoreferencename">Enter  Ship To Reference Name</label>
                    </div>
                    <button type="button" onclick="addshiptoreference()" class="btn btn-dark text-white mx-auto col-md-3 validationchkstore"><p style="color:white">Submit</p></button>
                </div>

            </div>

        </div>
    </div>
</div>
@*AddSalesman*@
<div id="addsalesman" class="modal fade" role="dialog">
    <div class="modal-dialog">


        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title mx-auto" id="ModalLabel">Add Sales Man </h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close" onclick="closemodal()">
                    <span aria-hidden="true">×</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="form-group">
                        <label for="salesmanname"> Name </label>
                        <input class="form-control" type="text" placeholder="SalesMan Name" id="salesmanname" />
                        <label class="text-danger db" style="display:none" id="msgsalesmanname">Enter Sales Man Name</label>
                    </div>
                    <div class="form-group">
                        <label for="salesmanaddress"> Address </label>
                        <input class="form-control" type="text" placeholder="SalesMan Address" id="salesmanaddress" />
                        <label class="text-danger db" style="display:none" id="msgsalesmanaddress">Enter Sales Man Address </label>
                    </div>
                    <div class="form-group">
                        <label for="salesmancity"> City </label>
                        <input class="form-control" type="text" placeholder="SalesMan City" id="salesmancity" />
                        <label class="text-danger db" style="display:none" id="msgsalesmanCity">Enter Sales Man City</label>
                    </div>
                    <div class="form-group">
                        <label for="salesmanstate">State </label>
                        <input class="form-control" type="text" placeholder="SalesManState" id="salesmanstate" />
                        <label class="text-danger db" style="display:none" id="msgsalesmanState">Enter Sales Man State </label>
                    </div>
                    <div class="form-group">
                        <label for="salesmanPhone">Phone </label>
                        <input class="form-control" type="number" placeholder="SalesMan Phone" id="salesmanPhone" />
                        <label class="text-danger db" style="display:none" id="msgsalesmanPhone">Enter Sales Man Phone</label>
                    </div>
                    <div class="form-group">
                        <label for="salesmanmobile"> Mobile </label>
                        <input class="form-control" type="text" placeholder="SalesMan Mobile" id="salesmanmobile" />
                        <label class="text-danger db" style="display:none" id="msgsalesmanMobile">Enter Sales Man Mobile </label>
                    </div>
                    <div class="form-group">
                        <label for="groupname"> Email </label>
                        <input class="form-control" type="text" placeholder="SalesMan Email" id="salesmanemail" />
                        <label class="text-danger db" style="display:none" id="msgsalesmanEmail">Enter Sales Man Email </label>
                    </div>
                    <div class="form-group">
                        <label for="salesmancountry"> Country </label>
                        <input class="form-control" type="text" placeholder="SalesMan Country" id="salesmancountry" />
                        <label class="text-danger db" style="display:none" id="msgsalesmanCountry">Enter Sales Man Country </label>
                    </div>

                    <button type="button" onclick="addsalesmandata()" class="btn btn-dark text-white mx-auto col-md-3 validationchkstore"><p style="color:white">Submit</p></button>
                </div>

            </div>

        </div>
    </div>
</div>
@*AddShippedVia*@
<div id="addshippedvia" class="modal fade" role="dialog">
    <div class="modal-dialog">


        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title mx-auto" id="ModalLabel">Add Shipped Via </h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close" onclick="closemodal()">
                    <span aria-hidden="true">×</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="form-group">
                        <label for="ShippedType">Type </label>
                        <input class="form-control" type="text" placeholder="Shipped Type " id="ShippedType" />
                        <label class="text-danger db" style="display:none" id="msgshippedvia">Enter Shipped Type </label>
                    </div>
                    <div class="form-group">
                        <label for="Shippeddate">CreateDate </label>
                        <input class="form-control" type="date" placeholder="Shipped Date " id="Shippeddate" />
                        <label class="text-danger db" style="display:none" id="msgshippedvia">Enter Shipped CreateDate </label>
                    </div>
                    <div class="form-group">
                        <label for="ShipNumber">ShipNumber </label>
                        <input class="form-control" type="text" placeholder="ShipNumber " id="ShipNumber" />
                        <label class="text-danger db" style="display:none" id="msgshippedvia">Enter ShipNumber </label>
                    </div>
                    <div class="form-group">
                        <label for="Reference">Reference </label>
                        <input class="form-control" type="text" placeholder="Reference " id="Reference" />
                        <label class="text-danger db" style="display:none" id="msgshippedvia">Enter ShipReference </label>
                    </div>
                    <button type="button" onclick="addshipmentpurchasedata()" class="btn btn-dark text-white mx-auto col-md-3 validationchkstore"><p style="color:white">Submit</p></button>
                </div>

            </div>

        </div>
    </div>
</div>
@*AddRouteName*@
<div id="addroutename" class="modal fade" role="dialog">
    <div class="modal-dialog">


        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title mx-auto" id="ModalLabel">Add Route Name </h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close" onclick="closemodal()">
                    <span aria-hidden="true">×</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="form-group">
                        <label for="routename">RouteName </label>
                        <input class="form-control" type="text" placeholder="Route Name" id="routename" />
                        <label class="text-danger db" style="display:none" id="msgroutename">Enter Route Name</label>
                    </div>
                    <div class="form-group">
                        <label for="routeCreateDate">CreateDate </label>
                        <input class="form-control" type="date" placeholder="CreateDate" id="routeCreateDate" />
                        <label class="text-danger db" style="display:none" id="msgroutecreatedate">Enter Route CreateDate</label>
                    </div>
                    <div class="form-group">
                        <label for="InitialLocation">InitialLocation</label>
                        <input class="form-control" type="text" placeholder="InitialLocation" id="InitialLocation" />
                        <label class="text-danger db" style="display:none" id="msgrouteinitilalocation">Enter InitialLocation</label>
                    </div>
                    <div class="form-group">
                        <label for="DesignationLocation">DesignationLocation </label>
                        <input class="form-control" type="text" placeholder="DesignationLocation" id="DesignationLocation" />
                        <label class="text-danger db" style="display:none" id="msgroutedesignationlocation">Enter Route DesignationLocation</label>
                    </div>
                    <button type="button" onclick="addroutedata()" class="btn btn-dark text-white mx-auto col-md-3 validationchkstore"><p style="color:white">Submit</p></button>
                </div>

            </div>

        </div>
    </div>
</div>

@*AddDriverName*@
<div id="adddrivername" class="modal fade" role="dialog">
    <div class="modal-dialog">


        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title mx-auto" id="ModalLabel">Add Driver Name </h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close" onclick="closemodal()">
                    <span aria-hidden="true">×</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="form-group">
                        <label for="drivername">Name </label>
                        <input class="form-control" type="text" placeholder="Driver Name" id="drivername" />
                        <label class="text-danger db" style="display:none" id="msggroupname">Enter Driver Name</label>
                    </div>
                    <div class="form-group">
                        <label for="driverEmail">Email  </label>
                        <input class="form-control" type="text" placeholder="Driver Email " id="driverEmail " />
                        <label class="text-danger db" style="display:none" id="msgEmail ">Enter Driver Email </label>
                    </div>
                    <div class="form-group">
                        <label for="driverMobile">Mobile </label>
                        <input class="form-control" type="number" placeholder="Driver Mobile" id="driverMobile" />
                        <label class="text-danger db" style="display:none" id="msgMobile">Enter Driver Mobile</label>
                    </div>
                    <div class="form-group">
                        <label for="driverPhone">Phone </label>
                        <input class="form-control" type="number" placeholder="Driver Phone" id="driverPhone" />
                        <label class="text-danger db" style="display:none" id="msgPhone">Enter Driver Phone</label>
                    </div>
                    <div class="form-group">
                        <label for="driverCity">City  </label>
                        <input class="form-control" type="text" placeholder="Driver City " id="driverCity " />
                        <label class="text-danger db" style="display:none" id="msgcityname">Enter Driver City </label>
                    </div>
                    <div class="form-group">
                        <label for="driverCountry">Country </label>
                        <input class="form-control" type="text" placeholder="Driver Country" id="driverCountry" />
                        <label class="text-danger db" style="display:none" id="msgcountryname">Enter Driver Country</label>
                    </div>
                    <div class="form-group">
                        <label for="driverDrivingLicenseNumber">DrivingLicenseNumber </label>
                        <input class="form-control" type="text" placeholder="Driver DrivingLicenseNumber" id="driverDrivingLicenseNumber" />
                        <label class="text-danger db" style="display:none" id="msggDrivingLicenseNumber">Enter Driver DrivingLicenseNumber</label>

                    </div>
                    <div class="form-group">
                        <label for="driverRegisteredOn">RegisteredOn </label>
                        <input class="form-control" type="text" placeholder="Driver RegisteredOn" id="driverRegisteredOn" />
                        <label class="text-danger db" style="display:none" id="msggroupname">Enter Driver RegisteredOn</label>
                    </div>
                    <div class="form-group">
                        <label for="driverVehicleNumber">VehicleNumber </label>
                        <input class="form-control" type="text" placeholder="Driver VehicleNumber" id="driverVehicleNumber" />
                        <label class="text-danger db" style="display:none" id="msgVehicleNumber">Enter Driver VehicleNumber</label>
                    </div>
                    <div class="form-group">
                        <label for="driverAddress">Address</label>
                        <input class="form-control" type="text" placeholder="Driver Address" id="driverAddress" />
                        <label class="text-danger db" style="display:none" id="msgDriverAddresse">Enter Driver Address</label>
                    </div>
                    <div class="form-group">
                        <label for="driverAddress1">Address1 </label>
                        <input class="form-control" type="text" placeholder="Driver Address1 " id="driverAddress1 " />
                        <label class="text-danger db" style="display:none" id="msgDriverAddresse">Enter DriverAddress1 </label>
                    </div>
                    <button type="button" onclick="adddriverdata()" class="btn btn-dark text-white mx-auto col-md-3 validationchkstore"><p style="color:white">Submit</p></button>
                </div>

            </div>

        </div>
    </div>
</div>
@*AddGroup*@
<div id="addgroup" class="modal fade" role="dialog" tabindex="-1">
    <div class="modal-dialog">


        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title mx-auto" id="ModalLabel">Add Group </h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close" onclick="closemodal()">
                    <span aria-hidden="true">×</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="form-group">
                        <label for="groupname">Add Name</label>
                        <input class="form-control" type="text" placeholder="Name" id="groupname" />
                        <label class="text-danger db" style="display:none" id="msggroupname">Enter Group Name</label>
                    </div>
                    <button type="button" onclick="addgroupdata()" class="btn btn-dark text-white mx-auto col-md-3 validationchkstore"><p style="color:white">Submit</p></button>
                </div>

            </div>

        </div>
    </div>
</div>
@*AddSubGroup*@
<div id="addsubgroup" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title mx-auto" id="ModalLabel">Add Sub Group </h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close" onclick="closemodal()">
                    <span aria-hidden="true">×</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="form-group">
                        <label for="groupname">  SubGroupName </label>
                        <input class="form-control" type="text" placeholder=" Sub Group Name" id="subgroupname" />
                        <label class="text-danger db" style="display:none" id="msgsubgroupname">Enter Sub Group Name</label>
                    </div>
                    <div class="form-group">
                        <div class="row">
                            <div class="col-lg-10 col-sm-10">
                                <label for="parentgroupname">  ParentGroupName </label>
                                <select class="form-control dropdowncursor" id="parentgroupname">
                                    <option value="Select">Select</option>
                                </select>
                                <label class="text-danger db" style="display:none" id="msgparentGroupNamename">EnterParentGroupName</label>
                            </div>
                            <div class="col-lg-2 col-sm-2 py-4">
                                <i class="mdi mdi-plus text-primary" onclick="subgroupmodalclose()"></i>
                            </div>
                        </div>

                    </div>
                    <button type="button" onclick="addsubgroupdata()" class="btn btn-dark text-white mx-auto col-md-3 validationchkstore"><p style="color:white">Submit</p></button>
                </div>
            </div>
        </div>
    </div>
</div>
@*AddZone*@
<div id="addzone" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title mx-auto" id="ModalLabel">Add zone </h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close" onclick="closemodal()">
                    <span aria-hidden="true">×</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="form-group">
                        <label for="zonename">Name </label>
                        <input class="form-control" type="text" placeholder="Zone Name" id="zonename" />
                        <label class="text-danger db" style="display:none" id="msgzonename">Enter Zone Name</label>
                    </div>
                    <button type="button" onclick="addzonedata()" class="btn btn-dark text-white mx-auto col-md-3 validationchkstore"><p style="color:white">Submit</p></button>
                </div>

            </div>

        </div>
    </div>
</div>
@*AddBusinessType*@
<div id="addbusinesstype" class="modal fade" role="dialog">
    <div class="modal-dialog">


        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title mx-auto" id="ModalLabel">Add Business Type  </h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close" onclick="closemodal()">
                    <span aria-hidden="true">×</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="form-group">
                        <label for="groupname">TypeName </label>
                        <input class="form-control" type="text" placeholder="BusinessType" id="businesstype" />
                        <label class="text-danger db" style="display:none" id="msgbusinesstype">Enter Business Type Name</label>
                    </div>
                    <button type="button" onclick="addbusinesstypedata()" class="btn btn-dark text-white mx-auto col-md-3 validationchkstore"><p style="color:white">Submit</p></button>
                </div>

            </div>

        </div>
    </div>
</div>
<div id="addpayementterms" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title mx-auto" id="ModalLabel">Add Payement Terms  </h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close" onclick="closemodal()">
                    <span aria-hidden="true">×</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="form-group">
                        <label for="pyementtermsname"> Name </label>
                        <input class="form-control" type="text" placeholder="Name" id="pyementtermsname" />
                        <label class="text-danger db" style="display:none" id="msgpayementtermsname">Enter Payement Terms </label>
                    </div>
                    <button type="button" onclick="addpaymenttermsdata()" class="btn btn-dark text-white mx-auto col-md-3 validationchkstore"><p style="color:white">Submit</p></button>
                </div>

            </div>

        </div>
    </div>
</div>
<div id="addpricing" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title mx-auto" id="ModalLabel">Add Pricing </h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close" onclick="closemodal()">
                    <span aria-hidden="true">×</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="form-group">
                        <label for="pricingname"> Name </label>
                        <input class="form-control" type="text" placeholder="Name" id="pricingname" />
                        <label class="text-danger db" style="display:none" id="msgpricingname">Enter Pricing</label>
                    </div>
                    <button type="button" onclick="addpricingdata()" class="btn btn-dark text-white mx-auto col-md-3 validationchkstore"><p style="color:white">Submit</p></button>
                </div>

            </div>

        </div>
    </div>
</div>

<div id="addzipcode" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content mw-125">
            <div class="modal-header">
                <h5 class="modal-title mx-auto" id="ModalLabel">Add ZipCode</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close" onclick="closemodal()">
                    <span aria-hidden="true">×</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="w-100 h-100 w-100 d-inline-block actionbox" id="listbtns">
                        <div id="zipcodeonlisticon" class="row">
                            <div class="row my-3">
                                <img src="~/images/add.jpeg" style="width:50px" title="Add" onclick="Addnewrowforzipcodetable()" />
                                <img src="~/images/printer.png" style="width:50px" title="Print" />
                                <div class="w-auto">
                                    <select id="stateselect">
                                        <option value="Select">Select</option>
                                    </select>
                                </div>
                            </div>
                            <div class="w-auto">
                                <div class="d-flex">
                                    <label>Free Search</label>
                                    <input type="text" id="modalzipcodesearch" class="border" />
                                </div>
                            </div>
                        </div>
                        <div id="onaddiconclick" class="d-flex"></div>
                        <div id="onanothericonclick" class="d-flex"></div>
                        <br>
                        <input type="hidden" id="fortablerowid" />
                    </div>
                    <div class="col-lg-12 col-md-12 col-sm-12 col-12 table-responsive">
                        <table class="table table-bordered table-condensed overflow-auto" style="border:0.7px solid;">
                            <thead>
                                <tr style="background-color: #bbbbbb">
                                    <th class="w-auto">Sr#</th>
                                    <th class="w-auto">ZipCode</th>
                                    <th class="w-auto">City</th>
                                    <th class="w-auto">ST</th>
                                    <th class="w-auto">State</th>
                                </tr>
                            </thead>
                            <tbody id="modalzipcodegetlisttable">
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div id="addsalesinvoice" class="modal fade" role="dialog">
    <div class="modal-dialog modal-lg overflow-auto">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close" onclick="closemodal()">
                    <span aria-hidden="true">×</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="card">
                    <div class="card-header">
                        <label>POSSale Screen</label>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            <div class="col-lg-12 col-md-12 col-sm-12 col-sm-12">
                                <div class="row">
                                    <div class="col-lg-8 col-md-8 col-sm-8 col-8">
                                        <div class="row">
                                            <div class="col-lg-12 col-md-12 col-sm-12 col-sm-12">
                                                <div class="row">
                                                    <div class="form-group">
                                                        <label class="dim col-sm-12">
                                                            Sold To
                                                        </label>
                                                        <div class="row">
                                                            <div class="col-lg-6 col-md-6 col-sm-6 col-6">
                                                                <div class="form-group">
                                                                    <input class="form-control" id="modaltxtcustomername" />
                                                                </div>
                                                            </div>
                                                            <div class="col-lg-6 col-md-6 col-sm-6 col-6">
                                                                <div class="form-group">
                                                                    <input class="form-control" id="modaltxtcustomercode" />
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-lg-4 col-md-4 col-sm-4 col-4">
                                                <div class="form-group">
                                                    <label class="dim col-sm-12" for="modaltxtisgetsalediscount">
                                                        Get Sales/Discount
                                                    </label>
                                                    <input type="checkbox" id="modaltxtisgetsalediscount" />
                                                </div>
                                            </div>
                                            <div class="col-lg-3 col-md-3 col-sm-3 col-3">
                                                <div class="form-group">
                                                    <input type="text" class="form-control" id="discount" />
                                                </div>
                                            </div>
                                            <div class="col-lg-5 col-md-5 col-sm-5 col-5">
                                                <div class="form-group">
                                                    <div class="row">
                                                        <div class="col-lg-6 col-sm-6 col-6 col-md-6">
                                                            <input type="text" class="form-control" id="discount" />
                                                        </div>
                                                        <div class="col-lg-6 col-md-6 col-sm-6 col-6">
                                                            <input type="text" class="form-control" id="discount" />
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row mb-2">
                                            <div class="col-lg-12 col-md-12 col-sm-12 col-12 table-responsive">
                                                <table class="table  table-bordered table-condensed" style="border:0.7px solid;">
                                                    <thead>
                                                        <tr style="background-color:lightgreen">
                                                            <th class="w-auto">Sales Man</th>
                                                            <th class="w-auto">Paymnt Terms</th>
                                                            <th class="w-auto">Shipped Via</th>
                                                            <th class="w-auto">Driver</th>
                                                            <th class="w-auto">Weight</th>
                                                            <th class="w-auto">Count</th>
                                                        </tr>
                                                    </thead>
                                                    <tbody id="modaltxtsalemantable">
                                                    </tbody>
                                                </table>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="col-lg-4 col-md-4 col-sm-4 col-4">
                                        <div class="row">
                                            <div class="col-lg-12 col-sm-12 col-md-12 col-12">
                                                <input class="form-control border-style" type="text" id="modaltxtinvoicenumberid">
                                            </div>
                                            <div class="col-lg-12 col-md-12 col-sm-12 col-12">
                                                <div class="form-group">
                                                    <label>Prev.bal</label>
                                                    <input class="form-control border" type="text" id="modaltxtpreviousbalanceid">
                                                </div>
                                            </div>
                                            <div class="col-lg-12 col-md-12 col-sm-12 col-12">
                                                <div class="form-group">
                                                    <label>SubTotal</label>
                                                    <input class="form-control border" type="text" id="modaltxtsubtotalid">
                                                </div>
                                            </div>
                                            <div class="col-lg-12 col-md-12 col-sm-12 col-12">
                                                <div class="form-group">
                                                    <label>Dis/Other</label>
                                                    <div class="row">
                                                        <div class="col-lg-6 col-md-6 col-sm-6 col-6">
                                                            <input class="form-control border" type="text" id="modaltxtdiscountid">
                                                        </div>
                                                        <div class="col-lg-6 col-md-6 col-sm-6 col-6">
                                                            <input class="form-control border" type="text" id="modaltxtotherid">
                                                        </div>
                                                    </div>

                                                </div>
                                            </div>
                                            <div class="col-lg-12 col-md-12 col-sm-12 col-12">
                                                <div class="form-group">
                                                    <label>Tax/Freight</label>
                                                    <div class="row">
                                                        <div class="col-lg-6 col-md-6 col-sm-6 col-6">
                                                            <input class="form-control border" type="text" id="modaltxttaxid">
                                                        </div>
                                                        <div class="col-lg-6 col-md-6 col-sm-6 col-6">
                                                            <input class="form-control border" type="text" id="modaltxtfreightid">
                                                        </div>
                                                    </div>

                                                </div>
                                            </div>
                                            <div class="col-lg-12 col-md-12 col-sm-12 col-12">
                                                <div class="form-group">
                                                    <label>Inv.Total</label>
                                                    <input class="form-control border" type="text" id="modaltxtinvtotalid">
                                                </div>
                                            </div>
                                            <div class="col-lg-12 col-md-12 col-sm-12 col-12">
                                                <div class="form-group">
                                                    <label>AmountDue</label>
                                                    <input class="form-control border" type="text" id="modaltxtamountdueid">
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="row mt-3">
                            <div class="col-lg-12 col-md-12 col-sm-12 col-12 table-responsive">
                                <table class="table table-bordered table-condensed" id="saletable" style="border:0.7px solid;">
                                    <thead>
                                        <tr style="border:0.7px solid;border-bottom:1.4px solid">
                                            <th class="w-auto">Sr</th>
                                            <th class="w-auto">Item#</th>
                                            <th>Description</th>
                                            <th>Quantity</th>
                                            <th>Amount</th>
                                            <th>Discount</th>
                                            <th>Discount</th>
                                            <th>Units</th>
                                            <th>Units</th>
                                            <th>Price</th>
                                            <th>Total</th>
                                        </tr>
                                    </thead>
                                    <tbody id="modaltxtsaleitemdetail">
                                        hidden row
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    $(document).ready(function () {
        $("#deleteicon").hide();
        $("#createicon").hide();
        $("#attachmentsicon").hide();
        $("#editicon").hide();
        $("#printicon").hide();
        $("#companyvalidation").text("").hide();
        $("#fnamevalidation").text("").hide();
        $("#lastvalidation").text("").hide();
        $("#emailvalidation").text("").hide();
        $("#ssnvalidation").text("").hide();
        $.ajax({
                url: '@Url.Action("ShowGroup", "Customer")',
                async: false,
                dataType: "json",
                processData: false,
                contentType: false,
                success: function (data) {
                    if (data.length > 0)
                    {
                        $('#parentgroupname').html('');
                        var options = '';
                        options += ' <option value="Select">Select</option>';
                        for (var i = 0; i < data.length; i++) {
                            options += '<option value="' + data[i].value + '">' + data[i].text + '</option>';
                        }
                        $('#parentgroupname').append(options);
                    }
                },
                error: function () {

                }
        });

        AppendAllMissions(event);
        GetAllZipCodes();
        statelistcallfun();
        $('.modal').each(function () {
            $("#addzipcode").on('hidden.bs.modal', function () {
                location.reload();
            });
        });
    });

    function AppendAllMissions(event) {
        $.ajax({
            type: "GET",
            url: "/Customer/AutoCompleteSearchCustomer",
            async: false,
            dataType: 'json',
            cache: false,
            success: function (data) {
                var inner = '';
                var opts = jQuery.parseJSON(JSON.stringify(data));
                if (opts.length > 0) {
                }
                $.each(opts, function (i, d) {
                    inner = '';
                    if (i == 0) {
                        inner += '<div class="setsearchbox dropdownhwading hidden">';
                        inner += '<div class="searchheader" style="width:20% !important">Company Name</div>';
                        inner += '<div class="searchheader" style="width:20% !important">First Name</div>';
                        inner += '<div class="searchheader" style="width:20% !important">Last Name</div>';
                        inner += '<div class="searchheader" style="width:20% !important">Phone#</div>';
                        inner += '<div class="searchheader" style="width:20% !important">Cell#</div>';
                        inner += '</div>';
                    }
                    inner += '<div class="setsearchbox anitem dropdown-menu searchitem cp" onclick="GetCustomerByID(' + d.id + ')";>';
                    inner += '<div class="item_name di w-auto data-rel=' + d.id + '" style="width:20% !important">' + d.company + '</div>';
                    inner += '<div class="item_name di w-auto data-rel=' + d.id + '" style="width:20% !important">' + d.firstName + '</div>';
                    inner += '<div class="item_name di w-auto data-rel=' + d.id + '" style="width:20% !important">' + d.lastName + '</div>';
                    inner += '<div class="item_name di w-auto data-rel=' + d.id + '" style="width:20% !important">' + d.phone + '</div>';
                    inner += '<div class="item_name di w-auto data-rel=' + d.id + '" style="width:20% !important">' + d.cell + '</div>';
                    inner += '</div>';
                    $("#listallmissions").append(inner);
                });
            },
            error: function (xhr, status, error) {
                var errorMessage = xhr.status + ': ' + xhr.statusText
            },
        });
    };

    function GetAllMatchedItems(event) {

        var naming = $(".searchname").val();
        if (naming != null && naming !="") {
            $(".dropdownhwading").show();
        }
        if (naming == "") {
            $(".item_name").parent().hide();
            $(".dropdownhwading").hide();
        }
        else {
            var text = naming;
            var items = $(".item_name");
            //first, hide all:
            items.parent().hide();

            //show only those matching user input:
            items.filter(function () {
                return $(this).text().toLowerCase().indexOf(text) == 0;
            }).parent().show();

        }

    };


    function GetCustomerByID(id) {
        $.ajax({
           type: "GET",
            url: '@Url.Action("GetCustomerByID", "Customer")',
            data: {
                id: id
            },
            success: function (data) {
                if (data != null) {


                    var iconhtml = '';
                    iconhtml += '<img class="hide-icon" src="/images/attach.png" style="width:50px" title="Attachments" />';
                    iconhtml += '<img class="hide-icon" src="/images/delete.png" style="width:50px" title="Delete" onclick="DeleteCustomer()"/>';
                    iconhtml += '<img class="hide-icon saveexisting" src="/images/edit.png" style="width:50px" title="Edit" onclick="UpdateExistingCustomer()" />';
                    iconhtml += '<img class="hide-icon" src="/images/printer.png" style="width:50px" title="Print" />';
                    $("#defaultlisticons").append(iconhtml);

                    var itennumberhtml = '';
                    itennumberhtml += '<h3>';
                    itennumberhtml += '<label id="itemlabel">Customer Number:</label><span id="customernumberfound" class="itemnumberbox di"></span></br>';
                    itennumberhtml += '<label id="qtylabel" class="mg-t-2">Prev. Balance:</label><span id="prebalance" class="itemnumberbox di ml-2"></span></br>';
                    itennumberhtml += ' </h3>';
                    $("#existingitemnumber").append(itennumberhtml);



                    $("#customerinformationid").val(data.id)
                    $("#customernumberfound").text(data.customerCode)
                    //$("#txtcustomercode").html("CustomerNumber:" + data.customerCode);
                    // $("#txtbalance").val(data.balance);
                    $("#prebalance").text(data.balance);
                    $("#companyname").val(data.company);
                    $('#txtgender').val(data.gender).attr("selected", "selected");
                    //if (data.gender != null) {
                    //    var Gender = new Option(data.gender, data.gender);
                    //    Gender.selected = true;
                    //    $("#txtgender").append(Gender);
                    //}
                    $("#txtFirstName").val(data.firstName);
                    $("#txtLastName").val(data.lastName);
                    $("#StretNumber").val(data.street);
                    $("#txtcity").val(data.city);
                    $('#state').val(data.stateId).attr("selected", "selected");

                    $("#txtzipcode").val(data.zip);
                    $("#Country").val(data.country);
                    if (data.checkAddress) {
                        $("#CheckAdress").prop("checked", true)
                    }
                    else {
                        $("#CheckAdress").prop("unchecked", false)
                    }
                    $("#phonenumber").val(data.phone);
                    $("#txtfax").val(data.fax);
                    $("#txtcell").val(data.cell);
                    $('#ProviderID').val(data.providerId).attr("selected", "selected");
                    $('#customertype').val(data.customerTypeId).attr("selected", "selected");

                    $("#other").val(data.other);
                    $("#txtowneraddress").val(data.ownerAddress);
                    $("#txtvehiclenumber").val(data.vehicleNumber);
                    $("#email").val(data.email);
                    $("#Website").val(data.website);
                    $("#txtdob").val(data.dob);
                    $("#Taxidfein").val(data.taxIdfein);
                    $("#Stateidnumber").val(data.stateIdnumber);
                    $("#Ssn").val(data.ssn);
                    $("#TobaccoLiscenese").val(data.tobaccoLicenseNumber);
                    $("#vendor").val(data.vendor);
                    $("#txtdrivingnumber").val(data.drivingLicenseNumber);
                    $('#txtdrivinglicensestate').val(data.drivingLicenseStateId).attr("selected", "selected");

                    $("#txtcigarettelicensenumber").val(data.cigaretteLicenseNumber);
                    $("#dea").val(data.dea);
                    if (data.authorized) {
                        $("#Authorized").prop("checked", true)
                    }
                    else {
                        $("#Authorized").prop("unchecked", false)
                    }
                    $("#memo").val(data.memo);
                    if (data.customerClassification != null) {

                        $('#Group').val(data.customerClassification.groupId).attr("selected", "selected");
                        $('#SubGroup').val(data.customerClassification.subGroupId).attr("selected", "selected");
                        $('#Zone').val(data.customerClassification.zoneId).attr("selected", "selected");
                        $('#BusinessType').val(data.customerClassification.businessTypeId).attr("selected", "selected");
                        $('#SalesMan').val(data.customerClassification.salesmanId).attr("selected", "selected");
                        $('#ShippedVia').val(data.customerClassification.shippedViaId).attr("selected", "selected");
                        $('#Route').val(data.customerClassification.routeId).attr("selected", "selected");
                        $('#routedeliveryday').val(data.customerClassification.routedeliveryday).attr("selected", "selected");
                        $('#Driver').val(data.customerClassification.driverId).attr("selected", "selected");

                        if (data.customerClassification.outOfStateCustomer) {
                            $("#txtOutOfstateCustomer").prop("checked", true)
                        }
                        else {
                            $("#txtOutOfstateCustomer").prop("unchecked", false)
                        }
                        if (data.customerClassification.addtoMaillingList) {
                            $("#txtAddToMailingList").prop("checked", true)
                        }
                        else {
                            $("#txtAddToMailingList").prop("unchecked", false)
                        }
                        if (data.customerClassification.addtoemailTextList) {
                            $("#txtaddtoemailtextlist").prop("checked", true)
                        }
                        else {
                            $("#txtaddtoemailtextlist").prop("unchecked", false)
                        }
                        if (data.customerClassification.rejectPromotion) {
                            $("#txtrejectpromotion").prop("checked", true)
                        }
                        else {
                            $("#txtrejectpromotion").prop("unchecked", false)
                        }
                        if (data.customerClassification.viewInvoicePrevBalance) {
                            $("#txtViewInvoicePrevBalance").prop("checked", true)
                        }
                        else {
                            $("#txtViewInvoicePrevBalance").prop("unchecked", false)
                        }
                        if (data.customerClassification.viewRetailandDiscount) {
                            $("#txtViewRetailandDiscount").prop("checked", true)
                        }
                        else {
                            $("#txtViewRetailandDiscount").prop("unchecked", false)
                        }
                        $('#txtbarcode').val(data.customerClassification.barCodeId).attr("selected", "selected");

                        $("#txtdefaultinvoicecopies").val(data.customerClassification.defaultInvoiceCopies);
                        if (data.customerClassification.specialInvoiceCustom) {
                            $("#txtSpecialInvoiceCustom").prop("checked", true)
                        }
                        else {
                            $("#txtSpecialInvoiceCustom").prop("unchecked", false)
                        }
                        $('#ShipToReference').val(data.customerClassification.shiptoReferenceId).attr("selected", "selected");

                        if (data.customerClassification.useDefaultInvMemo) {
                            $("#defaultinvmemo").prop("checked", true)
                        }
                        else {
                            $("#defaultinvmemo").prop("unchecked", false)
                        }
                        $("#txtOtherReferenceNumber").val(data.customerClassification.invoiceMemo);
                        $("#comapnyname").val(data.customerClassification.otherCustomerReference);
                    }
                    if (data.customerBillingInfo != null) {
                        if (data.customerBillingInfo.isTaxExempt) {
                            $("#txttaxexempt").prop("checked", true)
                        }
                        else {
                            $("#txttaxexempt").prop("unchecked", false)
                        }
                        $('#txtpricingid').val(data.customerBillingInfo.pricingId).attr("selected", "selected");

                        if (data.customerBillingInfo.isGetSalesDiscounts) {
                            $("#txtisgetsalesdiscounts").prop("checked", true)
                        }
                        else {
                            $("#txtisgetsalesdiscounts").prop("unchecked", false)
                        }
                        if (data.customerBillingInfo.isOutOfStateCustomer) {
                            $("#txtisoutofstatecustomer").prop("checked", true)
                        }
                        else {
                            $("#txtisoutofstatecustomer").prop("unchecked", false)
                        }
                        $("#txtretailpluspercentage").val(data.customerBillingInfo.retailPlusPercentage);
                        $("#txtretailplus").val(data.customerBillingInfo.retailPlus);
                        $("#txtadditionalinvoicecharge").val(data.customerBillingInfo.additionalInvoiceCharge);
                        $("#txtadditionalinvoicediscount").val(data.customerBillingInfo.additionalInvoiceDiscount);
                        $("#txtschedulemessagefromdate").val(data.customerBillingInfo.scheduleMessageFromDate);
                        $("#txtschedulemessagetodate").val(data.customerBillingInfo.scheduleMessageToDate);
                        $("#txtschedulemessage").val(data.customerBillingInfo.scheduleMessage);
                        $('#paymenttermsid').val(data.customerBillingInfo.paymentTermsId).attr("selected", "selected");

                        $("#creditlimit").val(data.customerBillingInfo.creditLimit);
                        if (data.customerBillingInfo.isCreditHold) {
                            $("#txtcredithold").prop("checked", true)
                        }
                        else {
                            $("#txtcredithold").prop("unchecked", false)
                        }
                        if (data.customerBillingInfo.isBillToBill) {
                            $("#txtbilltobill").prop("checked", true)
                        }
                        else {
                            $("#txtbilltobill").prop("unchecked", false)
                        }
                        if (data.customerBillingInfo.isNoCheckAccepted) {
                            $("#txtnocheckaccepted").prop("checked", true)
                        }
                        else {
                            $("#txtnocheckaccepted").prop("unchecked", false)
                        }
                        if (data.customerBillingInfo.isExclude) {
                            $("#txtexclude").prop("checked", true)
                        }
                        else {
                            $("#txtexclude").prop("unchecked", false)
                        }
                        $("#txtthirdpartycheckcharge").val(data.customerBillingInfo.thirdPartyCheckCharge);
                        if (data.customerBillingInfo.isCashBackBalance) {
                            $("#txtiscashbackbalance").prop("checked", true)
                        }
                        else {
                            $("#txtiscashbackbalance").prop("unchecked", false)
                        }
                        $("#txtcashbackbalance").val(data.customerBillingInfo.cashBackBalance);
                        if (data.customerBillingInfo.isPopupMessage) {
                            $("#txtispopupmessage").prop("checked", true)
                        }
                        else {
                            $("#txtispopupmessage").prop("unchecked", false)
                        }
                        $("#txtpopupmessage").val(data.customerBillingInfo.popupMessage);
                    }
                    //$("#editicon").show();
                    //$("#deleteicon").show();
                    //$("#addicon").hide();

                    $("#itemlabel").show();
                    $("#qtylabel").show();
                    $("#listallmissions").empty();
                }
            },
            error: function () {

            },
        });
        CustomerSales(id);
        Customerpayments(id)
    }

    function CustomerSales(id) {
         $.ajax({
            type: "GET",
            url: '@Url.Action("SaleGetByCustomerID", "Customer")',
            data: {
                id: id
            },
            success: function (data) {
                if (data != null) {
                    $.each(data, function (key, value) {

                        var html = "";
                        html += '<tr ondblclick="AppendSalesScreen(' + value.customerId + ',' + value.invoiceNumber +')" >';
                        html += '<td class="w-auto"> ' + (key + 1) + '</td >';
                        html += '<td class="w-auto">' + value.invoiceNumber + '</td>';
                        html += '<td class="w-auto">' + value.invoiceDate + '</td>';
                        html += '<td class="w-auto">' + value.invoiceDate + '</td>';
                        html += '<td class="w-auto">' + value.saleManName + '</td>';
                        html += '<td class="w-auto">' + value.saleManName + '</td>';
                        html += '<td class="w-auto">' + value.invoiceTotal + '</td>';
                        html += '<td class="w-auto">' + value.paidAmount + '</td>';
                        html += '<td class="w-auto">' + value.amountDue + '</td>';
                        html += '</tr >';
                        $("#appendnewrowforsale").append(html);
                    });
                }
            },
            error: function () {

            },
        });
    }
    function Customerpayments(id) {
         $.ajax({
            type: "GET",
            url: '@Url.Action("SaleGetByCustomerID", "Customer")',
            data: {
                id: id
            },
            success: function (data) {
                if (data != null) {
                    $.each(data, function (key, value) {

                        var html = "";
                        html += '<tr ondblclick="AppendSalesScreen(' + value.customerId + ',' + value.invoiceNumber +')" >';
                        html += '<td class="w-auto"> ' + (key + 1) + '</td >';
                        html += '<td class="w-auto">' + value.invoiceDate + '</td>';
                        html += '<td class="w-auto">' + value.invoiceDate + '</td>';
                        html += '<td class="w-auto">' + value.invoiceDate + '</td>';
                        html += '<td class="w-auto">' + value.invoiceNumber + '</td>';
                        html += '<td class="w-auto">' + value.saleManName + '</td>';
                        html += '<td class="w-auto">' + value.invoiceTotal + '</td>';
                        html += '<td class="w-auto">' + value.paidAmount + '</td>';
                        html += '<td class="w-auto">' + value.amountDue + '</td>';
                        html += '</tr >';
                        $("#appendnewrowforpayment").append(html);
                    });
                }
            },
            error: function () {

            },
        });
    }

    function subgroupmodalclose() {
        $("#addsubgroup").modal('hide');
        $("#addgroup").modal('show');
    }
    function closemodal() {
        $("#adddrivername").modal('hide');
        $("#addbarcode").modal('hide');
        $("#addcustomertype").modal('hide');
        $("#addroutedeliveryday").modal('hide');
        $("#addroutename").modal('hide');
        $("#addshippedvia").modal('hide');
        $("#addsalesman").modal('hide');
        $("#addgroup").modal('hide');
        $("#addsubgroup").modal('hide');
        $("#addzone").modal('hide');
        $("#addbusinesstype").modal('hide');
        $("#addprovider").modal('hide');
        $("#addcustomerstate").modal('hide');
        $("#adddrivinglicensestate").modal('hide');
        $("#addshiptoreference").modal('hide');
        $("#addpricing").modal('hide');
        $("#addpayementterms").modal('hide');
        $("#addzipcode").modal('hide');
        $("#addsalesinvoice").modal('hide');
    }

    function addproviderdata()
    {
        $.confirm({
            title: "Add A New Provider",
            content: "Are you sure to add a new provider?",
            buttons: {
                confirm: function () {
                    var ProviderName = $("#providername").val();
        var providerdata = {};
        providerdata = new FormData();
        providerdata.append("Name", ProviderName);
        $.ajax({
            type: "POST",
            url: "@Url.Action("AddProvider", "Customer")",
            data: providerdata,
            cache: false,
            processData: false,
            contentType: false,
            success: function (data) {
                if (data == "true") {
                    closemodal();
                      window.location = '@Url.Action("NewCustomer", "Customer")';
                }
            },
            error: function () {

            },
        });
                },
                cancel: function () {}
            }
        })
    }
    function addshiptoreference()
    {
        $.confirm({
           title: 'Add New ShiptoReference!',
           content: 'Are you sure to Add New ShiptoReference?',
           buttons: {
               confrim: function () {

        var Name = $("#shiptoreferencename").val();
        var shiptoreferencedata = {};
        shiptoreferencedata = new FormData();
        shiptoreferencedata.append("Name", Name);
        $.ajax({
            type: "POST",
            url: "@Url.Action("AddShipToReference", "Customer")",
            data: shiptoreferencedata,
            cache: false,
            processData: false,
            contentType: false,
            success: function (data) {
                if (data == "true") {
                    closemodal();
                      window.location = '@Url.Action("NewCustomer", "Customer")';
                }
            },
            error: function () {

            },
        });
               },
               cancel: function () { }
           }
       });

    }
    function addcustomerstatedata()
    {
        $.confirm({
            title: "Add a new Customer State",
            content: "Are u Sure To Add A New Customer State",
            buttons: {
                confirm: function () {
                    var CustomerStateName = $("#StateName").val();
        var CustomerStatedata = {};
        CustomerStatedata = new FormData();
        CustomerStatedata.append("StateName", CustomerStateName);
        $.ajax({
            type: "POST",
            url: "@Url.Action("AddCustomerState", "Customer")",
            data: CustomerStatedata,
            cache: false,
            processData: false,
            contentType: false,
            success: function (data) {
                if (data == "true") {
                    closemodal();
                      window.location = '@Url.Action("NewCustomer", "Customer")';
                }
            },
            error: function () {

            },
        });
                },
                cancel: function () { }
            }
        });

    }
    function addcustomertypedata()
    {
        $.confirm({
            title: "Add a new Customer Type",
            content: "Are u Sure To Add A New Customer Type",
            buttons: {
                confirm: function () {
                    var TypeName = $("#customertype").val();
        var TypeNamedata = {};
        TypeNamedata = new FormData();
        TypeNamedata.append("TypeName", TypeName);
        $.ajax({
            type: "POST",
            url: "@Url.Action("AddCustomerType", "Customer")",
            data: TypeNamedata,
            cache: false,
            processData: false,
            contentType: false,
            success: function (data) {
                if (data == "true") {
                    closemodal();
                      window.location = '@Url.Action("NewCustomer", "Customer")';
                }
            },
            error: function () {

            },
        });
                },

                    cancel: function () { }
                }
            });

    }
    function adddriverlicensestatedata()
    {
        $.confirm({
            title: "Add a new Driving License State",
            content: "Are u Sure To Add A New Driving Licenese State",
            buttons: {
                confirm: function () {

         var Name = $("#driverlicensestatename").val();
        var Driverlicensestatedata = {};
        Driverlicensestatedata = new FormData();
        Driverlicensestatedata.append("Name", Name);
        $.ajax({
            type: "POST",
            url: "@Url.Action("AddDrivingLicenseState", "Customer")",
            data: Driverlicensestatedata,
            cache: false,
            processData: false,
            contentType: false,
            success: function (data) {
                if (data == "true") {
                    closemodal();
                      window.location = '@Url.Action("NewCustomer", "Customer")';
                }
            },
            error: function () {

            },
        });
                },

                cancel: function () { }
            }
        });

    }
    function addgroupdata()
    {

        var Name = $("#groupname").val();
        var Groupdata = {};
        Groupdata = new FormData();
        Groupdata.append("Name", Name);
        $.confirm({
            title: 'Add New Group!',
            content: 'Are you sure to Add New Group?',
            buttons: {
                confirm: function () {
                    $.ajax({
            type: "POST",
            url: "@Url.Action("AddGroup", "Customer")",
            data: Groupdata,
            cache: false,
            processData: false,
            contentType: false,
            success: function (data) {
                if (data == "true") {
                    closemodal();
                      window.location = '@Url.Action("NewCustomer", "Customer")';
                }
            },
            error: function () {

            },
        });
                },
                cancel: function () {}
            }
        });

    }
    function addsubgroupdata()
    {
        var SubGroupName = $("#subgroupname").val();
        var GroupID = $("#parentgroupname").val();
        var SubGroupdata = {};
        SubGroupdata = new FormData();
        SubGroupdata.append("SubGroupName", SubGroupName);
        SubGroupdata.append("GroupID", GroupID);
        $.confirm({
            title: 'Add New SubGroup!',
            content: 'Are you sure to Add New SubGroup?',
            buttons: {
                confrim: function () {
                     $.ajax({
            type: "POST",
            url: "@Url.Action("AddSubGroup", "Customer")",
            data: SubGroupdata,
            cache: false,
            processData: false,
            contentType: false,
            success: function (data) {
                if (data == "true") {
                    closemodal();
                      window.location = '@Url.Action("NewCustomer", "Customer")';
                }
            },
            error: function () {

            },
        });
                },
                cancel: function () {}
            }
        });

    }
    function addzonedata()
    {
        var Name = $("#zonename").val();
        var zonedata = {};
        zonedata = new FormData();
        zonedata.append("Name", Name);
        $.confirm({
            title: 'Add New Zone!',
            content: 'Are you sure to Add New Zone?',
            buttons: {
                confrim: function () {
                     $.ajax({
            type: "POST",
            url: "@Url.Action("AddZone", "Customer")",
                         data: zonedata,
            cache: false,
            processData: false,
            contentType: false,
            success: function (data) {
                if (data == "true") {
                    closemodal();
                      window.location = '@Url.Action("NewCustomer", "Customer")';
                }
            },
            error: function () {

            },
        });
                },
                cancel: function () {}
            }
        });

    }
    function addbusinesstypedata()
    {
        var TypeName = $("#businesstype").val();
        var businesstypedata = {};
        businesstypedata = new FormData();
        businesstypedata.append("TypeName", TypeName);
        $.confirm({
            title: 'Add New Business Type!',
            content: 'Are you sure to Add New Business Type?',
            buttons: {
                confrim: function () {
                     $.ajax({
            type: "POST",
            url: "@Url.Action("AddBusinessType", "Customer")",
                         data: businesstypedata,
            cache: false,
            processData: false,
            contentType: false,
            success: function (data) {
                if (data == "true") {
                    closemodal();
                      window.location = '@Url.Action("NewCustomer", "Customer")';
                }
            },
            error: function () {

            },
        });
                },
                cancel: function () {}
            }
        });

    }
    function addsalesmandata()
    {
        var Name = $("#salesmanname").val();
        var Address = $("#salesmanaddress").val();
        var City = $("#salesmancity").val();
        var State = $("#salesmanstate").val();
        var Phone = $("#salesmanPhone").val();
        var Mobile = $("#salesmanmobile").val();
        var Email = $("#salesmanemail").val();
        var Country = $("#salesmancountry").val();
        var salesmandata = {};
        salesmandata = new FormData();
        salesmandata.append("Name", Name);
        salesmandata.append("Address", Address );
        salesmandata.append("City", City);
        salesmandata.append("State", State);
        salesmandata.append("Phone", Phone);
        salesmandata.append("Mobile", Mobile);
        salesmandata.append("Email", Email);
        salesmandata.append("Country", Country);
        $.confirm({
            title: 'Add New SalesMan!',
            content: 'Are you sure to Add New SalesMan?',
            buttons: {
                confrim: function () {
                     $.ajax({
            type: "POST",
            url: "@Url.Action("AddSalesman", "Customer")",
                         data: salesmandata,
            cache: false,
            processData: false,
            contentType: false,
            success: function (data) {
                if (data == "true") {
                    closemodal();
                      window.location = '@Url.Action("NewCustomer", "Customer")';
                }
            },
            error: function () {

            },
        });
                },
                cancel: function () {}
            }
        });

    }
    function addshipmentpurchasedata()
    {
        var Type = $("#ShippedType").val();
        var CreateDate = $("#Shippeddate").val();
        var ShipNumber = $("#ShipNumber").val();
        var Reference = $("#Reference").val();
        var shipmentpurchasedata = {};
        shipmentpurchasedata = new FormData();
        shipmentpurchasedata.append("Type", Type);
        shipmentpurchasedata.append("CreateDate", CreateDate );
        shipmentpurchasedata.append("ShipNumber", ShipNumber);
        shipmentpurchasedata.append("Reference", Reference);

        $.confirm({
            title: 'Add New Shipped Via!',
            content: 'Are you sure to Add New Shipped Via?',
            buttons: {
                confrim: function () {
                     $.ajax({
            type: "POST",
            url: "@Url.Action("AddShipmentPurchase", "Customer")",
                         data: shipmentpurchasedata,
            cache: false,
            processData: false,
            contentType: false,
            success: function (data) {
                if (data == "true") {
                    closemodal();
                      window.location = '@Url.Action("NewCustomer", "Customer")';
                }
            },
            error: function () {

            },
        });
                },
                cancel: function () {}
            }
        });

    }
    function addroutedata()
    {
        var RouteName = $("#routename").val();
        var CreateDate = $("#routeCreateDate").val();
        var InitialLocation = $("#InitialLocation").val();
        var DesignationLocation = $("#DesignationLocation").val();
        var routedata = {};
        routedata = new FormData();
        routedata.append("RouteName", RouteName);
        routedata.append("CreateDate", CreateDate );
        routedata.append("InitialLocation", InitialLocation);
        routedata.append("DesignationLocation", DesignationLocation);

        $.confirm({
            title: 'Add New Route!',
            content: 'Are you sure to Add New Route?',
            buttons: {
                confrim: function () {
                     $.ajax({
            type: "POST",
            url: "@Url.Action("AddRoute", "Customer")",
                         data: routedata,
            cache: false,
            processData: false,
            contentType: false,
            success: function (data) {
                if (data == "true") {
                    closemodal();
                      window.location = '@Url.Action("NewCustomer", "Customer")';
                }
            },
            error: function () {

            },
        });
                },
                cancel: function () {}
            }
        });

    }
    function adddriverdata()
    {
        var Name = $("#drivername").val();
        var Email = $("#driverEmail").val();
        var Mobile = $("#driverMobile").val();
        var Phone = $("#driverPhone").val();
        var City = $("#driverCity").val();
        var Country = $("#driverCountry").val();
        var DrivingLicenseNumber = $("#driverDrivingLicenseNumber").val();
        var RegisteredOn = $("#driverRegisteredOn").val();
        var VehicleNumber = $("#driverVehicleNumber").val();
        var Address = $("#driverAddress").val();
        var Address1 = $("#driverAddress1").val();
        var driverdata = {};
        driverdata = new FormData();
        driverdata.append("Name", Name);
        driverdata.append("Email", Email );
        driverdata.append("Mobile", Mobile);
        driverdata.append("Phone", Phone);
        driverdata.append("City", City);
        driverdata.append("Country", Country);
        driverdata.append("DrivingLicenseNumber", DrivingLicenseNumber);
        driverdata.append("RegisteredOn", RegisteredOn);
        driverdata.append("VehicleNumber", VehicleNumber);
        driverdata.append("Address", Address);
        driverdata.append("Address1", Address1);

        $.confirm({
            title: 'Add New Route!',
            content: 'Are you sure to Add New Route?',
            buttons: {
                confrim: function () {
                     $.ajax({
            type: "POST",
            url: "@Url.Action("AddDriver", "Customer")",
                         data: driverdata,
            cache: false,
            processData: false,
            contentType: false,
            success: function (data) {
                if (data == "true") {
                    closemodal();
                      window.location = '@Url.Action("NewCustomer", "Customer")';
                }
            },
            error: function () {

            },
        });
                },
                cancel: function () {}
            }
        });

    }
    function addpricingdata()
    {
        $.confirm({
           title: 'Add New Pricing!',
           content: 'Are you sure to Add New Pricing?',
           buttons: {
               confrim: function () {

                   var Name = $("#pricingname").val();
        var pricingdata = {};
                   pricingdata = new FormData();
                   pricingdata.append("Name", Name);
        $.ajax({
            type: "POST",
            url: "@Url.Action("Addpricing", "Customer")",
            data: pricingdata,
            cache: false,
            processData: false,
            contentType: false,
            success: function (data) {
                if (data == "true") {
                    closemodal();
                      window.location = '@Url.Action("NewCustomer", "Customer")';
                }
            },
            error: function () {

            },
        });
               },
               cancel: function () { }
           }
       });

    }
    function addpaymenttermsdata()
    {
        $.confirm({
           title: 'Add New PaymentTerm!',
            content: 'Are you sure to Add New PaymentTerm?',
           buttons: {
               confrim: function () {

                   var Name = $("#pyementtermsname").val();
        var paymenttermsdata = {};
                   paymenttermsdata = new FormData();
                   paymenttermsdata.append("Name", Name);
        $.ajax({
            type: "POST",
            url: "@Url.Action("Addpaymentterms", "Customer")",
            data: paymenttermsdata,
            cache: false,
            processData: false,
            contentType: false,
            success: function (data) {
                if (data == "true") {
                    closemodal();
                      window.location = '@Url.Action("NewCustomer", "Customer")';
                }
            },
            error: function () {

            },
        });
               },
               cancel: function () { }
           }
       });

    }
    function UpdateExistingCustomer() {
        var id = $("#customerinformationid").val();
        var customercode=$("#txtcustomercode").val();
        var balance=$("#txtbalance").val();
        var company = $("#companyname").val();
        var gender = $("#txtgender").val();
        var firstname=$("#txtFirstName").val();
        var lastname=$("#txtLastName").val();
        var streetnumber=$("#StretNumber").val();
        var city=$("#txtcity").val();
        var customerstateid = $("#state").val();
        var zipcode=$("#txtzipcode").val();
        var country = $("#Country").val();
        var checkAddress;
        if ($("#CheckAdress").prop('checked') == true) {
             checkAddress = true;
        }
        else {
             checkAddress = false;
        }
        var phone=$("#phonenumber").val();
        var fax=$("#txtfax").val();
        var cell = $("#txtcell").val();
        var providerid=$("#ProviderID").val();
        var customertypeid = $("#customertype").val();
        var other=$("#other").val();
        var owneraddress=$("#txtowneraddress").val();
        var vehicleNumber=$("#txtvehiclenumber").val();
        var email=$("#email").val();
        var website=$("#Website").val();
        var dob=$("#txtdob").val();
        var taxIdfein=$("#Taxidfein").val();
        var stateIdnumber=$("#Stateidnumber").val();
        var ssn=$("#Ssn").val();
        var tobaccoLicenseNumber=$("#TobaccoLiscenese").val();
        var vendor=$("#vendor").val();
        var drivingLicenseNumber=$("#txtdrivingnumber").val();
        var drivingLicenseStateId = $("#txtdrivinglicensestate").val();
        var cigaretteLicenseNumber=$("#txtcigarettelicensenumber").val();
        var dea = $("#dea").val();
        var authorized;
        if ($("#Authorized").prop('checked') == true) {
            authorized = true;
        }
        else {
            authorized = false;
        }
        var memo=$("#memo").val();
        var groupId = $("#Group").val();
        var subGroupId = $("#SubGroup").val();
        var zoneId = $("#Zone").val();
        var businessTypeId = $("#BusinessType").val();
        var salesmanId = $("#SalesMan").val();
        var shippedViaId = $("#ShippedVia").val();
        var routeId = $("#Route").val();
        var routeDeliveryDay = $("#routedeliveryday").val();
        var driverId = $("#Driver").val();
        var outOfStateCustomer;
        if ($("#txtOutOfstateCustomer").prop('checked') == true) {
            outOfStateCustomer = true;
        }
        else {
            outOfStateCustomer = false;
        }
        var addtoMaillingList;
        if ($("#txtAddToMailingList").prop('checked') == true) {
            addtoMaillingList = true;
        }
        else {
            addtoMaillingList = false;
        }
        var addtoemailTextList;
        if ($("#txtaddtoemailtextlist").prop('checked') == true) {
            addtoemailTextList = true;
        }
        else {
            addtoemailTextList = false;
        }
        var rejectPromotion;
        if ($("#txtrejectpromotion").prop('checked') == true) {
            rejectPromotion = true;
        }
        else {
            rejectPromotion = false;
        }
        var viewInvoicePrevBalance;
        if ($("#txtViewInvoicePrevBalance").prop('checked') == true) {
            viewInvoicePrevBalance = true;
        }
        else {
            viewInvoicePrevBalance = false;
        }
        var viewRetailandDiscount;
        if ($("#txtViewRetailandDiscount").prop('checked') == true) {
            viewRetailandDiscount = true;
        }
        else {
            viewRetailandDiscount = false;
        }
        var barcodeid = $("#txtbarcode").val();
        var defaultInvoiceCopies = $("#txtdefaultinvoicecopies").val();
        var specialInvoiceCustom;
        if ($("#txtSpecialInvoiceCustom").prop('checked') == true) {
            specialInvoiceCustom = true;
        }
        else {
            specialInvoiceCustom = false;
        }
        var shiptoReferenceId = $("#ShipToReference").val();
        var useDefaultInvMemo;
        if ($("#defaultinvmemo").prop('checked') == true) {
            useDefaultInvMemo = true;
        }
        else {
            useDefaultInvMemo = false;
        }
        //billinginfo
        var IsTaxExempt = $("#txttaxexempt").is(':checked');
        var PricingId = $("#txtpricingid").val();
        var RetailPlusPercentage = $("#txtretailpluspercentage").val();
        var RetailPlus = $("#txtretailplus").val();
        var IsGetSalesDiscounts = $("#txtisgetsalesdiscounts").is(':checked');
        var IsOutOfStateCustomer = $("#txtisoutofstatecustomer").is(':checked');
        var AdditionalInvoiceCharge = $("#txtadditionalinvoicecharge").val();
        var AdditionalInvoiceDiscount = $("#txtadditionalinvoicediscount").val();
        var ScheduleMessage = $("#txtschedulemessage").val();
        var ScheduleMessageFromDate = $("#txtschedulemessagefromdate").val();
        var ScheduleMessageToDate = $("#txtschedulemessagetodate").val();
        var PaymentTermsId = $("#paymenttermsid").val();
        var CreditLimit = $("#creditlimit").val();
        var IsCreditHold = $("#txtcredithold").is(':checked');
        var IsBillToBill = $("#txtbilltobill").is(':checked');
        var IsNoCheckAccepted = $("#txtnocheckaccepted").is(':checked');
        var IsExclude = $("#txtexclude").is(':checked');
        var ThirdPartyCheckCharge = $("#txtthirdpartycheckcharge").val();
        var IsCashBackBalance = $("#txtiscashbackbalance").is(':checked');
        var CashBackBalance = $("#txtcashbackbalance").val();
        var IsPopupMessage = $("#txtispopupmessage").is(':checked');
        var PopupMessage = $("#txtpopupmessage").val();
        var alldata = {};
        alldata = new FormData();
        alldata.append("Id", id);
        alldata.append("CustomerCode", customercode);
        alldata.append("Balance", balance);
        alldata.append("Company", company);
        alldata.append("Gender", gender);
        alldata.append("FirstName", firstname);
        alldata.append("LastName", lastname);
        alldata.append("Street", streetnumber);
        alldata.append("City", city);
        alldata.append("StateId", customerstateid);
        alldata.append("Zip", zipcode);
        alldata.append("Country", country);
        alldata.append("CheckAddress", checkAddress);
        alldata.append("Phone", phone);
        alldata.append("Fax", fax);
        alldata.append("Cell ", cell);
        alldata.append("ProviderId", providerid);
        alldata.append("CustomerTypeId", customertypeid);
        alldata.append("Other", other);
        alldata.append("OwnerAddress", owneraddress);
        alldata.append("VehicleNumber", vehicleNumber);
        alldata.append("Email", email);
        alldata.append("Website", website);
        alldata.append("Dob", dob);
        alldata.append("TaxIdfein", taxIdfein);
        alldata.append("StateIdnumber", stateIdnumber);
        alldata.append("Ssn", ssn);
        alldata.append("TobaccoLicenseNumber", tobaccoLicenseNumber);
        alldata.append("Vendor", vendor);
        alldata.append("DrivingLicenseNumber", drivingLicenseNumber);
        alldata.append("DrivingLicenseStateId", drivingLicenseStateId);
        alldata.append("CigaretteLicenseNumber", cigaretteLicenseNumber);
        alldata.append("Dea", dea);
        alldata.append("Authorized", authorized);
        alldata.append("Memo", memo);
        alldata.append("CustomerClassification.GroupId", groupId);
        alldata.append("CustomerClassification.SubGroupId", subGroupId);
        alldata.append("CustomerClassification.ZoneId", zoneId);
        alldata.append("CustomerClassification.BusinessTypeId", businessTypeId);
        alldata.append("CustomerClassificationSalesmanId", salesmanId);
        alldata.append("CustomerClassification.ShippedViaId", shippedViaId);
        alldata.append("CustomerClassification.RouteId", routeId);
        alldata.append("CustomerClassification.RouteDeliveryDay", routeDeliveryDay);
        alldata.append("CustomerClassification.DriverId", driverId);
        alldata.append("CustomerClassification.OutOfStateCustomer", outOfStateCustomer);
        alldata.append("CustomerClassification.AddtoMaillingList", addtoMaillingList);
        alldata.append("CustomerClassification.AddtoemailTextList", addtoemailTextList);
        alldata.append("CustomerClassification.RejectPromotion", rejectPromotion);
        alldata.append("CustomerClassification.ViewInvoicePrevBalance", viewInvoicePrevBalance);
        alldata.append("CustomerClassification.ViewRetailandDiscount", viewRetailandDiscount);
        alldata.append("CustomerClassification.BarCodeId", barcodeid);
        alldata.append("CustomerClassification.DefaultInvoiceCopies", defaultInvoiceCopies);
        alldata.append("CustomerClassification.SpecialInvoiceCustom", specialInvoiceCustom);
        alldata.append("CustomerClassification.ShiptoReferenceId", shiptoReferenceId);
        alldata.append("CustomerClassification.UseDefaultInvMemo", useDefaultInvMemo);
        alldata.append("CustomerClassification.CustomerInfoId", id);
        alldata.append("CustomerClassification.CustomerCode", customercode);
        ///billinginfo
        alldata.append("CustomerBillingInfo.IsTaxExempt", IsTaxExempt);
        alldata.append("CustomerBillingInfo.PricingId", PricingId);
        alldata.append("CustomerBillingInfo.RetailPlusPercentage", RetailPlusPercentage);
        alldata.append("CustomerBillingInfo.RetailPlus", RetailPlus);
        alldata.append("CustomerBillingInfo.IsGetSalesDiscounts", IsGetSalesDiscounts);
        alldata.append("CustomerBillingInfo.IsOutOfStateCustomer", IsOutOfStateCustomer);
        alldata.append("CustomerBillingInfo.AdditionalInvoiceCharge", AdditionalInvoiceCharge);
        alldata.append("CustomerBillingInfo.AdditionalInvoiceDiscount", AdditionalInvoiceDiscount);
        alldata.append("CustomerBillingInfo.ScheduleMessage", ScheduleMessage);
        alldata.append("CustomerBillingInfo.ScheduleMessageFromDate", ScheduleMessageFromDate);
        alldata.append("CustomerBillingInfo.ScheduleMessageToDate", ScheduleMessageToDate);
        alldata.append("CustomerBillingInfo.PaymentTermsId", PaymentTermsId);
        alldata.append("CustomerBillingInfo.CreditLimit", CreditLimit);
        alldata.append("CustomerBillingInfo.IsCreditHold", IsCreditHold);
        alldata.append("CustomerBillingInfo.IsBillToBill", IsBillToBill);
        alldata.append("CustomerBillingInfo.IsNoCheckAccepted", IsNoCheckAccepted);
        alldata.append("CustomerBillingInfo.IsExclude", IsExclude);
        alldata.append("CustomerBillingInfo.ThirdPartyCheckCharge", ThirdPartyCheckCharge);
        alldata.append("CustomerBillingInfo.IsCashBackBalance", IsCashBackBalance);
        alldata.append("CustomerBillingInfo.CashBackBalance", CashBackBalance);
        alldata.append("CustomerBillingInfo.IsPopupMessage", IsPopupMessage);
        alldata.append("CustomerBillingInfo.PopupMessage", PopupMessage);


                     $.confirm({
                title: 'Update Existing Customer!',
                content: 'Are you sure to update existing customer?',
                buttons: {
                    confirm: function () {
                        $.ajax({
                type: "POST",
            url: "@Url.Action("EditCustomerInformation", "Customer")",
            data: alldata,
            cache: false,
            processData: false,
            contentType: false,
            success: function (data) {
                if (data == "true") {
                      window.location = '@Url.Action("NewCustomer", "Customer")';
                }
            },
            error: function () {

            },
            });
                    },
                    cancel: function () {
                    },
                }
            });

    }
    $("#searchbutton").on('click', function () {
        var companyname = $("#searchcompany").val();
        $.ajax({
            type: "GET",
            url: "@Url.Action("SearchDataByCompanyName", "Customer")",
            data: {
                name: companyname
            },
            dataType: "json",
            success: function (data) {
                if (data != null) {

                    var iconhtml = '';
                    iconhtml += '<img class="hide-icon" src="/images/attach.png" style="width:50px" title="Attachments" />';
                    iconhtml += '<img class="hide-icon" src="/images/delete.png" style="width:50px" title="Delete" onclick="DeleteCustomer()" />';
                    iconhtml += '<img class="hide-icon saveexisting" src="/images/edit.png" style="width:50px" title="Edit" onclick="UpdateExistingItems()" />';
                    iconhtml += '<img class="hide-icon" src="/images/printer.png" style="width:50px" title="Print" />';
                    $("#defaultlisticons").append(iconhtml);

                    var itennumberhtml = '';
                    itennumberhtml += '<h3>';
                    itennumberhtml += '<label id="itemlabel">Customer Number:</label><span id="customernumberfound" class="itemnumberbox di"></span></br>';
                    itennumberhtml += '<label id="qtylabel" class="mg-t-2">Prev. Balance:</label><span id="prebalance" class="itemnumberbox di ml-2"></span></br>';
                    itennumberhtml += ' </h3>';
                    $("#existingitemnumber").append(itennumberhtml);



                    $("#customerinformationid").val(data.id)
                    $("#customernumberfound").val(data.customerCode)
                    //$("#txtcustomercode").html("CustomerNumber:" + data.customerCode);
                   // $("#txtbalance").val(data.balance);
                   $("#prebalance").val(data.balance);
                    $("#companyname").val(data.company);
                    if (data.gender != null) {
                        $('#txtgender').val(data.gender).attr("selected", "selected");
                    }
                    $("#txtFirstName").val(data.firstName);
                    $("#txtLastName").val(data.lastName);
                    $("#StretNumber").val(data.street);
                    $("#txtcity").val(data.city);
                    if (data.stateId != null) {
                        $('#state').val(data.stateId).attr("selected", "selected");
                    }
                    $("#txtzipcode").val(data.zip);
                    $("#Country").val(data.country);
                    if (data.checkAddress) {
                        $("#CheckAdress").prop("checked", true)
                    }
                    else {
                        $("#CheckAdress").prop("unchecked", false)
                    }
                    $("#phonenumber").val(data.phone);
                    $("#txtfax").val(data.fax);
                    $("#txtcell").val(data.cell);
                    if (data.providerId != null) {
                        $('#ProviderID').val(data.providerId).attr("selected", "selected");
                    }
                    if (data.customerTypeId != null) {
                        $('#customertype').val(data.customerTypeId).attr("selected", "selected");
                    }
                    $("#other").val(data.other);
                    $("#txtowneraddress").val(data.ownerAddress);
                    $("#txtvehiclenumber").val(data.vehicleNumber);
                    $("#email").val(data.email);
                    $("#Website").val(data.website);
                    $("#txtdob").val(data.dob);
                    $("#Taxidfein").val(data.taxIdfein);
                    $("#Stateidnumber").val(data.stateIdnumber);
                    $("#Ssn").val(data.ssn);
                    $("#TobaccoLiscenese").val(data.tobaccoLicenseNumber);
                    $("#vendor").val(data.vendor);
                    $("#txtdrivingnumber").val(data.drivingLicenseNumber);
                    if (data.drivingLicenseStateId != null) {
                        $('#txtdrivinglicensestate').val(data.drivingLicenseStateId).attr("selected", "selected");
                    }
                    $("#txtcigarettelicensenumber").val(data.cigaretteLicenseNumber);
                    $("#dea").val(data.dea);
                    if (data.authorized) {
                        $("#Authorized").prop("checked", true)
                    }
                    else {
                        $("#Authorized").prop("unchecked", false)
                    }
                    $("#memo").val(data.memo);
                    if (data.customerClassification.groupId != null) {
                        $('#Group').val(data.customerClassification.groupId).attr("selected", "selected");
                    }
                    if (data.customerClassification.subGroupId != null) {
                        $('#SubGroup').val(data.customerClassification.subGroupId).attr("selected", "selected");
                    }
                    if (data.customerClassification.zoneId != null) {
                        $('#Zone').val(data.customerClassification.zoneId).attr("selected", "selected");
                    }
                    if (data.customerClassification.businessTypeId != null) {
                        $('#BusinessType').val(data.customerClassification.businessTypeId).attr("selected", "selected");
                    }
                    if (data.customerClassification.salesmanId != null) {
                        $('#SalesMan').val(data.customerClassification.salesmanId).attr("selected", "selected");
                    }
                    if (data.customerClassification.shippedViaId != null) {
                        $('#ShippedVia').val(data.customerClassification.shippedViaId).attr("selected", "selected");
                    }
                    if (data.customerClassification.routeId != null) {
                        $('#Route').val(data.customerClassification.routeId).attr("selected", "selected");
                    }
                    if (data.customerClassification.routeDeliveryDay != null) {
                        $('#routedeliveryday').val(data.customerClassification.routedeliveryday).attr("selected", "selected");
                    }
                    if (data.customerClassification.driverId != null) {
                        $('#Driver').val(data.customerClassification.driverId).attr("selected", "selected");
                    }
                    if (data.customerClassification.outOfStateCustomer) {
                        $("#txtOutOfstateCustomer").prop("checked", true)
                    }
                    else {
                        $("#txtOutOfstateCustomer").prop("unchecked", false)
                    }
                    if (data.customerClassification.addtoMaillingList) {
                        $("#txtAddToMailingList").prop("checked", true)
                    }
                    else {
                        $("#txtAddToMailingList").prop("unchecked", false)
                    }
                    if (data.customerClassification.addtoemailTextList) {
                        $("#txtaddtoemailtextlist").prop("checked", true)
                    }
                    else {
                        $("#txtaddtoemailtextlist").prop("unchecked", false)
                    }
                    if (data.customerClassification.rejectPromotion) {
                        $("#txtrejectpromotion").prop("checked", true)
                    }
                    else {
                        $("#txtrejectpromotion").prop("unchecked", false)
                    }
                    if (data.customerClassification.viewInvoicePrevBalance) {
                        $("#txtViewInvoicePrevBalance").prop("checked", true)
                    }
                    else {
                        $("#txtViewInvoicePrevBalance").prop("unchecked", false)
                    }
                    if (data.customerClassification.viewRetailandDiscount) {
                        $("#txtViewRetailandDiscount").prop("checked", true)
                    }
                    else {
                        $("#txtViewRetailandDiscount").prop("unchecked", false)
                    }
                    if (data.customerClassification.barCodeId!=null) {

                        $('#txtbarcode').val(data.customerClassification.barCodeId).attr("selected", "selected");
                    }
                    $("#txtdefaultinvoicecopies").val(data.customerClassification.defaultInvoiceCopies);
                    if (data.customerClassification.specialInvoiceCustom) {
                        $("#txtSpecialInvoiceCustom").prop("checked", true)
                    }
                    else {
                        $("#txtSpecialInvoiceCustom").prop("unchecked", false)
                    }
                    if (data.customerClassification.shiptoReferenceId != null) {
                        $('#ShipToReference').val(data.customerClassification.shiptoReferenceId).attr("selected", "selected");
                    }
                    if (data.customerClassification.useDefaultInvMemo) {
                        $("#defaultinvmemo").prop("checked", true)
                    }
                    else {
                        $("#defaultinvmemo").prop("unchecked", false)
                    }
                    $("#txtOtherReferenceNumber").val(data.customerClassification.invoiceMemo);
                    $("#comapnyname").val(data.customerClassification.otherCustomerReference);
                    //billinginfodata
                    if (data.customerBillingInfo.isTaxExempt) {
                        $("#txttaxexempt").prop("checked", true)
                    }
                    else {
                        $("#txttaxexempt").prop("unchecked", false)
                    }
                    if (data.customerBillingInfo.pricingId != null) {
                        $('#txtpricingid').val(data.customerBillingInfo.pricingId).attr("selected", "selected");
                    }
                    if (data.customerBillingInfo.isGetSalesDiscounts) {
                        $("#txtisgetsalesdiscounts").prop("checked", true)
                    }
                    else {
                        $("#txtisgetsalesdiscounts").prop("unchecked", false)
                    }
                    if (data.customerBillingInfo.isOutOfStateCustomer) {
                        $("#txtisoutofstatecustomer").prop("checked", true)
                    }
                    else {
                        $("#txtisoutofstatecustomer").prop("unchecked", false)
                    }
                    $("#txtretailpluspercentage").val(data.customerBillingInfo.retailPlusPercentage);
                    $("#txtretailplus").val(data.customerBillingInfo.retailPlus);
                    $("#txtadditionalinvoicecharge").val(data.customerBillingInfo.additionalInvoiceCharge);
                    $("#txtadditionalinvoicediscount").val(data.customerBillingInfo.additionalInvoiceDiscount);
                    $("#txtschedulemessagefromdate").val(data.customerBillingInfo.scheduleMessageFromDate);
                    $("#txtschedulemessagetodate").val(data.customerBillingInfo.scheduleMessageToDate);
                    $("#txtschedulemessage").val(data.customerBillingInfo.scheduleMessage);
                    if (data.customerBillingInfo.paymentTermsId != null) {
                        $('#paymenttermsid').val(data.customerBillingInfo.paymentTermsId).attr("selected", "selected");
                    }
                    $("#creditlimit").val(data.customerBillingInfo.creditLimit);
                    if (data.customerBillingInfo.isCreditHold) {
                        $("#txtcredithold").prop("checked", true)
                    }
                    else {
                        $("#txtcredithold").prop("unchecked", false)
                    }
                    if (data.customerBillingInfo.isBillToBill) {
                        $("#txtbilltobill").prop("checked", true)
                    }
                    else {
                        $("#txtbilltobill").prop("unchecked", false)
                    }
                    if (data.customerBillingInfo.isNoCheckAccepted) {
                        $("#txtnocheckaccepted").prop("checked", true)
                    }
                    else {
                        $("#txtnocheckaccepted").prop("unchecked", false)
                    }
                    if (data.customerBillingInfo.isExclude) {
                        $("#txtexclude").prop("checked", true)
                    }
                    else {
                        $("#txtexclude").prop("unchecked", false)
                    }
                    $("#txtthirdpartycheckcharge").val(data.customerBillingInfo.thirdPartyCheckCharge);
                    if (data.customerBillingInfo.isCashBackBalance) {
                        $("#txtiscashbackbalance").prop("checked", true)
                    }
                    else {
                        $("#txtiscashbackbalance").prop("unchecked", false)
                    }
                    $("#txtcashbackbalance").val(data.customerBillingInfo.cashBackBalance);
                    if (data.customerBillingInfo.isPopupMessage) {
                        $("#txtispopupmessage").prop("checked", true)
                    }
                    else {
                        $("#txtispopupmessage").prop("unchecked", false)
                    }
                    $("#txtpopupmessage").val(data.customerBillingInfo.popupMessage);
                    $("#editicon").show();
                    $("#deleteicon").show();
                    $("#addicon").hide();
                }
            },
            error: function () {

            },
        });
    });
    $("#editicon").on('click', function () {

    });


    $("#deleteicon").on('click', function () {

    });

    $("#infotab").on('click', function () {
        $("#panelheading").text("Customers");
    });
    $("#classificationtab").on('click', function () {
        $("#panelheading").text("Customer Classification");
    });
    $("#billinginfotab").on('click', function () {
        $("#panelheading").text("Customer Billing Info");
    });

    $("#saledatatab").on('click', function () {
        $("#panelheading").text("Sales");
    });
    $("#paymentdatatab").on('click', function () {
        $("#panelheading").text("Payment");
    });
    $("#accounthistorydatatab").on('click', function () {
        $("#panelheading").text("Account History");
    });


    function triggerAddCustomer() {


        $("#ListappenedTabs").hide();
        var iconsavehtml = '';
        iconsavehtml += '<img class="hard-refresh" src="/images/reload.png" style="width:50px" title="Reload" onclick="ReloadPage()"/>';
        iconsavehtml += '<img class="saverecord" src="/images/save.png" style="width:50px" title="Save" onclick="SaveCustomer()"/>';
        $("#onsaveicon").append(iconsavehtml);

        $("#onsaveicon").show();
        $("#onlisticon").removeClass('di');
        $("#onlisticon").hide();
        $("#existingitemnumber").hide();

        var newitemnumberhtml = '';
        newitemnumberhtml += '<h3>';
        newitemnumberhtml += '<label id="newitemlabel">Customer Number:</label>';
        newitemnumberhtml += '<span id="newcustomercode" class="itemnumberbox di">'+ '@ViewBag.CustomerCode' +'</span></br >';
        newitemnumberhtml += '</h3>';

        $("#newitemnumber").append(newitemnumberhtml);
        $("#addappendTabs").show();
        $("#newitemnumber").show();
        $("#newitems").show();
        $("#exitingitems").hide();
        $("#financial-main").hide();
        $("#supplier-main").hide();
        $("#purchase-main").hide();
        $("#sale-main").hide();
        $("#feature-main").hide();
        $("#tool-main").hide();

    };
    function ReloadPage() {
        location.reload();
    };

    function SaveCustomer() {

        var IsValid = true;
     var companyname = $("#companyname").val();
     var gender =  $("#txtgender").val();
      var firstname =  $("#txtFirstName").val();
       var lastname = $("#txtLastName").val();
       var street1number = $("#StretNumber").val();
       var street2number = $("#streetNumber").val();
       var city = $("#txtcity").val();
       var state = $("#state").val();
       var zipcode = $("#txtzipcode").val();
       var country = $("#Country").val();
       var ischeckedAddress = $("#CheckAdress").is(':checked');
       var phonenumber = $("#phonenumber").val();
       var providerid = $("#ProviderID").val();//
        var customertype = $("#customertype").val();//
       var other = $("#other").val();
       var ownerAddress = $("#txtowneraddress").val();
       var vehiclenumber = $("#txtvehiclenumber").val();
       var email = $("#email").val();
       var website = $("#Website").val();
       var dob = $("#txtdob").val();
       var taxidfein = $("#Taxidfein").val();
       var stateidnumber = $("#Stateidnumber").val();
       var ssn = $("#Ssn").val();
       var tobaccolicense = $("#TobaccoLiscenese").val();
       var vendor = $("#vendor").val();
       var drivingnumber = $("#txtdrivingnumber").val();
       var drivingLicenseState = $("#txtdrivinglicensestate").val();
      var cigrateLicensenumber =  $("#txtcigarettelicensenumber").val();
      var dae =  $("#dea").val();
      var authorized =  $("#Authorized").is(':checked');
       var memo = $("#memo").val();
        var fax = $("#txtfax").val();
        var cell = $("#txtcell").val();
        var customerCode = $("#newcustomercode").text();
        ///classification
       var group = $("#Group").val();
       var shiptoreference = $("#ShipToReference").val();
       var subgroup = $("#SubGroup").val();
       var zone = $("#Zone").val();
       var bsuinesstype = $("#BusinessType").val();
       var salesman = $("#SalesMan").val();
       var shippedvia = $("#ShippedVia").val();
       var route =  $("#Route").val();
       var routedelivery =  $("#routedeliveryday").val();
       var driver =  $("#Driver").val();
       var Isoutofstatecustomer = $("#txtOutOfstateCustomer").is(':checked');
       var Isaddtomailing =  $("#txtAddToMailingList").is(':checked');
       var Isaddtoemailext =   $("#txtaddtoemailtextlist").is(':checked');
       var IsRejectPromotion = $("#txtrejectpromotion").is(':checked');
       var Isdefault = $("#defaultinvmemo").is(':checked');
       var otherreference = $("#txtOtherReferenceNumber").val();
       var invoicememo = $("#txtinvoicememo").val();
       var IsviewinvoicepreBalance = $("#txtViewInvoicePrevBalance").is(':checked');
       var Isviewretaildiscount = $("#txtViewRetailandDiscount").is(':checked');
      var barcode =   $("#txtbarcode").val();
       var defaultinvoicecopies =  $("#txtdefaultinvoicecopies").val();
        var isspecialinvoicecustomer = $("#txtSpecialInvoiceCustom").is(':checked');
        //billinginfo
        var IsTaxExempt = $("#txttaxexempt").is(':checked');
        var PricingId = $("#txtpricingid").val();
        var RetailPlusPercentage = $("#txtretailpluspercentage").val();
        var RetailPlus = $("#txtretailplus").val();
        var IsGetSalesDiscounts = $("#txtisgetsalesdiscounts").is(':checked');
        var IsOutOfStateCustomer = $("#txtisoutofstatecustomer").is(':checked');
        var AdditionalInvoiceCharge = $("#txtadditionalinvoicecharge").val();
        var AdditionalInvoiceDiscount = $("#txtadditionalinvoicediscount").val();
        var ScheduleMessage = $("#txtschedulemessage").val();
        var ScheduleMessageFromDate = $("#txtschedulemessagefromdate").val();
        var ScheduleMessageToDate = $("#txtschedulemessagetodate").val();
        var PaymentTermsId = $("#paymenttermsid").val();
        var CreditLimit = $("#creditlimit").val();
        var IsCreditHold = $("#txtcredithold").is(':checked');
        var IsBillToBill = $("#txtbilltobill").is(':checked');
        var IsNoCheckAccepted = $("#txtnocheckaccepted").is(':checked');
        var IsExclude = $("#txtexclude").is(':checked');
        var ThirdPartyCheckCharge = $("#txtthirdpartycheckcharge").val();
        var IsCashBackBalance = $("#txtiscashbackbalance").is(':checked');
        var CashBackBalance = $("#txtcashbackbalance").val();
        var IsPopupMessage = $("#txtispopupmessage").is(':checked');
        var PopupMessage = $("#txtpopupmessage").val();

        if (ssn == "" || ssn == "undefined") {
            $("#ssnvalidation").text("Please Enter Item Name");
            $("#ssnvalidation").show();
            $("#Ssn").focus();
            IsValid = false;
        } else {
            $("#ssnvalidation").text("").hide();
        }
        if (email == "" || email == "undefined") {
            $("#emailvalidation").text("Please Enter Item Name");
            $("#emailvalidation").show();
            $("#email").focus();
            IsValid = false;
        } else {
            $("#emailvalidation").text("").hide();
        }
        if (lastname == "" || lastname == "undefined") {
            $("#lastvalidation").text("Please Enter Item Name");
            $("#lastvalidation").show();
            $("#txtLastName").focus();
            IsValid = false;
        } else {
            $("#lastvalidation").text("").hide();
        }
        if (firstname == "" || firstname == "undefined") {
            $("#fnamevalidation").text("Please Enter Item Name");
            $("#fnamevalidation").show();
            $("#txtFirstName").focus();
            IsValid = false;
        } else {
            $("#fnamevalidation").text("").hide();
        }
        if (companyname == "" || companyname == "undefined") {
            $("#companyvalidation").text("Please Enter Item Name");
            $("#companyvalidation").show();
            $("#companyname").focus();
            IsValid = false;
        } else {
            $("#companyvalidation").text("").hide();
        }






        var data = {};
        data = new FormData();
        if (IsValid) {
        data.append("Company", companyname);
        data.append("FirstName", firstname);
        data.append("LastName", lastname);
        data.append("Street", street1number);
        data.append("City", city);
        data.append("State", state);
        data.append("Zip", zipcode);
        data.append("Country", country);
        data.append("CheckAddress", ischeckedAddress);
        data.append("Phone", phonenumber);
        data.append("Fax",fax);
        data.append("Cell",cell);
        data.append("Vendor", vendor);
        data.append("ProviderId", providerid);
        //data.append("Provider",);
        data.append("Other", other);
        data.append("Email", email);
        data.append("Website", website);
        data.append("TaxIdfein", taxidfein);
        data.append("StateIdnumber", stateidnumber);
        data.append("TobaccoLicenseNumber", tobaccolicense);
        data.append("CigaretteLicenseNumber", cigrateLicensenumber);
        data.append("Dea", dae);
        data.append("Memo", memo);
        data.append("CustomerTypeId", customertype);
        data.append("Dob", dob);
        data.append("Ssn", ssn);
        data.append("DrivingLicenseNumber", drivingnumber);
        //data.append("DrivingLicenseStateId",);
        data.append("DrivingLicenseState", drivingLicenseState);
        data.append("OwnerAddress", ownerAddress);
            data.append("BusinessAddress", street2number);
        data.append("VehicleNumber", vehiclenumber);
        data.append("Authorized", authorized);
        data.append("CustomerCode", customerCode);
       // data.append("Balance",);
        data.append("Gender", gender);
        data.append("StateId", state);
        //data.append("AccountNumber",);
        data.append("CustomerClassification.GroupId", group);
        data.append("CustomerClassification.SubGroupId", subgroup);
        data.append("CustomerClassification.ZoneId", zone);
        data.append("CustomerClassification.BusinessTypeId", bsuinesstype);
        data.append("CustomerClassification.SalesmanId", salesman);
        data.append("CustomerClassification.ShippedViaId", shippedvia);
        data.append("CustomerClassification.RouteId", route);
        data.append("CustomerClassification.RouteDeliveryDay", routedelivery);
        data.append("CustomerClassification.DriverId", driver);
        data.append("CustomerClassification.OtherCustomerReference", otherreference);
        data.append("CustomerClassification.ShiptoReferenceId", shiptoreference);
        data.append("CustomerClassification.OutOfStateCustomer", Isoutofstatecustomer);
        data.append("CustomerClassification.AddtoMaillingList", Isaddtomailing);
        data.append("CustomerClassification.AddtoemailTextList", Isaddtoemailext);
        data.append("CustomerClassification.RejectPromotion", IsRejectPromotion);
        data.append("CustomerClassification.ViewInvoicePrevBalance", IsviewinvoicepreBalance);
        data.append("CustomerClassification.ViewRetailandDiscount", Isviewretaildiscount);
        data.append("CustomerClassification.BarCodeId", barcode);
        data.append("CustomerClassification.DefaultInvoiceCopies", defaultinvoicecopies);
        data.append("CustomerClassification.SpecialInvoiceCustom", isspecialinvoicecustomer);
            data.append("CustomerClassification.InvoiceMemo", invoicememo);
            data.append("CustomerClassification.UseDefaultInvMemo", Isdefault);
            ///billinginfo
            data.append("CustomerBillingInfo.IsTaxExempt", IsTaxExempt);
            data.append("CustomerBillingInfo.PricingId", PricingId);
            data.append("CustomerBillingInfo.RetailPlusPercentage", RetailPlusPercentage);
            data.append("CustomerBillingInfo.RetailPlus", RetailPlus);
            data.append("CustomerBillingInfo.IsGetSalesDiscounts", IsGetSalesDiscounts);
            data.append("CustomerBillingInfo.IsOutOfStateCustomer", IsOutOfStateCustomer);
            data.append("CustomerBillingInfo.AdditionalInvoiceCharge", AdditionalInvoiceCharge);
            data.append("CustomerBillingInfo.AdditionalInvoiceDiscount", AdditionalInvoiceDiscount);
            data.append("CustomerBillingInfo.ScheduleMessage", ScheduleMessage);
            data.append("CustomerBillingInfo.ScheduleMessageFromDate", ScheduleMessageFromDate);
            data.append("CustomerBillingInfo.ScheduleMessageToDate", ScheduleMessageToDate);
            data.append("CustomerBillingInfo.PaymentTermsId", PaymentTermsId);
            data.append("CustomerBillingInfo.CreditLimit", CreditLimit);
            data.append("CustomerBillingInfo.IsCreditHold", IsCreditHold);
            data.append("CustomerBillingInfo.IsBillToBill", IsBillToBill);
            data.append("CustomerBillingInfo.IsNoCheckAccepted", IsNoCheckAccepted);
            data.append("CustomerBillingInfo.IsExclude", IsExclude);
            data.append("CustomerBillingInfo.ThirdPartyCheckCharge", ThirdPartyCheckCharge);
            data.append("CustomerBillingInfo.IsCashBackBalance", IsCashBackBalance);
            data.append("CustomerBillingInfo.CashBackBalance", CashBackBalance);
            data.append("CustomerBillingInfo.IsPopupMessage", IsPopupMessage);
            data.append("CustomerBillingInfo.PopupMessage", PopupMessage);


                     $.confirm({
                title: 'Save New Customer!',
                content: 'Are you sure to save new customer?',
                buttons: {
                    confirm: function () {
                        $.ajax({
                url: '@Url.Action("NewCustomer", "Customer")',
                type: "POST",
                 data: data,
                async: false,
                dataType: "json",
                processData: false,
                contentType: false,
                success: function (data) {
                    if (data == true) {

                        window.location = '@Url.Action("NewCustomer", "Customer")';
                    }
                },
                error: function () {

                }
            });
                    },
                    cancel: function () {
                    },
                }
            });
        }

    }

    function DeleteCustomer() {
         var id = $("#customerinformationid").val();


               $.confirm({
                title: 'Delete Customer!',
                content: 'Are you sure to delete this customer?',
                buttons: {
                    confirm: function () {
                        $.ajax({
            type: "DELETE",
            url: "@Url.Action("DeleteCustomerInformation", "Customer")",
            data: {
                id:id
            },
            dataType: "json",
            success: function (data) {
                 if (data == true) {
                      window.location = '@Url.Action("NewCustomer", "Customer")';
                }
            }
        });
                    },
                    cancel: function () {
                    },
                }
            });
    }

    function AppendSalesScreen(customerId, invoiceNumber) {
         $.ajax({
            type: "GET",
            url: '@Url.Action("POSSaleGetByCustomerId", "Customer")',
            data: {
                customerid: customerId,
                invoicenumber: invoiceNumber
            },
            success: function (data) {
                if (data != null) {
                    console.log(data);
                    $('#addsalesinvoice').modal('show');
                    $.each(data, function (key, value) {
                        if (value.getSaleDiscount) {

                            $("#modaltxtisgetsalediscount").prop("checked", true)
                        }
                        else {
                            $("#modaltxtisgetsalediscount").prop("unchecked", false)
                        }
                        $("#modaltxtcustomername").val(value.customerName);
                        $("#modaltxtcustomercode").val(value.customerNumber);
                        $("#modaltxtinvoicenumberid").val(value.invoiceNumber);
                        $("#modaltxtinvtotalid").val(value.invoiceTotal);
                        $("#modaltxtpreviousbalanceid").val(value.previousBalance);
                        $("#modaltxtdiscountid").val(value.itemInDiscount);
                        $("#modaltxttaxid").val(value.tax);
                        $("#modaltxtotherid").val(value.other);
                        $("#modaltxtsubtotalid").val(value.subTotal);
                        $("#modaltxtfreightid").val(value.freight);
                        $("#modaltxtamountdueid").val(value.amountDue);
                        var salemantable = "";
                        salemantable += '<tr>';
                        salemantable += '<td class="w-auto">' + value.saleManName + '</td>';
                        salemantable += '<td class="w-auto">' + value.paymentTerms + '</td>';
                        salemantable += '<td class="w-auto">' + value.shippedName + '</td>';
                        salemantable += '<td class="w-auto">' + value.driverName + '</td>';
                        salemantable += '<td class="w-auto">' + value.weight + '</td>';
                        salemantable += '<td class="w-auto">' + value.count + '</td>';
                        salemantable += '</tr>';
                        $("#modaltxtsalemantable").append(salemantable);
                        var saleitemdetail = "";
                        saleitemdetail += '<tr>';
                        saleitemdetail += '<td class="w-auto">' + (key+1) + '</td>';
                        saleitemdetail += '<td class="w-auto">' + value.itemNumber + '</td>';
                        saleitemdetail += '<td class="w-auto">' + value.itemDescription + '</td>';
                        saleitemdetail += '<td class="w-auto">' + value.quantity + '</td>';
                        saleitemdetail += '<td class="w-auto">' + value.amountRetail + '</td>';
                        saleitemdetail += '<td class="w-auto">' + value.inDiscount + '</td>';
                        saleitemdetail += '<td class="w-auto">' + value.outDiscount + '</td>';
                        saleitemdetail += '<td class="w-auto">' + value.inUnits + '</td>';
                        saleitemdetail += '<td class="w-auto">' + value.outUnits + '</td>';
                        saleitemdetail += '<td class="w-auto">' + value.price + '</td>';
                        saleitemdetail += '<td class="w-auto">' + value.total + '</td>';
                        saleitemdetail += '</tr>';
                        $("#modaltxtsaleitemdetail").append(saleitemdetail);
                    });
                }
            },
            error: function () {

            },
        });
    }
    function GetAllZipCodes() {
        $.ajax({
            type: "GET",
            url: "@Url.ActionLink("GetListZipCode", "Customer")",
            dataType: "json",
            success: function (data) {
                if (data != null) {
                    $.each(data, function (key, value) {
                        var html = "";
                        html += '<tr id="rowid-' + value.id + '" ondblclick="zipcodeiconshow(' + value.id+','+(key+1)+');">';
                        html += '<td class="w-auto">' + (key+1) + '</td>';
                        html += '<td class="w-auto">' + value.code+'</td>';
                        html += '<td class="w-auto">' + value.city+'</td>';
                        html += '<td class="w-auto">' + value.stateShortcut + '</td>';
                        html += '<td class="w-auto">' + value.state+'</td>';
                        html += '</tr>';
                        $("#modalzipcodegetlisttable").append(html);
                    });
                }
            },
            error: function () {}
        });
    }
    function Addnewrowforzipcodetable() {
        var index;
        var html = "";
        var newoptionvalue = $("#stateselect").val();
        var newoptiontext = $("#stateselect option:selected").text();
        var mstatesc = newoptiontext.slice(0, 2);
        if (newoptionvalue != "Select" && newoptiontext != "Select") {
            $.ajax({
                type: "GET",
                url: "@Url.ActionLink("GetListZipCode", "Customer")",
                dataType: "json",
                success: function (data) {
                    if (data != null) {
                        index = data.length;
                        html += '<tr>';
                        html += '<td class="w-auto">' + (index + 1) + '</td>';
                        html += '<td class="w-auto" contenteditable="true" id="tablezipcodetd"></td>';
                        html += '<td class="w-auto" contenteditable="true" id="tablecitytd"></td>';
                        html += '<td class="w-auto"  id="tablestateshortcuttd">' + mstatesc+'</td>';
                        html += '<td class="w-auto"  id="tablestatetd">' + newoptiontext + '</td>';
                        html += '</tr>';
                        $("#modalzipcodegetlisttable").append(html);
                        var iconsavehtml = '';
                        iconsavehtml += '<img class="hard-refresh" src="/images/reload.png" style="width:50px" title="Reload" onclick="ReloadPage()"/>';
                        iconsavehtml += '<img class="saverecord" src="/images/save.png" style="width:50px" title="Save" onclick="Addzipcodedata()"/>';
                        $("#onaddiconclick").append(iconsavehtml);
                        $("#onaddiconclick").show();
                        $("#zipcodeonlisticon").removeClass('d-flex');
                        $("#zipcodeonlisticon").hide();
                    }
                },
                error: function () { }
            });
        }
        else {
            alert("Sorry!. Please Select any state.")
        }


    }
    function Addzipcodedata() {
        var zipcode = $("#tablezipcodetd").text();
        var city = $("#tablecitytd").text();
        var stateshortcut = $("#tablestateshortcuttd").text();
        var state = $("#tablestatetd").text();
        $.confirm({
            title: "Add New ZipCode Data.",
            content: "Are you sure to want to add?",
            buttons: {
                confirm: function () {

                    var zipcodedata = {};
                    zipcodedata = new FormData();
                    zipcodedata.append("Code", zipcode);
                    zipcodedata.append("City", city);
                    zipcodedata.append("State", state);
                    zipcodedata.append("StateShortcut", stateshortcut);
                    $.ajax({
                        type: "POST",
                        url: "@Url.ActionLink("AddZipCode", "Customer")",
                        data: zipcodedata,
                        dataType: "json",
                        async: false,
                        processData: false,
                        contentType: false,
                        success: function (data) {
                            if (data == "true") {
                                $(".modal").each(function () {
                                    $(this).find("#modalzipcodegetlisttable").empty();
                                    $("#onaddiconclick").hide();
                                    $("#onaddiconclick").removeClass('d-flex');
                                    $("#zipcodeonlisticon").show();
                                });
                                $.ajax({
                                    type: "GET",
            url: "@Url.ActionLink("GetListZipCode", "Customer")",
            dataType: "json",
            success: function (data) {
                if (data != null) {
                    $.each(data, function (key, value) {
                        var html = "";
                        html += '<tr id="rowid-' + value.id + '" ondblclick="zipcodeiconshow(' + value.id+');">';
                        html += '<td class="w-auto">' + (key+1) + '</td>';
                        html += '<td class="w-auto">' + value.code+'</td>';
                        html += '<td class="w-auto">' + value.city+'</td>';
                        html += '<td class="w-auto">' + value.stateShortcut + '</td>';
                        html += '<td class="w-auto">' + value.state+'</td>';
                        html += '</tr>';
                        $("#modalzipcodegetlisttable").append(html);
                    });
                }
            },
            error: function () {}
                                });
                            }
                        },
                        error: function () {  }

                    });
                },
                cancel: function () {}
            }
        });
    }


    function zipcodeiconshow(id, val) {
        var sr = val;
        $.ajax({
            type: "GET",
            url: '@Url.ActionLink("ZipCodeByID", "Customer")',
            data: {
                id: id
            },
            dataType: "json",
            success: function (data) {
                if (data != null) {
                    $("#modalzipcodegetlisttable").empty();
                    var html = "";
                    html += '<tr id="rowid-' + data.id + '">';
                    html += '<td class="w-auto">' + sr + '</td>';
                    html += '<td class="w-auto" contenteditable="true" id="edittablezipcodetd">' + data.code + '</td>';
                    html += '<td class="w-auto" contenteditable="true" id="edittablecitytd">' + data.city + '</td>';
                    html += '<td class="w-auto" contenteditable="true" id="edittablestateshortcuttd">' + data.stateShortcut + '</td>';
                    html += '<td class="w-auto" contenteditable="true" id="edittablestatetd">' + data.state + '</td>';
                    html += '</tr>';
                    $("#modalzipcodegetlisttable").append(html);
                    $("#onanothericonclick").empty();
                    $("#onanothericonclick").removeClass('d-flex');
                    $("#onanothericonclick").hide();
                    var iconsavehtml = '';
                    iconsavehtml += '<img class="hide-icon" src="/images/refresh.png" style="width:50px" title="Reload" onclick="ReloadPage()"/>';
                    iconsavehtml += '<img class="hide-icon" src="/images/edit.png" style="width:50px" title="Edit" onclick="updatezipcoderow()"/>';
                    iconsavehtml += '<img class="hide-icon" src="/images/delete.png" style="width:50px" title="Delete" onclick="deletezipcoderow()"/>';
                    $("#onanothericonclick").append(iconsavehtml);
                    $("#onanothericonclick").show();
                    $("#zipcodeonlisticon").removeClass('d-flex');
                    $("#onaddiconclick").removeClass('d-flex');
                    $("#zipcodeonlisticon").hide();
                    $("#onaddiconclick").hide();
                    $("#fortablerowid").val(id);
                }
            },
            error: function () { }
        });
    }
    function updatezipcoderow() {
        var id = $("#fortablerowid").val();
        $.confirm({
            title: "Update Zipcode Record ",
            content: "Are you sure to Update this Record!",
            buttons: {
                confirm: function () {
                    var zipcode = $("#edittablezipcodetd").text();
                    var city = $("#edittablecitytd").text();
                    var stateshortcut = $("#edittablestateshortcuttd").text();
                    var state = $("#edittablestatetd").text();
                    var zipcodedata = {};
                    zipcodedata = new FormData();
                    zipcodedata.append("Id", id);
                    zipcodedata.append("Code", zipcode);
                    zipcodedata.append("City", city);
                    zipcodedata.append("State", state);
                    zipcodedata.append("StateShortcut", stateshortcut);
                    $.ajax({
                        type: "POST",
                        url: "@Url.ActionLink("ZipCodeUpdate", "Customer")",
                        data: zipcodedata,
                        dataType: "json",
                        cache: false,
                        processData: false,
                        contentType: false,
                        success: function (data) {
                            if (data == true) {
                                location.reload();
                            }
                        },
                        error: function () {}

                    });
                },
                cancel: function () {

                }
            }
        });
    }
    function deletezipcoderow() {
       var id= $("#fortablerowid").val();
        $.confirm({
            title: "Delete Zipcode Record ",
            content: "Are you sure to delete this Record!",
            buttons: {
                confirm: function () {
                    $.ajax({
                        type: "DELETE",
                        url: "@Url.ActionLink("DeleteZipCode", "Customer")",
                        data: {
                            id: id
                        },
                        dataType: "json",
                        success: function (data) {
                            if (data == true) {
                                location.reload();
                            }
                        },
                        error: function () {}

                    });
                },
                cancel: function () {

                }
            }
        });
    }
    function statelistcallfun() {
        $.ajax({
            type: "GET",
            url: "@Url.ActionLink("showstatelist", "Customer")",
            dataType: "json",
            contentType: false,
            processData: false,
            success: function (data) {
                if (data != null) {
                    $.each(data, function (val, text) {
                        var option = '';
                        option += '<option value=' + val + '>' + text.stateName + '</option>';
                        $("#stateselect").append(option);
                    });

                }
            },
            error: function () {}
        });
    }
    $("#modalzipcodesearch").on('keyup', function () {
        var value = $(this).val().toLowerCase();
        $("#modalzipcodegetlisttable tr").filter(function () {
            $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1);
        });
    });

</script>
