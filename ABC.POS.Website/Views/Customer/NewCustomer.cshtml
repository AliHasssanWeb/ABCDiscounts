@model ABC.EFCore.Repository.Edmx.CustomerInformation
@{
    ViewData["Title"] = "NewCustomer";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<script src="~/Scripts/jquery-3.4.1.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>

<link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/css/toastr.min.css">
<script src="//cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/js/toastr.min.js"></script>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.3/jquery.min.js"></script>
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDxEcwjrIQ7e03NrrLYty1Qq9xLi7k4QZ4"></script>
@*<script async defer src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDxEcwjrIQ7e03NrrLYty1Qq9xLi7k4QZ4&callback=initMap"></script>*@

@if (TempData["response"] != null)
{
    <script>
        $(document).ready(function() {
            var success = '@((TempData["response"] != null).ToString())';
            if (success == 'false' || success == false) {
                toastr.error('@TempData["response"].ToString()')
            } else {
                toastr.success('@TempData["response"].ToString()')
            }
        });
    </script>
}
<style>

    <style >
    .form-control {
        color: #00008B;
        font-weight: 500;
    }

    .panel-head {
        padding: 10px 15px;
        border-bottom: 1px solid transparent;
        border-top-left-radius: 3px;
        border-top-right-radius: 3px;
    }

    label {
        color: #00008B;
    }

    .add-style {
        color: red;
    }

    .dropadditemCategory {
        background: #e9ecef;
        opacity: 1;
        border: 0;
        outline: 1px solid #dee2e6;
        font-weight: 400;
        font-size: 0.875rem;
        border-radius: 4px;
        height: 2rem;
    }

    .progress-bar-vertical {
        width: 20px;
        min-height: 200px;
        margin-right: 20px;
        background: #d0cece;
        display: -webkit-box;
        display: -ms-flexbox;
        display: -webkit-flex;
        display: flex;
        align-items: flex-end;
        -webkit-align-items: flex-end
    }

        .progress-bar-vertical .progress-bar {
            width: 100%;
            height: 0;
            -webkit-transition: height 0.6s ease;
            -o-transition: height 0.6s ease;
            transition: height 0.6s ease
        }

    .actionbox {
        background: white;
        box-sizing: border-box;
        margin-bottom: 2%;
        border-radius: 20px;
    }

    .setsearchbox {
        position: relative;
        margin-top: 0%;
        width: auto;
        background-color: antiquewhite;
        border-radius: 0px;
    }

    .searchheader {
        font-size: 16px;
        text-align: center;
        font-weight: bold;
        display: inline-block;
        width: 50%;
        text-align: start;
        border-bottom: 1px solid #dee2e6;
        border-right: 1px solid #dee2e6;
    }

    .di {
        display: inline-block;
    }

    .itemnumberbox, #PreviousBalanceS {
        border: 1px solid #989a9d;
        background: #80808047;
    }

    .fr {
        float: right !important;
    }

    .mg-t-5 {
        margin-top: 5%;
    }

    .ml-2 {
        margin-left: 2%;
    }

    .mg-t-2 {
        margin-top: 2%;
    }

    .ml-3 {
        margin-left: 3%;
    }

    .mg-t-3 {
        margin-top: 3%;
    }

    .dn {
        display: none;
    }

    .checkcheapitems {
        margin-top: 50%;
        position: relative;
        left: 110%;
        width: 20%;
    }

    .emptygrid {
        height: 300px;
        background-color: antiquewhite;
    }

    .table td, .table th {
        padding: 5px !important;
        width: 100%;
    }

    .dropdowncursor {
        cursor: pointer;
    }

    .height {
        height: auto !important;
    }

    #TobaccoLiscenese::placeholder, #Taxidfein::placeholder, #vendor::placeholder, #Ssn::placeholder, #txtdrivingnumber::placeholder, #TobaccoLisceneseu::placeholder, #Taxidfeinu::placeholder, #vendoru::placeholder, #Ssnu::placeholder, #txtdrivingnumberu::placeholder {
        color: gray;
    }

    #ProviderID, #customertype, #txtgender, #state, #txtzipcode, #Group, #SubGroup, #Zone, #BusinessType, #SalesMan, #ShipToReference, #ShippedVia, #Route, #routedeliveryday, #Driver, #txtbarcode, #paymenttermsid, #txtpricingid {
        background: white;
        text-align: center;
    }

    #modaltxtcustomername, #modaltxtcustomercode, #modaltxtinvoicenumberid, #discount, #modaltxtpreviousbalanceid, #modaltxtsubtotalid, #modaltxtdiscountid, #modaltxtotherid, #modaltxttaxid, #modaltxtfreightid, #modaltxtinvtotalid, #modaltxtamountdueid, #ProviderIDu, #customertypeu, #txtgenderu, #stateu, #txtzipcodeu, #Groupu, #SubGroupu, #Zoneu, #BusinessTypeu, #SalesManu, #ShipToReferenceu, #ShippedViau, #Routeu, #routedeliverydayu, #Driveru, #txtbarcodeu, #paymenttermsidu, #txtpricingidu {
        background: white;
        text-align: center;
    }

    input {
        text-align: center;
        font-weight: bold;
    }


    .selectedrow {
        background-color: #e1e1e1;
    }

    .setIcon {
        font-size: 34px;
        padding: 5px;
        border: none;
        color: red;
      /*  position: absolute;
        left: 60%;
        top: 29%*/
        
    }
</style>


<div class="col-12 grid-margin">
    <div class="card" style="background:rgb(232, 236, 239)">
        <div class="card-body">
            <div class="panel panel-primary ">
                <div class="w-100 p-3 h-100 d-inline-block">

                    <div id="onlisticon" class="di">
                        <img class="createnew" src="../images/add.png" style="width:50px" title="Create" onclick="triggerAddCustomer()" />&ensp;&ensp;&ensp;
                        <img id="refresh-id" src="../images/refresh.png" style="width:50px" title="Refresh" onclick="ReloadPage()" />&ensp;&ensp;&ensp;
                    </div>
                    <div id="defaultlisticons" class="di"></div>
                    <div id="onsaveicon">
                    </div>
                    <div class="row fr" id="existingitemnumber">
                            @Html.HiddenFor(model => model.CustomerCode, new { @class = "form-control", id = "hiddencustomercode" })
                            @* @Html.HiddenFor(model => model.Id, new { @class = "form-control", id = "customerinformationid" })*@
                            @Html.HiddenFor(model => model.UserId, new { @class = "form-control", id = "txtVendorId" })
                    </div>
                        @Html.HiddenFor(model => model.Id, new { @class = "form-control", id = "customerinformationid" })
                    <div class="row fr" id="newitemnumber">
                            @Html.HiddenFor(model => model.CustomerCode, new { @class = "form-control" })
                            @Html.HiddenFor(model => model.Balance, new { @class = "form-control" })
                            @Html.HiddenFor(model => model.Id, new { @class = "form-control" , id="IdForNote" })
                    </div>
                        @*<a href="#"> <img src="~/images/create.png" style="width:50px" title="Create" id="createicon" /></a>&ensp;&ensp;&ensp;
                    <a href="#"> <img src="~/images/attach.png" style="width:50px" title="Attachments" id="attachmentsicon" /></a>&ensp; &ensp; &ensp;
                    <a href="#"> <img src="~/images/edit.png" style="width:50px" title="Edit" id="editicon" /></a>&ensp; &ensp; &ensp;
                    <a href="#"> <img src="~/images/delete.png" style="width:50px" title="Delete" id="deleteicon" /></a>&ensp; &ensp; &ensp;
                    <a href="#"> <img src="~/images/printer.png" style="width:50px" title="Print" id="printicon" /></a>&ensp; &ensp; &ensp;*@
                </div>
                <div class="panel-heading" id="panelheading">Customers</div>
                <div class="panel-body">
                        @*<div class="row">
                    <div class="col-lg-8 col-sm-8">
                    <input type="text" id="searchcompany" class="w-100" placeholder="Searching By Company Name" />
                    </div>
                    <div class="col-lg-3 col-sm-3">
                    <button type="button" class="btn btn-primary" id="searchbutton">Search</button>
                    </div>
                    </div>*@


                    <div class="tab-content" id="ListappenedTabs">
                        <ul class="nav nav-tabs" role="tablist" style="background:rgb(198, 202, 206); justify-content:space-around;">
                            <li class="nav-item" style=" background-color:rgb(199 202 205);">
                                <a class="nav-link active" id="infotab" data-bs-toggle="tab" href="#infodata" role="tab" aria-controls="infodata" aria-selected="true">Information</a>
                            </li>
                            <li class="nav-item" style=" background-color:rgb(199 202 205);">
                                <a class="nav-link" id="classificationtab" data-bs-toggle="tab" href="#classificationdata" role="tab" aria-controls="classificationdata" aria-selected="false">Classification</a>
                            </li>
                            <li class="nav-item" style=" background-color:rgb(199 202 205);">
                                <a class="nav-link" id="billinginfotab" data-bs-toggle="tab" href="#billinginfodata" role="tab" aria-controls="billinginfodata" aria-selected="false">Billing Info</a>
                            </li>
                            <li class="nav-item" style=" background-color:rgb(199 202 205);">
                                <a class="nav-link" id="saledatatab" data-bs-toggle="tab" href="#saledata" role="tab" aria-controls="saledata" aria-selected="false">Sales</a>
                            </li>
                            <li class="nav-item" style=" background-color:rgb(199 202 205);">
                                <a class="nav-link " id="paymentdatatab" data-bs-toggle="tab" href="#paymentdata" role="tab" aria-controls="paymentdata" aria-selected="false">Payments</a>
                            </li>
                            <li class="nav-item" style=" background-color:rgb(199 202 205);">
                                <a class="nav-link " id="home-tab" data-bs-toggle="tab" href="#home-1" role="tab" aria-controls="home-1" aria-selected="false">Unpaid Invoice</a>
                            </li>
                            <li class="nav-item" style=" background-color:rgb(199 202 205);">
                                <a class="nav-link " id="accounthistorydatatab" data-bs-toggle="tab" href="#accounthistorydata" role="tab" aria-controls="accounthistorydata" aria-selected="false" style="border-right:none;">Account History</a>
                            </li>
                        </ul>
                        <div class="tab-pane fade active show row" id="infodata">
                            <div class="row">
                                <div class="col-lg-8 col-sm-8">
                                    <div class="form-group">
                                        <label class="dim col-sm-12" style="position:absolute; width:115px; text-align:right; font-weight:bold; margin-top:5px">Company</label>
                                            @*@Html.EditorFor(model => model.Company, new { htmlAttributes = new { @class = "form-control searchname", placeholder = " Name", id = "companyname", onkeydown = "GetAllMatchedItems(event)", autocomplete = "off", style="width:84%; margin-left:122px; margin-top:10px; border-top:1px solid gray; border-left:1px solid gray;" } })
                                        <div style="cursor:pointer" id="listallmissions"></div>*@

                                        <input type="text" class="form-control searchnamee" placeholder="Enter Company Name" onclick="triggerkeup()" onkeyup="GetCompaniesList()" id="CompanyInput" list="companylist" autocomplete="off" style="width:80%; margin-left:122px; margin-top:10px; border-top:1px solid gray; border-left:1px solid gray;">

                                        <datalist class="dropt input-lg mx-auto dropdown w-100" id="companylist" style="background-color: blue !important;cursor:pointer;position:absolute;"></datalist>

                                    </div>

                                </div>
                                <div class="col-lg-2 col-sm-4" style="padding-top:10px;">
                                    <i class="icon-book-open" style="padding:5px; border:1px solid gray; margin-left:-15px;" onclick="openNotesModal()"></i>
                                </div>

                            </div>
                            <div class="row">
                                <div class="col-lg-12 col-sm-8">
                                    <div class="row">
                                        <label class="dim col-sm-12" style="position:absolute; width:146px;  font-size:13px; text-align:right; font-weight:bold;"> Name </label>
                                        <div class="col-lg-4 col-sm-2" style="padding-left:85px;">
                                            <div class="form-group">
                                                    @* <label class="dim col-sm-8" style="font-weight:bold;margin-left: 92px;">Mr./Mrs.</label>*@
                                                    @Html.DropDownListFor(model => model.Gender, (IEnumerable<SelectListItem>)ViewData["Gender"], "--Choose Title--", new { @class = "form-control dropdowncursor", id = "txtgender", style="border-top:1px solid gray; border-left:1px solid gray; width:130px; margin-left:56px;" })
                                            </div>
                                        </div>
                                        <div class="col-lg-4 col-sm-5" style="width:20%">
                                            <div class="form-group" style="text-align:end">
                                                    @*<label class="dim col-sm-6" style="font-weight:bold;">First Name</label>*@
                                                    @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control ", placeholder = "First Name", id = "txtFirstName" , style="border-top:1px solid gray; border-left:1px solid gray;" } })
                                                    
                                            </div>
                                        </div>

                                        <div class="col-lg-4 col-sm-5" style="width:18%">
                                            <div class="form-group">
                                                    @*<label class="dim col-sm-6" style="font-weight:bold;">Last name</label>*@
                                                    @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control ", placeholder = "Last Name", id = "txtLastName", style="border-top:1px solid gray; border-left:1px solid gray;  margin-left:-20px;" } })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-lg-8 col-sm-8">
                                    <div class="row">
                                        <div class="col-lg-6 col-sm-6">
                                            <div class="form-group">
                                                <label class="dim " style="position:absolute; width:115px; text-align:right; font-weight:bold;"> Street </label>
                                                    @Html.EditorFor(model => model.Street, new { htmlAttributes = new { @class = "form-control ", placeholder = "Enter Street ", id = "StretNumber", style="width:70%; margin-left:122px; border-top:1px solid gray; border-left:1px solid gray;" } })
                                                    @Html.ValidationMessageFor(model => model.Street, "", new { @class = "text-danger db" })
                                            </div>
                                        </div>
                                        <div class="col-lg-5 col-sm-6" >
                                            <div class="form-group">
                                                    @Html.EditorFor(model => model.Suite, new { htmlAttributes = new { @class = "form-control ", placeholder = "Suite", id = "suite", style="width:82%; margin-left:15px; border-top:1px solid gray; border-left:1px solid gray;" } })
                                                    @Html.ValidationMessageFor(model => model.Suite, "", new { @class = "text-danger db" })
                                               
                                            </div>
                                                @*<div id="output" style="width:500px; height:500px; border:1px solid red;"></div>*@
                                        </div>
                                        <div class="col-lg-1 col-sm-6">
                                          
                                                <i class="fa fa-map-marker " style="font-size: 28px; color:red" aria-hidden="true"></i>
                                          
                                        </div>

                                    </div>
                                </div>


                                <div class="col-lg-3 col-sm-8" style="margin-left:65px;">
                                     <div style="height:99px; width:270px; border:1px solid blue; float:right; margin-top:-65px;">
                                        <h5 style="text-align:center; color:red; margin-top:8px; font-weight:bold;">Accurate Balance</h5>
                                        <h4 id="AccurateBalance" style="text-align:center; color:#b6b605; margin-top:25px; font-weight:bold;">Click Here</h4>
                                        <span id="PreviousBalanceS" style="font-size:20px; margin-left:95px; font-weight:bold; display:none;"></span>
                                    </div>
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-lg-8 col-sm-8">
                                    <div class="row">
                                        <div class="col-lg-10 col-sm-6" style="margin-left:11%">
                                            <div class="form-group">
                                                <label class="dim " style="position:absolute; width:115px; font-weight:bold;left:4%">Business Address  </label>
                                                    @Html.EditorFor(model => model.BusinessAddress, new { htmlAttributes = new { @class = "form-control ", placeholder = "Business Address", id = "streetNumber", style="margin-left:42px; border-top:1px solid gray; border-left:1px solid gray;" } })
                                                    @Html.ValidationMessageFor(model => model.BusinessAddress, "", new { @class = "text-danger db" })
                                            </div>
                                                @*<div id="output" style="width:500px; height:500px; border:1px solid red;"></div>*@
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-lg-8 col-sm-8">
                                    <div class="row">
                                        <div class="col-lg-8 col-sm-8">
                                            <div class="row">
                                                <div class="col-lg-6 col-sm-5">
                                                    <div class="form-group">
                                                        <label class="dim" style="position:absolute; width:115px; font-weight:bold; text-align:right">City,ST Zip</label>
                                                            @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control ", placeholder = "Enter City", id = "txtcity", style="width:70%; margin-left:122px; border-top:1px solid gray; border-left:1px solid gray;" } })
                                                            @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger db" })
                                                    </div>
                                                </div>
                                                <div class="col-lg-5 col-sm-5">
                                                    <div class="form-group">
                                                            @*<label class="dim col-sm-12">State</label>*@
                                                            @Html.DropDownListFor(model => model.State, (IEnumerable<SelectListItem>)ViewBag.CustomerState, "--Choose State--", new { @class = "form-control dropdowncursor", id = "state", style="margin-left:56px; border-top:1px solid gray; border-left:1px solid gray;" })

                                                    </div>

                                                </div>
                                               
                                            </div>
                                        </div>
                                        <div class="col-lg-4 col-sm-4">
                                            <div class="row">
                                                <div class="col-lg-10 col-sm-10">
                                                    <div class="form-group">
                                                            @*<label class="dim col-sm-12">Zip</label>*@
                                                            @*@Html.EditorFor(model => model.Zip, new { htmlAttributes = new { @class = "form-control ", placeholder = "ZipCode", id = "txtzipcode" } })*@
                                                            @Html.DropDownListFor(model => model.Zip, (IEnumerable<SelectListItem>)ViewBag.zipcode, "--Choose Zip--", new { @class = "form-control dropdowncursor", id = "txtzipcode", style="border-top:1px solid gray; border-left:1px solid gray; margin-left:10px;" })
                                                            @Html.ValidationMessageFor(model => model.Zip, "", new { @class = "text-danger db" })
                                                    </div>
                                                </div>
                                                <div class="col-lg-1 col-sm-2" style="margin-left:-25px; padding-top:5px;">
                                                    <div class="form-group">

                                                        <i class="mdi mdi-plus text-primary" data-bs-toggle="modal" data-bs-target="#addzipcode" style="margin-left:55px; padding:5px; border:1px solid gray;"></i>
                                                    </div>
                                                </div>
                                            </div>

                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-lg-8 col-sm-8">
                                    <div class="row">
                                        <div class="col-lg-8 col-sm-8">
                                            <div class="form-group">
                                                <label class="dim" style="position:absolute; width:115px; font-weight:bold; text-align:right">Country </label>
                                                    @Html.EditorFor(model => model.Country, new { htmlAttributes = new { @class = "form-control ", placeholder = "Country", id = "Country", style="width:71%; margin-left:122px; border-top:1px solid gray; border-left:1px solid gray;" } })
                                                    @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger db" })
                                            </div>
                                        </div>
                                        <div class="col-lg-4 col-sm-4 " style="text-align:right;">
                                            <div class="form-group " style="padding-left:20px;">
                                                    @Html.CheckBox("CheckAdress", false, new { @id = "CheckAdress" })
                                                <label class="dim col-sm-8" for="CheckAdress" style="  font-weight:bold; margin-left:10px">
                                                    CheckAddress
                                                </label>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-lg-8 col-sm-8">
                                    <div class="row">
                                        <div class="col-lg-6 col-sm-6">
                                            <div class="form-group">
                                                <label class="dim" style="position:absolute; width:115px; font-weight:bold; text-align:right"> Phone</label>
                                                    @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control ", placeholder = "Enter Phone ", id = "phonenumber", type = "number", style="margin-left:122px; width:77%; border-top:1px solid gray; border-left:1px solid gray;" } })
                                                    @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger db" })
                                            </div>
                                        </div>
                                        <div class="col-lg-6 col-sm-6" style="padding-left:41px;">
                                            <div class="form-group">
                                                <label class="dim" style="position:absolute; font-weight:bold; width:50px; text-align:right;">Fax</label>
                                                    @Html.EditorFor(model => model.Fax, new { htmlAttributes = new { @class = "form-control ", placeholder = "EnterFax", id = "txtfax", style="margin-left:59px; width:83%; border-top:1px solid gray; border-left:1px solid gray;" } })
                                                    @Html.ValidationMessageFor(model => model.Fax, "", new { @class = "text-danger db" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class=" col-lg-12 col-sm-12">
                                    <div class="row">
                                        <div class="col-lg-8 col-sm-8">
                                            <div class="row">
                                                <div class="col-lg-6 col col-sm-6">
                                                    <div class="form-group">
                                                        <label class="dim " style="position:absolute; font-weight:bold; width:115px; text-align:right"> Cell </label>
                                                            @Html.EditorFor(model => model.Cell, new { htmlAttributes = new { @class = "form-control ", placeholder = "Enter Cell ", id = "txtcell", type = "number", style="margin-left:122px; width:76%; border-top:1px solid gray; border-left:1px solid gray;" } })
                                                            @Html.ValidationMessageFor(model => model.Cell, "", new { @class = "text-danger db" })
                                                    </div>
                                                </div>
                                                <div class="col-lg-6 col-sm-6">
                                                    <div class="row">
                                                        <div class="col-lg-10 col-sm-10">
                                                            <div class="form-group">
                                                                <label class="dim " style="position:absolute; font-weight:bold; width:80px; text-align:right;">Provider</label>
                                                                    @Html.DropDownListFor(model => model.ProviderId, (IEnumerable<SelectListItem>)ViewBag.Provider, "--Choose Provider--", new { @class = "form-control dropdowncursor", id = "ProviderID", style="margin-left:85px; width:89%; border-top:1px solid gray; border-left:1px solid gray;" })

                                                            </div>
                                                        </div>
                                                        
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-lg-4 col-sm-4">
                                            <div class="row ">
                                                <div class="col-lg-10 col-sm-10">
                                                    <div class="form-group">
                                                        <label class="dim col-sm-6" style="position:absolute; font-weight:bold; width:100px;">Customer Type </label>
                                                            @Html.DropDownListFor(model => model.CustomerType, (IEnumerable<SelectListItem>)ViewBag.CustomerType, "--Choose Customer Type--", new { @class = "form-control dropdowncursor", id = "customertype", style="margin-left:103px; width:71%; border-top:1px solid gray; border-left:1px solid gray;" })
                                                    </div>
                                                </div>
                                                
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-lg-8 col-sm-8">
                                    <div class="row">
                                        <div class="col-lg-6 col-sm-6">
                                            <div class="form-group">
                                                <label class="dim col-sm-12" style="position:absolute; font-weight:bold; width:115px; text-align:right"> Other </label>
                                                    @Html.EditorFor(model => model.Other, new { htmlAttributes = new { @class = "form-control ", placeholder = "other ", id = "other", style="margin-left:122px; width:70%; border-top:1px solid gray; border-left:1px solid gray;" } })
                                                    @Html.ValidationMessageFor(model => model.Other, "", new { @class = "text-danger db" })
                                            </div>
                                        </div>
                                        <div class="col-lg-6 col-sm-6">
                                            <div class="form-group">
                                                <label class="dim col-sm-12" style="position:absolute; font-weight:bold; width:96px; font-size:12px"> Owner Address</label>
                                                    @Html.EditorFor(model => model.OwnerAddress, new { htmlAttributes = new { @class = "form-control ", placeholder = "Owner Adress ", id = "txtowneraddress", style="margin-left:90px; width:78%; border-top:1px solid gray; border-left:1px solid gray;" } })
                                                    @Html.ValidationMessageFor(model => model.OwnerAddress, "", new { @class = "text-danger db" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-4 col-sm-4">
                                    <div class="form-group">
                                        <label class="dim col-sm-12" style="position:absolute; font-weight:bold; width:100px;"> Vehicle Number </label>
                                            @Html.EditorFor(model => model.VehicleNumber, new { htmlAttributes = new { @class = "form-control ", placeholder = "Enter Vehicle Number ", id = "txtvehiclenumber", style="margin-left:105px; width:68%; border-top:1px solid gray; border-left:1px solid gray;" } })
                                            @Html.ValidationMessageFor(model => model.VehicleNumber, "", new { @class = "text-danger db" })
                                    </div>
                                </div>

                            </div>
                            <div class="row">
                                <div class="col-lg-8 col-sm-8">
                                    <div class="row">
                                        <div class="col-lg-6 col-sm-6">
                                            <div class="form-group">
                                                <label class="dim col-sm-6" style="position:absolute; font-weight:bold; width:115px; text-align:right"> Email </label>
                                                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control ", placeholder = "Email ", id = "email", style="margin-left:122px; width:76%; border-top:1px solid gray; border-left:1px solid gray;" } })
                                            </div>
                                        </div>
                                        <div class="col-lg-6 col-sm-6">
                                            <div class="form-group">
                                                <label class="dim col-sm-6" style="position:absolute; font-weight:bold; width:80px; text-align:right;"> Website</label>
                                                    @Html.EditorFor(model => model.Website, new { htmlAttributes = new { @class = "form-control ", placeholder = "Website ", id = "Website", style="margin-left:87px; width:79%; border-top:1px solid gray; border-left:1px solid gray;" } })
                                                    @Html.ValidationMessageFor(model => model.Website, "", new { @class = "text-danger db" })
                                            </div>
                                        </div>

                                    </div>
                                </div>
                                <div class="col-lg-4 col-sm-4">
                                    <div class="form-group">
                                        <label class="dim col-sm-12" style="position:absolute; font-weight:bold; width:100px; text-align:right; color:red"> DOB </label>
                                            @Html.EditorFor(model => model.Dob, new { htmlAttributes = new { @class = "form-control dropdowncursor", id = "txtdob", style="margin-left:110px; width:68%; border-top:1px solid gray; border-left:1px solid gray; background:peachpuff;" } })
                                            @Html.ValidationMessageFor(model => model.Dob, "", new { @class = "text-danger db" })
                                    </div>
                                </div>

                            </div>
                            <div class="row">
                                <div class="col-lg-8 col-sm-8">
                                    <div class="row">
                                        <div class="col-lg-6 col-sm-6">
                                            <div class="form-group">
                                                <label class="dim col-sm-12" style="position:absolute; font-weight:bold; width:115px; text-align:right"> Tax Id [FEIN] </label>
                                                    @Html.EditorFor(model => model.TaxIdfein, new { htmlAttributes = new { @class = "form-control ", placeholder = "TaxID ", id = "Taxidfein", style="margin-left:122px; width:75%; border-top:1px solid gray; border-left:1px solid gray; background:#f7f703;" } })
                                                    @Html.ValidationMessageFor(model => model.TaxIdfein, "", new { @class = "text-danger db" })
                                            </div>
                                        </div>
                                        <div class="col-lg-6 col-sm-6">
                                            <div class="form-group">
                                                <label class="dim col-sm-12" style="position:absolute; font-weight:bold; width:80px; text-align:right"> State ID # </label>
                                                    @Html.EditorFor(model => model.StateIdnumber, new { htmlAttributes = new { @class = "form-control ", placeholder = "State ID Number ", id = "Stateidnumber", style="margin-left:88px; width:79%; border-top:1px solid gray; border-left:1px solid gray;" } })
                                                    @Html.ValidationMessageFor(model => model.StateIdnumber, "", new { @class = "text-danger db" })
                                            </div>
                                        </div>

                                    </div>
                                </div>
                                <div class="col-lg-4 col-sm-4">
                                    <div class="form-group">
                                        <label class="dim col-sm-6" style="position:absolute; font-weight:bold; width:100px; text-align:right;color:red"> SSN </label>
                                            @Html.EditorFor(model => model.Ssn, new { htmlAttributes = new { @class = "form-control ", placeholder = "SSN ", id = "Ssn", style="margin-left:110px; width:68%; border-top:1px solid gray; border-left:1px solid gray; background:peachpuff;" } })
                                    </div>
                                </div>

                            </div>
                            <div class="row">
                                <div class="col-lg-8 col-sm-8">
                                    <div class="row">
                                        <div class="col-lg-6 col-sm-6">
                                            <div class="form-group">
                                                <label class="dim col-sm-12" style="position:absolute; font-weight:bold; width:115px; text-align:right"> Tobacco License </label>
                                                    @Html.EditorFor(model => model.TobaccoLicenseNumber, new { htmlAttributes = new { @class = "form-control ", placeholder = "Tobacco Licenese ", id = "TobaccoLiscenese", style="margin-left:122px; width:75%; border-top:1px solid gray; border-left:1px solid gray; background:skyblue;" } })
                                                    @Html.ValidationMessageFor(model => model.TobaccoLicenseNumber, "", new { @class = "text-danger db" })
                                            </div>
                                        </div>
                                        <div class="col-lg-6 col-sm-6">
                                            <div class="form-group">
                                                <label class="dim col-sm-6" style="position:absolute; font-weight:bold; width:80px; text-align:right"> Vendor </label>
                                                    @Html.EditorFor(model => model.Vendor, new { htmlAttributes = new { @class = "form-control ", placeholder = "Vendor", id = "vendor", style="margin-left:88px; width:79%; border-top:1px solid gray; border-left:1px solid gray; background:skyblue;" } })
                                                    @Html.ValidationMessageFor(model => model.Vendor, "", new { @class = "text-danger db" })
                                            </div>
                                        </div>

                                    </div>
                                </div>
                                <div class="col-lg-4 col-sm-4">
                                    <div class="row">
                                        <div class="col-lg-6 col-sm-6">
                                            <div class="form-group">
                                                <label class="dim col-sm-6" style="position:absolute; font-weight:bold; width:88px; color:red"> DL Number </label>
                                                    @Html.EditorFor(model => model.DrivingLicenseNumber, new { htmlAttributes = new { @class = "form-control ", placeholder = "Driving Licenese ", id = "txtdrivingnumber", style="margin-left:79px; border-top:1px solid gray; border-left:1px solid gray; background:peachpuff;" } })
                                                    @Html.ValidationMessageFor(model => model.DrivingLicenseNumber, "", new { @class = "text-danger db" })
                                            </div>
                                        </div>
                                        <div class="col-lg-6 col-sm-6">
                                            <div class="row">
                                                <div class="col-lg-9 col col-sm-9">
                                                    <div class="form-group">
                                                            @*<label class="dim col-sm-12">License State</label>*@
                                                            @Html.DropDownListFor(model => model.DrivingLicenseStateId, (IEnumerable<SelectListItem>)ViewBag.DrivingLicenseState, "Choose State", new { @class = "form-control dropdowncursor", id = "txtdrivinglicensestate", style="margin-left:53px; border-top:1px solid gray; border-left:1px solid gray; background:peachpuff;" })
                                                    </div>
                                                </div>
                                               @* <div class="col-lg-3 col-sm-3" style="padding-top:5px;">
                                                    <i class="mdi mdi-plus text-primary" data-bs-toggle="modal" data-bs-target="#adddrivinglicensestate" style="margin-left:22px;  padding:5px; border:1px solid gray;"></i>

                                                </div>*@
                                            </div>
                                        </div>
                                    </div>
                                </div>

                            </div>
                            <div class="row">
                                <div class="col-lg-8 col-sm-8">
                                    <div class="row">
                                        <div class="col-lg-6 col-sm-6">
                                            <div class="form-group">
                                                <label class="dim col-sm-6" style="position:absolute; font-weight:bold; width:115px; text-align:right"> Cigaratte License </label>
                                                    @Html.EditorFor(model => model.CigaretteLicenseNumber, new { htmlAttributes = new { @class = "form-control ", placeholder = "Cigratte License Number ", id = "txtcigarettelicensenumber", style="margin-left:122px; width:75%; border-top:1px solid gray; border-left:1px solid gray;" } })
                                                    @Html.ValidationMessageFor(model => model.CigaretteLicenseNumber, "", new { @class = "text-danger db" })
                                            </div>
                                        </div>
                                        <div class="col-lg-6 col-sm-6">
                                            <div class="form-group">
                                                <label class="dim col-sm-6" style="position:absolute; font-weight:bold; width:80px; text-align:right"> DEA </label>
                                                    @Html.EditorFor(model => model.Dea, new { htmlAttributes = new { @class = "form-control ", placeholder = "DEA", id = "dea", style="margin-left:88px; width:79%; border-top:1px solid gray; border-left:1px solid gray;" } })
                                                    @Html.ValidationMessageFor(model => model.Dea, "", new { @class = "text-danger db" })
                                            </div>
                                        </div>

                                    </div>
                                </div>
                               @* <div class="col-lg-4 col-sm-4">
                                    <div class="form-group">

                                            @Html.CheckBox("Authorized", false, new { @id = "Authorized", })
                                        <label class="dim col-sm-8" for="Authorized" style="font-weight:bold;">
                                            Authorized
                                        </label>
                                    </div>
                                </div>*@

                            </div>
                            <div class="row">
                                <div class="col-lg-12 col-sm-12">
                                    <div class="form-group">
                                        <label class="dim col-sm-12" style="position:absolute; font-weight:bold; width:115px; text-align:right"> Memo </label>
                                            @Html.TextAreaFor(model => model.Memo, 5, 12, new { @class = "form-control height", placeholder = "memo", id = "memo", style="margin-left:122px; width:90%; border-top:1px solid gray; border-left:1px solid gray;" })
                                            @Html.ValidationMessageFor(model => model.Memo, "", new { @class = "text-danger db" })
                                    </div>
                                </div>
                            </div>
                                @*</form>*@
                        </div>
                        <div class="tab-pane fade row" id="classificationdata">
                            <div class="row">
                                <div class="col-lg-4 col-sm-4">
                                    <div class="row">
                                        <div class="row">
                                            <div class=" col-lg-10 col-sm-10" style="margin-top:15px;">
                                                <div class="form-group">
                                                    <label class="dim col-sm-6" style="font-weight:bold; color:black; width:85px; text-align:right; position:absolute;">Group </label>
                                                        @Html.DropDownListFor(model => model.CustomerClassification.GroupId, (IEnumerable<SelectListItem>)ViewBag.Group, "--Group--", new { @class = "form-control dropdowncursor", id = "Group" , style="margin-left:90px; width:81%; border-top:1px solid gray; border-left:1px solid gray;" })
                                                </div>
                                            </div>
                                            <div class=" col-lg-2 col-sm-2 " style="padding-top:21px;">
                                                <i class="mdi mdi-plus text-primary" data-bs-toggle="modal" data-bs-target="#addgroup" style=" margin-left:20px; border:1px solid gray; padding:5px;"></i>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class=" col-lg-10 col-sm-10">
                                                <div class="form-group">
                                                    <label class="dim col-sm-6" style="font-weight:bold; color:black; width:85px; text-align:right; position:absolute;"> SubGroup </label>
                                                        @Html.DropDownListFor(model => model.CustomerClassification.SubGroupId, (IEnumerable<SelectListItem>)ViewBag.SubGroup, "--SubGroup--", new { @class = "form-control dropdowncursor", id = "SubGroup", style="margin-left:90px; width:81%; border-top:1px solid gray; border-left:1px solid gray;" })
                                                </div>
                                            </div>
                                            <div class="col-lg-2 col-sm-2" style="padding-top:5px;">
                                                <i class="mdi mdi-plus text-primary" data-bs-toggle="modal" data-bs-target="#addsubgroup" style=" margin-left:20px; border:1px solid gray; padding:5px;"></i>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-lg-10 col-sm-10">
                                                <div class="form-group">
                                                    <label class="dim col-sm-6" style="font-weight:bold; color:black; width:85px; text-align:right; position:absolute;">Zone </label>
                                                        @Html.DropDownListFor(model => model.CustomerClassification.Zone, (IEnumerable<SelectListItem>)ViewBag.Zone, "--Zone--", new { @class = "form-control dropdowncursor", id = "Zone", style="margin-left:90px; width:81%; border-top:1px solid gray; border-left:1px solid gray;" })

                                                </div>
                                            </div>
                                            <div class="col-lg-2 col-sm-2 " style="padding-top:5px;">
                                                <i class="mdi mdi-plus text-primary" data-bs-toggle="modal" data-bs-target="#addzone" style=" margin-left:20px; border:1px solid gray; padding:5px;"></i>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-lg-10 col-sm-10">
                                                <div class="form-group">
                                                    <label class="dim col-sm-6" style="font-weight:bold; color:black; width:88px; text-align:right; position:absolute;">BusinessType</label>
                                                        @Html.DropDownListFor(model => model.CustomerClassification.BusinessTypeId, (IEnumerable<SelectListItem>)ViewBag.BusinessType, "--BusinessType--", new { @class = "form-control dropdowncursor", id = "BusinessType", style="margin-left:92px; width:81%; border-top:1px solid gray; border-left:1px solid gray;" })

                                                </div>
                                            </div>
                                            <div class="col-lg-2 col-sm-2" style="padding-top:5px;">
                                                <i class="mdi mdi-plus text-primary" data-bs-toggle="modal" data-bs-target="#addbusinesstype" style=" margin-left:20px; border:1px solid gray; padding:5px;"></i>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-lg-10 col-sm-10">
                                                <div class="form-group">
                                                    <label class="dim col-sm-6" style="font-weight:bold; color:black; width:85px; text-align:right; position:absolute;">Salesman</label>
                                                        @Html.DropDownListFor(model => model.CustomerClassification.SalesmanId, (IEnumerable<SelectListItem>)ViewBag.Salesman, "--Salesman--", new { @class = "form-control dropdowncursor", id = "SalesMan", style="margin-left:90px; width:81%; border-top:1px solid gray; border-left:1px solid gray;" })

                                                </div>
                                            </div>
                                            <div class="col-lg-2 col-sm-2 " style="padding-top:5px;">
                                                <i class="mdi mdi-plus text-primary" data-bs-toggle="modal" data-bs-target="#addsalesman" style=" margin-left:20px; border:1px solid gray; padding:5px;"></i>
                                            </div>
                                        </div>

                                    </div>

                                </div>
                                <div class="col-lg-4 col-sm-4" style="margin-top:5px">
                                    <div class="row">
                                        <div class="col-lg-10 col-sm-10">
                                            <div class="form-group">
                                                <label class="dim col-sm-6" style="font-weight:bold; width:115px; text-align:right; position:absolute;">Ship To Reference </label>
                                                    @Html.DropDownListFor(model => model.CustomerClassification.ShiptoReference, (IEnumerable<SelectListItem>)ViewBag.ShiptoReference, "--Select--", new { @class = "form-control dropdowncursor", id = "ShipToReference", style="margin-left:118px; width:75%; border-top:1px solid gray; border-left:1px solid gray;" })
                                            </div>
                                        </div>
                                        <div class="col-lg-2 col-sm-2" style="padding-top:5px;">
                                            <i class="mdi mdi-plus text-primary" data-bs-toggle="modal" data-bs-target="#addshiptoreference" style="margin-left:25px; border:1px solid gray; padding:5px;"></i>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-lg-12 col-sm-12">
                                    <div class="row">
                                        <div class="col-lg-4 col-sm-4 border">
                                            <br />
                                            <h2 style="color:blue"> Delivery Info</h2>
                                            <div class="row">
                                                <div class="col-lg-10 col-sm-10">
                                                    <div class="form-group">
                                                        <label class="dim col-sm-12" style="font-weight:bold; color:black; width:120px; text-align:right; position:absolute;">ShippedVia</label>
                                                            @Html.DropDownListFor(model => model.CustomerClassification.ShippedViaId, (IEnumerable<SelectListItem>)ViewBag.ShipmentPurchase, "--ShippedVia--", new { @class = "form-control dropdowncursor", id = "ShippedVia", style="margin-left:125px; width:61%; border-top:1px solid gray; border-left:1px solid gray;" })
                                                    </div>
                                                </div>
                                                <div class="col-lg-2 col-sm-2 " style="padding-top:5px;">
                                                    <i class="mdi mdi-plus text-primary" data-bs-toggle="modal" data-bs-target="#addshippedvia" style="border:1px solid gray; padding:5px;"></i>

                                                </div>
                                            </div>
                                            <div class="row">
                                                <div class="col-lg-10 col-sm-10">
                                                    <div class="form-group">
                                                        <label class="dim col-sm-12" style="font-weight:bold; color:black; width:120px; text-align:right; position:absolute;">Route name</label>
                                                            @Html.DropDownListFor(model => model.CustomerClassification.RouteId, (IEnumerable<SelectListItem>)ViewBag.Route, "--Route--", new { @class = "form-control dropdowncursor", id = "Route", style="margin-left:125px; width:61%; border-top:1px solid gray; border-left:1px solid gray;" })
                                                    </div>
                                                </div>
                                                <div class="col-lg-2 col-sm-2 " style="padding-top:5px;">
                                                    <i class="mdi mdi-plus text-primary" data-bs-toggle="modal" data-bs-target="#addroutename" style="border:1px solid gray; padding:5px;"></i>

                                                </div>
                                            </div>
                                            <div class="row">
                                                <div class="col-lg-10 col-sm-10">
                                                    <div class="form-group">
                                                        <label class="dim col-sm-12" style="font-weight:bold; color:black; width:126px; text-align:right; position:absolute;">Route Delievery Day</label>
                                                            @Html.DropDownListFor(model => model.CustomerClassification.RouteDeliveryDay, (IEnumerable<SelectListItem>)ViewBag.routedeliverydays, "--Delievery Days--", new { @class = "form-control dropdowncursor", id = "routedeliveryday", style="margin-left:128px; width:61%; border-top:1px solid gray; border-left:1px solid gray;" })

                                                    </div>
                                                </div>

                                            </div>
                                            <div class="row">
                                                <div class="col-lg-10 col-sm-10">
                                                    <div class="form-group">
                                                        <label class="dim col-sm-12" style="font-weight:bold; color:black; width:120px; text-align:right; position:absolute;">Driver's name</label>
                                                            @Html.DropDownListFor(model => model.CustomerClassification.DriverName, (IEnumerable<SelectListItem>)ViewBag.Driver, "--Driver--", new { @class = "form-control dropdowncursor", id = "Driver", style="margin-left:125px; width:61%; border-top:1px solid gray; border-left:1px solid gray;" })
                                                        <label class="text-danger db" style="display:none" id="msgcustomertype">Select Driver</label>
                                                    </div>
                                                </div>
                                                <div class="col-lg-2 col-sm-2" style="padding-top:5px;">
                                                    <i class="mdi mdi-plus text-primary" data-bs-toggle="modal" data-bs-target="#adddrivername" style="border:1px solid gray; padding:5px;"></i>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-lg-4 col-sm-4 border">
                                            <br />
                                            <h2 style="color:blue">Customer Setting</h2>
                                            <div class="col-lg-12 col-sm-12 ">
                                                <div class="form-group ">
                                                        @Html.CheckBox("CustomerClassification.OutOfStateCustomer", false, new { @id = "txtOutOfstateCustomer", })
                                                    <label class="dim col-sm-8" for="OutOfStateCustomer" style="color:blue; font-weight:bold">
                                                        Out Of State Customer
                                                    </label>
                                                </div>
                                            </div>
                                            <div class="col-lg-12 col-sm-12 ">
                                                <div class="form-group ">
                                                        @Html.CheckBox("CustomerClassification.AddtoMaillingList", false, new { @id = "txtAddToMailingList", })
                                                    <label class="dim col-sm-8" for="AddtoMaillingList" style="color:blue; font-weight:bold">
                                                        Add To Mailing List
                                                    </label>
                                                </div>
                                            </div>
                                            <div class="col-lg-12 col-sm-12">
                                                <div class="form-group ">
                                                        @Html.CheckBox("CustomerClassification.AddtoemailTextList", false, new { @id = "txtaddtoemailtextlist", })
                                                    <label class="dim col-sm-8" for="AddtoemailTextLis" style="color:blue; font-weight:bold">
                                                        Add To Email/Text List
                                                    </label>
                                                </div>
                                            </div>
                                            <div class="col-lg-12 col-sm-12 ">
                                                <div class="form-group ">
                                                        @Html.CheckBox("CustomerClassification.RejectPromotion", false, new { @id = "txtrejectpromotion", })
                                                    <label class="dim col-sm-8" for="RejectPromotion" style="color:blue; font-weight:bold; color:red;">
                                                        Reject Promotion
                                                    </label>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-lg-4 col-sm-4 border">
                                            <br />
                                            <h2 style="color:blue">Invoice Setting</h2>
                                            <div class="col-lg-12 col-sm-12 ">
                                                <div class="form-group ">
                                                        @Html.CheckBox("CustomerClassification.ViewInvoicePrevBalance", false, new { @id = "txtViewInvoicePrevBalance", })
                                                    <label class="dim col-sm-8" for="ViewInvoicePrevBalance" style="font-weight:bold">
                                                        View Invoice Prev.Balance
                                                    </label>
                                                </div>
                                            </div>
                                            <div class="col-lg-12 col-sm-12 ">
                                                <div class="form-group">
                                                        @Html.CheckBox("CustomerClassification.ViewRetailandDiscount", false, new { @id = "txtViewRetailandDiscount", })
                                                    <label class="dim col-sm-8" for="ViewRetailandDiscount" style="font-weight:bold">
                                                        View Retail And Discount
                                                    </label>
                                                </div>
                                            </div>
                                            <div class="col-lg-12 col-sm-12">
                                                <div class="form-group">
                                                    <label class="dim " style="position:absolute; font-weight:bold;">Barcode</label>
                                                        @Html.DropDownListFor(model => model.CustomerClassification.BarCodeId, (IEnumerable<SelectListItem>)ViewData["Group"], "--Retail--", new { @class = "form-control dropdowncursor", id = "txtbarcode", style="margin-left:56px; width:85%;" })
                                                        @*<i class="mdi mdi-plus text-primary" data-bs-toggle="modal" data-bs-target="#addbarcode"></i>*@
                                                </div>
                                            </div>
                                            <div class="col-lg-12 col-sm-12 mt-4">
                                                <div class="form-group">
                                                    <label class="dim " style="position:absolute; font-weight:bold;"> Default Invoice Copies </label>
                                                        @Html.EditorFor(model => model.CustomerClassification.DefaultInvoiceCopies, new { htmlAttributes = new { @class = "form-control ", id = "txtdefaultinvoicecopies", style="margin-left:237px; width:30%;" } })
                                                        @Html.ValidationMessageFor(model => model.CustomerClassification.DefaultInvoiceCopies, "", new { @class = "text-danger db" })
                                                </div>
                                            </div>
                                            <div class="col-lg-12 col-sm-12">
                                                <div class="form-group">
                                                        @Html.CheckBox("CustomerClassification.SpecialInvoiceCustom", false, new { @id = "txtSpecialInvoiceCustom", })
                                                    <label class="dim col-sm-8" for="SpecialInvoiceCustom" style="font-weight:bold; color:red;">
                                                        Special Invoive Custom
                                                    </label>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row" style="margin-top:20px;">
                                    @*<div class="row mt-3">
                                <div class="offset-lg-4 col-lg-8 offset-sm-4 col-sm-8">
                                <div class="form-group">
                                @Html.CheckBox("CustomerClassification.UseDefaultInvMemo", false, new { @id = "defaultinvmemo", })
                                <label class="dim col-sm-8" for="Default Inv Memo">
                                User Default Inv Memo
                                </label>
                                </div>
                                </div>
                                </div>*@
                                <div class="row">
                                    <div class="col-lg-4 col col-sm-4">
                                        <div class="form-group">
                                            <label class="dim " style="position:absolute; font-weight:bold"> Other Customer Reference </label>
                                                @Html.EditorFor(model => model.CustomerClassification.OtherCustomerReference, new { htmlAttributes = new { @class = "form-control ", placeholder = "Reference No ", id = "txtOtherReferenceNumber", style="margin-left:173px; width:50%; border-top:1px solid gray; border-left:1px solid gray;" } })
                                                @Html.ValidationMessageFor(model => model.CustomerClassification.OtherCustomerReference, "", new { @class = "text-danger db" })
                                        </div>
                                    </div>
                                    <div class="col-lg-8 col col-sm-8">
                                        <div class="form-group">
                                            <label class="dim " style="position:absolute; color:gray"> Invoice Memo </label>
                                                @Html.CheckBox("CustomerClassification.UseDefaultInvMemo", false, new { @id = "defaultinvmemo", style="margin-left:200px;" })
                                            <label class="dim col-sm-8" for="Default Inv Memo" style="font-weight:bold;">
                                                User Default Inv Memo
                                            </label>
                                                @Html.TextAreaFor(model => model.CustomerClassification.InvoiceMemo, 5, 12, new { @class = "form-control height", placeholder = "InvoiceMemo", id = "txtinvoicememo", style="width:107%; border-top:1px solid gray; border-left:1px solid gray" })
                                                @Html.ValidationMessageFor(model => model.CustomerClassification.InvoiceMemo, "", new { @class = "text-danger db" })
                                        </div>
                                    </div>

                                </div>
                            </div>
                        </div>
                        <div class="tab-pane fade row" id="billinginfodata">
                            <div class="col-lg-12 col-sm-12">
                                <div class="row" style="margin-top:10px;">
                                    <div class="col-lg-8 col-sm-8 col px-md-5 ">
                                        <div class="row  border border-dark ">
                                            <div class="row">
                                                <h2 style="color:blue; margin-top:10px;">Sales Information</h2>

                                                <div class="form-group mt-4">

                                                    <label class="dim  fs-5 text-primary" for=" TaxExempt" style="font-weight:bold;">
                                                        TaxExempt
                                                    </label>
                                                        @Html.CheckBox("CustomerBillingInfo.IsTaxExempt", false, new { @id = "txttaxexempt", style="margin-top:7px;" })
                                                </div>

                                            </div>
                                            <div class=" col-lg-12 col-sm-12 mt-4">
                                                <div class="row">
                                                    <div class=" col-lg-6 col-sm-6" style="padding-top:10px;">
                                                        <div class="row">
                                                            <div class="col-lg-10 col-sm-10">
                                                                <div class="form-group ">
                                                                    <label class="text-primary" style="font-weight:bold; position:absolute">Pricing</label>
                                                                        @Html.DropDownListFor(model => model.CustomerBillingInfo.PricingId, (IEnumerable<SelectListItem>)ViewBag.Pricing, "--Pricing--", new { @class = "form-control dropdowncursor", id = "txtpricingid", style="margin-left:50px; width:80%;" })
                                                                </div>
                                                            </div>
                                                            <div class="col-lg-2 col-sm-2" style="margin-left:-22px; padding-top:5px;">
                                                                <div class="col-lg-2 col-sm-2">
                                                                    <i class="mdi mdi-plus text-primary" data-bs-toggle="modal" data-bs-target="#addpricing" style="padding:5px; border:1px solid gray;"></i>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="col-lg-6 col-sm-3">
                                                        <div class="form-group">
                                                            <label style=" font-weight:bold; position:absolute"> Retail Plus% </label>
                                                                @Html.EditorFor(model => model.CustomerBillingInfo.RetailPlusPercentage, new { htmlAttributes = new { @class = "form-control ", placeholder = "$0.00", id = "txtretailpluspercentage", style="margin-left:85px;width:50%;" } })
                                                                @Html.ValidationMessageFor(model => model.CustomerBillingInfo.RetailPlusPercentage, "", new { @class = "text-danger db" })
                                                            <label style=" font-weight:bold; position:absolute"> Retail Plus$ </label>
                                                                @Html.EditorFor(model => model.CustomerBillingInfo.RetailPlus, new { htmlAttributes = new { @class = "form-control ", placeholder = "$0.00", id = "txtretailplus" , style="margin-left:85px;width:50%;"} })
                                                                @Html.ValidationMessageFor(model => model.CustomerBillingInfo.RetailPlus, "", new { @class = "text-danger db" })
                                                        </div>
                                                    </div>


                                                </div>
                                            </div>
                                            <br />
                                            <br />
                                            <br />
                                            <div class="col-lg-12 col-sm-12 mt-4">
                                                <div class="row">
                                                    <div class="form-group col-sm-6 col-lg-6">
                                                        <div class="form-group">
                                                                @Html.CheckBox("CustomerBillingInfo.IsGetSalesDiscounts", false, new { @id = "txtisgetsalesdiscounts", style="margin-top:4px" })
                                                            <label class="dim col-sm-10  text-primary" for=" GetSales/Discounts" style="font-weight:bold; margin-left:5px;">
                                                                Get Sales/Discounts
                                                            </label>
                                                        </div>
                                                    </div>
                                                    <div class="col-sm-6 col-md-6 col-lg-6">
                                                            @Html.CheckBox("CustomerBillingInfo.IsOutOfStateCustomer", false, new { @id = "txtisoutofstatecustomer", })
                                                        <label class="dim col-sm-10 fs-5 text-primary " for=" OutOfStatesCustomers" style="font-weight:bold">
                                                            Out Of States Customers
                                                        </label>

                                                    </div>

                                                </div>
                                            </div>
                                        </div>
                                        <br />
                                        <div class=" col-lg-12 col-sm-12">
                                            <div class="row">
                                                <div class=" col-lg-4 col-sm-4">
                                                    <div class="form-group">
                                                        <button type="button" class="btn btn-light fs-6 btn-lg btn-block" , id="txtspecialprices" style="width:-webkit-fill-available; border-radius:unset; background:rgb(232, 236, 239)">Special Prices</button>
                                                    </div>
                                                </div>

                                                <div class=" col-lg-8 col-sm-8 ">
                                                    <div class="form-group">
                                                        <button type="button" class="btn btn-light fs-6 btn-lg btn-block" , id="txtadditionalitemdiscount/charge" style="width:-webkit-fill-available; border-radius:unset; background:rgb(232, 236, 239)">Additional Item Discount/Charge</button>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>

                                        <div class=" col-lg-12 col-sm -12">
                                            <div class="row">
                                                <div class=" col-lg-6 col-sm-6  mt-5">
                                                    <div class="form-group">
                                                        <label class="col-sm-6 col-lg-6" style="font-weight:bold; width:95px; text-align:right; position:absolute;">Additional Invoice Charge</label>
                                                            @Html.EditorFor(model => model.CustomerBillingInfo.AdditionalInvoiceCharge, new { htmlAttributes = new { @class = "form-control ", placeholder = "%0.00", id = "txtadditionalinvoicecharge", style="margin-left:109px; width:50%;" } })
                                                            @Html.ValidationMessageFor(model => model.CustomerBillingInfo.AdditionalInvoiceCharge, "", new { @class = "text-danger db" })
                                                    </div>
                                                </div>
                                                <div class=" col-lg-6 col-sm-6  mt-5">
                                                    <div class="form-group">
                                                        <label class="col-sm-6 col-lg-6" style="font-weight:bold; width:105px; text-align:right; position:absolute;"> Additional Invoice Discount </label>
                                                            @Html.EditorFor(model => model.CustomerBillingInfo.AdditionalInvoiceDiscount, new { htmlAttributes = new { @class = "form-control ", placeholder = "$0.00", id = "txtadditionalinvoicediscount", style="margin-left:109px; width:50%;" } })
                                                            @Html.ValidationMessageFor(model => model.CustomerBillingInfo.AdditionalInvoiceDiscount, "", new { @class = "text-danger db" })
                                                    </div>
                                                </div>

                                            </div>
                                        </div>

                                    </div>
                                    <br />
                                    <div class="col-lg-4 col-sm-4 border border-dark">
                                        <div class="=row">
                                            <br />
                                            <h2 style="color:blue">Customer Credit</h2>
                                            <div class="row">
                                                <div class="col-lg-10 col-sm-10">
                                                    <div class="form-group">
                                                        <label class="dim col-sm-8 text-primary" style="position:absolute; font-weight:bold; width:105px; text-align:right;">Payement Terms</label>
                                                            @Html.DropDownListFor(model => model.CustomerBillingInfo.PaymentTermsId, (IEnumerable<SelectListItem>)ViewBag.PaymentTerm, "--PayementTerms--", new { @class = "form-control dropdowncursor", id = "paymenttermsid", style=" margin-left:107px; width:70%; border-left:1px solid gray; border-top:1px solid gray;" })
                                                    </div>
                                                </div>
                                                <div class="col-lg-2 col-sm-2 ">
                                                    <i class="mdi mdi-plus text-primary" data-bs-toggle="modal" data-bs-target="#addpayementterms" style="padding:5px; border:1px solid gray;"></i>
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                <label class="dim col-sm-8 text-primary" style="position:absolute; font-weight:bold; width:103px; text-align:right;">Credit Limit</label>
                                                    @Html.EditorFor(model => model.CustomerBillingInfo.CreditLimit, new { htmlAttributes = new { @class = "form-control", placeholder = "$0.00", id = "creditlimit", style=" margin-left:107px; width:58%; border-left:1px solid gray; border-top:1px solid gray;" } })
                                                    @Html.ValidationMessageFor(model => model.CustomerBillingInfo.CreditLimit, "", new { @class = "text-danger db" })
                                            </div>
                                            <div class="form-group" style="padding-left:105px;">
                                                    @Html.CheckBox("CustomerBillingInfo.IsCreditHold", false, new { @id = "txtcredithold", })
                                                <label class="dim col-sm-8 fs-5 text-danger" for="CreditHold">
                                                    Credit Hold
                                                </label>
                                            </div>
                                            <div class="row">
                                                <div class="col-lg-12 col-md-12 col-sm-12 col-12" id="billtobillcheckbox">
                                                    <div class="form-group" style="padding-left:105px;">
                                                            @Html.CheckBox("CustomerBillingInfo.IsBillToBill", false, new { @id = "txtbilltobill", })
                                                        <label class="dim col-sm-8 fs-5 text-danger" for=" BillToBill">
                                                            Bill To Bill
                                                        </label>
                                                    </div>
                                                </div>
                                                <div id="forbilltobilllisticon"></div>
                                            </div>

                                            <div class="form-group" style="padding-left:105px;">
                                                    @Html.CheckBox("CustomerBillingInfo.IsNoCheckAccepted", false, new { @id = "txtnocheckaccepted", })
                                                <label class="dim col-sm-8  text-danger" for=" NoChecksAccepted" style="font-size:16px; font-weight:bold;">
                                                    No Checks Accepted
                                                </label>
                                            </div>
                                            <div class="form-group">
                                                    @Html.CheckBox("CustomerBillingInfo.IsExclude", false, new { @id = "txtexclude", })
                                                <label class="dim col-sm-8  text-success" for="Exclude Overdue Popup Message on new Invoice" style="font-weight:bold;">
                                                    Exclude Overdue Popup Message on new Invoice
                                                </label>
                                            </div>
                                            <div class="row">

                                                <div class="form-group " style="padding-left:107px;">
                                                    <label class="text-primary" style="position:absolute; font-weight:bold;">3rd Party Check Charge</label>
                                                        @Html.EditorFor(model => model.CustomerBillingInfo.ThirdPartyCheckCharge, new { htmlAttributes = new { @class = "form-control ", placeholder = "$0.00", id = "txtthirdpartycheckcharge", style="width:37%; margin-left:157px; border-top:1px solid gray; border-left:1px solid gray;" } })
                                                        @Html.ValidationMessageFor(model => model.CustomerBillingInfo.ThirdPartyCheckCharge, "", new { @class = "text-danger db" })
                                                </div>
                                            </div>
                                            <div class=" col-lg-12 col-sm-12">
                                                <div class="row">
                                                    <div class="  col-lg-6 col-sm-6 ">
                                                        <div class="form-group">
                                                                @Html.CheckBox("CustomerBillingInfo.IsCashBackBalance", false, new { @id = "txtiscashbackbalance" })
                                                            <label class=" text-success" for=" CheckBackBalance" style="font-weight:bold">
                                                                Check Back Balance
                                                            </label>
                                                        </div>
                                                    </div>
                                                    <div class=" col-lg-6 col-sm-6">
                                                        <div class="form-group">

                                                                @Html.EditorFor(model => model.CustomerBillingInfo.CashBackBalance, new { htmlAttributes = new { @class = "form-control ", placeholder = "0.00", id = "txtcashbackbalance", style=" border-top:1px solid gray; border-left:1px solid gray;" } })
                                                                @Html.ValidationMessageFor(model => model.CustomerBillingInfo.CashBackBalance, "", new { @class = "text-danger db" })
                                                        </div>
                                                    </div>

                                                </div>

                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-12 col-sm-12">
                                <div class="row">
                                    <div class="col-lg-8  col px-md-5 mt-3 ">
                                        <div class="row  border border-dark ">
                                            <div class="col-lg-12 col-sm-12">
                                                <div class="row">
                                                    <div class=" col-lg-4 col-sm-4">
                                                        <div class="form-group  mt-4 fs-6">
                                                            <label class=" fs-6 text-primary" style=" font-weight:bold;">Schedule Message</label>

                                                        </div>
                                                    </div>
                                                    <div class=" col-lg-4 col-sm-4">
                                                        <div class="form-group  mt-4 ">
                                                            <label class=" text-primary" style="position:absolute; font-weight:bold;">From</label>
                                                                @Html.EditorFor(model => model.CustomerBillingInfo.ScheduleMessageFromDate, new { htmlAttributes = new { @class = "form-control dropdowncursor", id = "txtschedulemessagefromdate", style=" margin-left:35px; width:91%; border-top:1px solid gray; border-left:1px solid gray;" } })
                                                                @Html.ValidationMessageFor(model => model.CustomerBillingInfo.ScheduleMessageFromDate, "", new { @class = "text-danger db" })
                                                        </div>
                                                    </div>
                                                    <div class=" col-lg-4 col-sm-4">
                                                        <div class="form-group  mt-4 ">
                                                            <label class=" text-primary" style="position:absolute; font-weight:bold;"> To </label>
                                                                @Html.EditorFor(model => model.CustomerBillingInfo.ScheduleMessageToDate, new { htmlAttributes = new { @class = "form-control dropdowncursor", id = "txtschedulemessagetodate", style=" margin-left:19px; width:90%; border-top:1px solid gray; border-left:1px solid gray;" } })
                                                                @Html.ValidationMessageFor(model => model.CustomerBillingInfo.ScheduleMessageToDate, "", new { @class = "text-danger db" })
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-lg-12 col-sm-12">
                                                <div class="row">
                                                    <div class="form-group ">
                                                            @Html.TextAreaFor(model => model.CustomerBillingInfo.ScheduleMessage, 5, 12, new { @class = "form-control height", placeholder = "", id = "txtschedulemessage", style="  border-top:1px solid gray; border-left:1px solid gray;" })
                                                            @Html.ValidationMessageFor(model => model.CustomerBillingInfo.ScheduleMessage, "", new { @class = "text-danger db" })
                                                    </div>
                                                </div>
                                            </div>

                                        </div>
                                    </div>
                                    <div class=" col-lg-4 col-sm-4 border border-dark mt-3">
                                        <div class="form-group mt-4">
                                                @Html.CheckBox("CustomerBillingInfo.IsPopupMessage", false, new { @id = "txtispopupmessage", })
                                            <label class="dim col-sm-8 fs-5 text-primary" for=" Pop Up Message" style="font-weight:bold;">
                                                Pop Up Message
                                            </label>
                                        </div>
                                        <div class=" col-lg-12 col-sm-12 ">

                                            <div class="form-group  mt-4">

                                                    @Html.TextAreaFor(model => model.CustomerBillingInfo.PopupMessage, 7, 12, new { @class = "form-control height", placeholder = "", id = "txtpopupmessage", style=" border-top:1px solid gray; border-left:1px solid gray;" })
                                                    @Html.ValidationMessageFor(model => model.CustomerBillingInfo.PopupMessage, "", new { @class = "text-danger db" })

                                            </div>
                                        </div>

                                    </div>

                                </div>

                            </div>
                        </div>

                        <div class="tab-pane fade row" id="saledata">
                            <div class="row mt-3">
                                <div class="col-lg-12 col-md-12 col-sm-12 col-12 table-responsive" id="saletable">
                                    <table class="table table-bordered table-condensed" id="saleinvoicestable" style="border:0.7px solid;">
                                        <thead>
                                            <tr class="text-center grids-head-simple" style="border:0.7px solid;border-bottom:1.4px solid">
                                                @* <th class="w-auto">Sr#</th> *@
                                                <th class="w-auto">Invoice#</th>
                                                <th class="w-auto">Inv. Date</th>
                                                <th class="w-auto">Printed Date</th>
                                                <th class="w-auto">SaleMan</th>
                                                <th class="w-auto">User</th>
                                                <th class="w-auto">Total Amount</th>
                                                <th class="w-auto">Total Paid</th>
                                                <th class="w-auto">Due</th>
                                            </tr>
                                        </thead>
                                        <tbody id="appendnewrowforsale">
                                            <!-- hidden row -->

                                        </tbody>
                                    </table>

                                </div>
                            </div>
                        </div>
                        <div class="tab-pane fade row" id="paymentdata">
                            <div class="row mt-3">
                                <div class="col-lg-12 col-md-12 col-sm-12 col-12 table-responsive" id="paymenttable">
                                    <table class="table table-bordered table-condensed" id="invoicepaymenttable" style="border:0.7px solid;">
                                        <thead>
                                            <tr class="text-center grids-head-simple" style="border:0.7px solid;border-bottom:1.4px solid">
                                                <th style="width:10px;">Date Paid</th>
                                                <th style="width:10px;">Time</th>
                                                <th style="width:10px;">Hold Date</th>
                                                @* <th style="width:10px;">SID</th> *@
                                                <th style="width:10px;">SaleMan</th>
                                                <th style="width:10px;">Type</th>
                                                <th style="width:10px;">Check#</th>
                                                <th style="width:10px;">Amount Paid</th>
                                                <th style="width:10px;">Amount Alloc</th>
                                                <th style="width:10px;">Change</th>

                                            </tr>
                                        </thead>
                                        <tbody id="appendnewrowforpayment" style="font-weight:bold; color:blue;">
                                            <!-- hidden row -->

                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>

                        <div class="tab-pane fade row" id="accounthistorydata">
                            <div class=" col-lg-12 col-sm-12" style="margin-top:15px;">
                                <div class=" row ">
                                    <div class=" col-lg-6 col-sm-6 col px-md-5 ">
                                        <h4 class=" text-primary" style="font-weight:bold;"> Customer,s Balance History</h4>
                                        <div class="row border border-dark ">
                                            <table class="table" id="accounthistoryscroll">
                                                <thead>
                                                    <tr>
                                                        <th scope="col" class="text-primary"> Credit</th>
                                                        <th scope="col" class="text-primary">Debit</th>
                                                        <th scope="col" class="text-primary">DateTime</th>

                                                    </tr>
                                                </thead>

                                                <tbody id="appendnewrowforaccounthistory">

                                            </table>

                                        </div>
                                    </div>


                                    <div class=" col-lg-6 col-sm-6">
                                        <h4 class="text-primary" style="font-weight:bold;"> Attachments History</h4>
                                        <div class=" row border border-dark">
                                            <div class="col-lg-12 col-sm-12">
                                                <div class="row">
                                                    <div class="table-responsive-lg">
                                                        <table class="table w-100 overflow-auto" id="tbleid">
                                                            <thead>
                                                                <tr>
                                                                    <th scope="col" class="text-primary" style="width:0px;">Sr#</th>
                                                                    <th scope="col" class="text-primary" style="width:0px;">Doc Type</th>
                                                                    <th scope="col" class="text-primary" style="width:0px;">Doc Name</th>
                                                                    <th scope="col" class="text-primary" style="width:0px;">Action</th>
                                                                </tr>
                                                            </thead>
                                                            <tbody id="AttachmentBody">

                                                        </table>
                                                    </div>

                                                </div>
                                            </div>
                                            <br />
                                            <br />
                                            <br />
                                            <br />
                                            <br />
                                            <br />
                                            <br />
                                            <br />
                                            <br />
                                            <br />


                                        </div>


                                        <h4 class="text-primary" style="font-weight:bold; margin-top:10px;"> Account Statistics </h4>
                                        <div class="row border border-dark">
                                            <div class=" col-lg-12 col-sm-12">
                                                <div class="row" style="margin-top:10px;">
                                                    <div class="col-lg-6 col sm-6">
                                                        <div class="form-group ">
                                                            <label style="color:blue; position:absolute; font-weight:bold; width:85px; text-align:right"> Created </label>
                                                            <input class="form-control" id="CreatedD" style="margin-left:92px; width:65%; border-top:1px solid gray; border-left:1px solid gray; background:white;" disabled />
                                                        </div>
                                                    </div>
                                                    <div class=" col-lg-6 col-sm-6">
                                                        <div class="form-group ">
                                                            <label style="color:blue;position:absolute; font-weight:bold; width:85px; text-align:right"> Last Used</label>
                                                            <input class="form-control" id="LastUse" style="margin-left:92px; width:65%; border-top:1px solid gray; border-left:1px solid gray; background:white;" disabled />
                                                                @* @Html.EditorFor(model => model.CustomerBillingInfo.ScheduleMessageToDate, new { htmlAttributes = new { @class = "form-control dropdowncursor", id = "txtschedulemessagetodate" } })
                                                            @Html.ValidationMessageFor(model => model.CustomerBillingInfo.ScheduleMessageToDate, "", new { @class = "text-danger db" })*@
                                                        </div>
                                                    </div>

                                                </div>
                                            </div>
                                            <div class=" col-lg-12 col-sm-12">

                                                <div class="row">
                                                    <div class="col-lg-6 col sm-6">
                                                        <div class="form-group ">
                                                            <label style="color:blue;position:absolute; font-weight:bold; width:85px; text-align:right"> Enabled </label>
                                                            <input class="form-control" id="Enable" style="margin-left:92px; width:65%; border-top:1px solid gray; border-left:1px solid gray; background:white;" disabled />
                                                        </div>
                                                    </div>
                                                    <div class=" col-lg-6 col-sm-6">
                                                        <div class="form-group ">
                                                            <label style=" color:blue;position:absolute; font-weight:bold; width:85px; text-align:right"> Last Sales</label>
                                                            <input class="form-control" id="LastSaleu" style="margin-left:92px; width:65%; border-top:1px solid gray; border-left:1px solid gray; background:white;" disabled />
                                                                @*@Html.EditorFor(model => model.CustomerBillingInfo.ScheduleMessageToDate, new { htmlAttributes = new { @class = "form-control dropdowncursor", id = "txtschedulemessagetodate" } })
                                                            @Html.ValidationMessageFor(model => model.CustomerBillingInfo.ScheduleMessageToDate, "", new { @class = "text-danger db" })*@
                                                        </div>
                                                    </div>


                                                </div>
                                            </div>
                                            <br />
                                            <br />
                                            <div class=" col-lg-12 col-sm-12">

                                                <div class="row">
                                                    <div class="col-lg-6 col sm-6">
                                                        <div class="form-group ">
                                                            <label style="color:blue;position:absolute; font-weight:bold; width:85px; text-align:right"> Disabled </label>
                                                            <input class="form-control" id="Disabled" style="margin-left:92px; width:65%; border-top:1px solid gray; border-left:1px solid gray; background:white;" disabled />
                                                        </div>
                                                    </div>
                                                    <div class=" col-lg-6 col-sm-6">
                                                        <div class="form-group ">
                                                            <label style="color:blue;position:absolute; font-weight:bold; width:85px; text-align:right"> Last Pay </label>
                                                            <input class="form-control" id="Disable" style="margin-left:92px; width:65%; border-top:1px solid gray; border-left:1px solid gray; background:white;" disabled />
                                                        </div>
                                                    </div>


                                                </div>

                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                    </div>



                    <div class="tab-content" id="addappendTabs">
                        <ul class="nav nav-tabs" role="tablist" style="background:rgb(198, 202, 206); justify-content:space-around;">
                            <li class="nav-item" style=" background-color:rgb(199 202 205);">
                                <a class="nav-link active" id="infotabu" data-bs-toggle="tab" href="#infodatau" role="tab" aria-controls="infodatau" aria-selected="true">Information</a>
                            </li>
                            <li class="nav-item" style=" background-color:rgb(199 202 205);">
                                <a class="nav-link" id="classificationtab" data-bs-toggle="tab" href="#classificationdatau" role="tab" aria-controls="classificationdatau" aria-selected="false">Classification</a>
                            </li>
                            <li class="nav-item" style=" background-color:rgb(199 202 205);">
                                <a class="nav-link" id="billinginfotab" data-bs-toggle="tab" href="#billinginfodatau" role="tab" aria-controls="billinginfodatau" aria-selected="false">Billing Info</a>
                            </li>
                            <li class="nav-item" style=" background-color:rgb(199 202 205);">
                                <a class="nav-link" id="saledatatab" data-bs-toggle="tab" href="#saledatau" role="tab" aria-controls="saledatau" aria-selected="false">Sales</a>
                            </li>
                            <li class="nav-item" style=" background-color:rgb(199 202 205);">
                                <a class="nav-link " id="paymentdatatab" data-bs-toggle="tab" href="#paymentdatau" role="tab" aria-controls="paymentdatau" aria-selected="false">Payments</a>
                            </li>
                            <li class="nav-item" style=" background-color:rgb(199 202 205);">
                                <a class="nav-link " id="home-tab" data-bs-toggle="tab" href="#home-1" role="tab" aria-controls="home-1" aria-selected="false">Unpaid Invoice</a>
                            </li>
                            <li class="nav-item" style=" background-color:rgb(199 202 205);">
                                <a class="nav-link " id="accounthistorydatatab" data-bs-toggle="tab" href="#accounthistorydatau" role="tab" aria-controls="accounthistorydatau" aria-selected="false" style=" border-right:none;">Account History</a>
                            </li>
                        </ul>
                        <div class="tab-pane fade active show row" id="infodatau">
                            <div class="row">
                                <div class="col-lg-8 col-sm-8">
                                    <div class="form-group">
                                        <label class="dim col-sm-12" style="position:absolute; width:115px; text-align:right; font-weight:bold; margin-top:5px">Company</label>
                                            @Html.EditorFor(model => model.Company, new { htmlAttributes = new { @class = "form-control searchname", placeholder = "Enter Company Name", id = "companynameu", autocomplete = "off", style="width:84%; margin-left:122px; margin-top:10px; border-top:1px solid gray; border-left:1px solid gray;" } })
                                        <div style="cursor:pointer" id="listallmissions"></div>
                                        <label class="text-danger db" id="companyvalidation"></label>
                                    </div>
                                </div>
                                <div class="col-lg-2 col-sm-4" style="padding-top:10px;">
                                    <i class="icon-book-open" style="padding:5px; border:1px solid gray; margin-left:-15px;"></i>
                                </div>

                            </div>
                            <div class="row">
                                <div class="col-lg-12 col-sm-8">
                                    <div class="row">
                                        <label class="dim col-sm-12" style="position:absolute; width:146px;  font-size:13px; text-align:right; font-weight:bold;"> Name </label>
                                        <div class="col-lg-3 col-sm-2" style="padding-left:85px;">
                                            <div class="form-group">
                                                @*<label class="dim col-sm-8" style="font-weight:bold;margin-left: 92px;">Mr./Mrs.</label>*@
                                                @Html.DropDownListFor(model => model.Gender, (IEnumerable<SelectListItem>)ViewData["Gender"], "--Choose Title--", new { @class = "form-control dropdowncursor", id = "txtgenderu", style="border-top:1px solid gray; border-left:1px solid gray; width:130px; margin-left:56px;" })
                                            </div>
                                        </div>
                                        <div class="col-lg-4 col-sm-5" style="width:22%">
                                            <div class="form-group" style="text-align:end">
                                                @*<label class="dim col-sm-6" style="font-weight:bold;">First Name</label>*@
                                                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control ", placeholder = "First Name", id = "txtFirstNameu" , style="border-top:1px solid gray; border-left:1px solid gray;" } })
                                                <label class="text-danger db" style="display:none" id="fnamevalidation">Enter First Name</label>
                                            </div>
                                        </div>

                                        <div class="col-lg-4 col-sm-5" style="width:22%; margin-left:-20px;">
                                            <div class="form-group">
                                                @*<label class="dim col-sm-6" style="font-weight:bold;">Last name</label>*@
                                                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control ", placeholder = "Last Name", id = "txtLastNameu", style="border-top:1px solid gray; border-left:1px solid gray;" } })
                                                <label class="text-danger db" style="display:none" id="lnamevalidation">Enter Last Name</label>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-lg-8 col-sm-8">
                                    <div class="row">
                                        <div class="col-lg-7 col-sm-6">
                                            <div class="form-group">
                                                <label class="dim " style="position:absolute; width:115px; text-align:right; font-weight:bold;"> Street </label>
                                                    @Html.EditorFor(model => model.Street, new { htmlAttributes = new { @class = "form-control ", placeholder = "Enter Street ", id = "StretNumberu", style="width:70%; margin-left:122px; border-top:1px solid gray; border-left:1px solid gray;" } })
                                                    @Html.ValidationMessageFor(model => model.Street, "", new { @class = "text-danger db" })
                                            </div>
                                        </div>
                                        <div class="col-lg-5 col-sm-6">
                                            <div class="form-group">
                                                    @Html.EditorFor(model => model.Suite, new { htmlAttributes = new { @class = "form-control ", placeholder = "STE A", id = "suiteu", style="width:86%; margin-left:38px; border-top:1px solid gray; border-left:1px solid gray;" } })
                                                    @Html.ValidationMessageFor(model => model.Suite, "", new { @class = "text-danger db" })
                                                <i class="fa fa-map-marker setIcon" aria-hidden="true"></i>
                                            </div>
                                        </div>

                                    </div>
                                </div>
                                <div class="col-lg-4 col-sm-8">
                                <div style="height:99px; width:270px; border:1px solid blue; float:right; margin-top:-65px;">
                                        <h5 style="text-align:center; color:red; margin-top:8px; font-weight:bold;">Accurate Balance</h5>
                                        <h4 style="text-align:center; color:#b6b605; margin-top:25px; font-weight:bold;">Click Here</h4>
                                            @*<span id="PreviousBalanceS" style="font-size:20px; margin-left:95px; font-weight:bold; display:none;"></span>*@
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-lg-8 col-sm-8">
                                    <div class="row">
                                        <div class="col-lg-10 col-sm-6" style="margin-left:11%">
                                            <div class="form-group">
                                                <label class="dim " style="position:absolute; width:115px; font-weight:bold;left:4%">Business Address  </label>
                                                    @Html.EditorFor(model => model.BusinessAddress, new { htmlAttributes = new { @class = "form-control ", placeholder = "Business Address", id = "streetNumber", style="margin-left:42px; border-top:1px solid gray; border-left:1px solid gray;" } })
                                                    @Html.ValidationMessageFor(model => model.BusinessAddress, "", new { @class = "text-danger db" })
                                            </div>
                                                @*<div id="output" style="width:500px; height:500px; border:1px solid red;"></div>*@
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-lg-8 col-sm-8">
                                    <div class="row">
                                        <div class="col-lg-8 col-sm-8">
                                            <div class="row">
                                                <div class="col-lg-6 col-sm-5">
                                                    <div class="form-group">
                                                        <label class="dim" style="position:absolute; width:115px; font-weight:bold; text-align:right">City,ST Zip</label>
                                                            @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control ", placeholder = "Enter City", id = "txtcityu", style="width:70%; margin-left:122px; border-top:1px solid gray; border-left:1px solid gray;" } })
                                                            @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger db" })
                                                    </div>
                                                </div>
                                                <div class="col-lg-5 col-sm-5">
                                                    <div class="form-group">
                                                            @*<label class="dim col-sm-12">State</label>*@
                                                            @Html.DropDownListFor(model => model.State, (IEnumerable<SelectListItem>)ViewBag.CustomerState, "--Choose State--", new { @class = "form-control dropdowncursor", id = "stateu", style="margin-left:40px; border-top:1px solid gray; border-left:1px solid gray;" })
                                                        <label class="text-danger db" style="display:none" id="msgstate">Enter Customer State</label>

                                                    </div>

                                                </div>
                                              
                                            </div>
                                        </div>
                                        <div class="col-lg-4 col-sm-4">
                                            <div class="row">
                                                <div class="col-lg-10 col-sm-10">
                                                    <div class="form-group">
                                                            @*<label class="dim col-sm-12">Zip</label>*@
                                                            @*@Html.EditorFor(model => model.Zip, new { htmlAttributes = new { @class = "form-control ", placeholder = "ZipCode", id = "txtzipcode" } })*@
                                                            @Html.DropDownListFor(model => model.Zip, (IEnumerable<SelectListItem>)ViewBag.zipcode, "--Choose Zip--", new { @class = "form-control dropdowncursor", id = "txtzipcodeu", style="border-top:1px solid gray; border-left:1px solid gray; margin-left:10px;" })
                                                            @Html.ValidationMessageFor(model => model.Zip, "", new { @class = "text-danger db" })
                                                    </div>
                                                </div>
                                                <div class="col-lg-1 col-sm-2" style="margin-left:-25px; padding-top:5px;">
                                                    <div class="form-group">
                                                        <i class="mdi mdi-plus text-primary" data-bs-toggle="modal" data-bs-target="#addzipcode" style="margin-left:55px;  padding:5px; border:1px solid gray;"></i>
                                                            @*<i class="fa fa-pencil" data-bs-toggle="modal" data-bs-target="#addzipcode" style="font-size:15px; padding:5px; border:1px solid gray;"></i>*@
                                                    </div>
                                                </div>
                                            </div>

                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-lg-8 col-sm-8">
                                    <div class="row">
                                        <div class="col-lg-8 col-sm-8">
                                            <div class="form-group">
                                                <label class="dim" style="position:absolute; width:115px; font-weight:bold; text-align:right">Country </label>
                                                    @Html.EditorFor(model => model.Country, new { htmlAttributes = new { @class = "form-control ", placeholder = "Country", id = "Countryu", style="width:71%; margin-left:122px; border-top:1px solid gray; border-left:1px solid gray;" } })
                                                    @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger db" })
                                            </div>
                                        </div>
                                        <div class="col-lg-4 col-sm-4 " style="text-align:right;">
                                            <div class="form-group " style="padding-left:79px;">
                                                    @Html.CheckBox("CheckAdress", false, new { @id = "CheckAdress", })
                                                <label class="dim col-sm-8" for="CheckAddress" style="  font-weight:bold; margin-left:10px">
                                                    CheckAdress
                                                </label>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-lg-8 col-sm-8">
                                    <div class="row">
                                        <div class="col-lg-6 col-sm-6">
                                            <div class="form-group">
                                                <label class="dim" style="position:absolute; width:115px; font-weight:bold; text-align:right"> Phone</label>
                                                    @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control ", placeholder = "Enter Phone ", id = "phonenumberu", type = "number", style="margin-left:122px; width:77%; border-top:1px solid gray; border-left:1px solid gray;" } })
                                                   @* @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger db" })*@
                                                    <label class="text-danger db" style="display:none" id="phnvalidation">Enter First Name</label>
                                            </div>
                                        </div>
                                        <div class="col-lg-6 col-sm-6" style="padding-left:41px;">
                                            <div class="form-group">
                                                <label class="dim" style="position:absolute; font-weight:bold; width:50px; text-align:right;">Fax</label>
                                                    @Html.EditorFor(model => model.Fax, new { htmlAttributes = new { @class = "form-control ", placeholder = "EnterFax", id = "txtfaxu", style="margin-left:59px; width:83%; border-top:1px solid gray; border-left:1px solid gray;" } })
                                                    @Html.ValidationMessageFor(model => model.Fax, "", new { @class = "text-danger db" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class=" col-lg-12 col-sm-12">
                                    <div class="row">
                                        <div class="col-lg-8 col-sm-8">
                                            <div class="row">
                                                <div class="col-lg-6 col col-sm-6">
                                                    <div class="form-group">
                                                        <label class="dim " style="position:absolute; font-weight:bold; width:115px; text-align:right"> Cell </label>
                                                            @Html.EditorFor(model => model.Cell, new { htmlAttributes = new { @class = "form-control ", placeholder = "Enter Cell ", id = "txtcellu", type = "number", style="margin-left:122px; width:76%; border-top:1px solid gray; border-left:1px solid gray;" } })
                                                            @Html.ValidationMessageFor(model => model.Cell, "", new { @class = "text-danger db" })
                                                    </div>
                                                </div>
                                                <div class="col-lg-6 col-sm-6">
                                                    <div class="row">
                                                        <div class="col-lg-10 col-sm-10">
                                                            <div class="form-group">
                                                                <label class="dim " style="position:absolute; font-weight:bold; width:80px; text-align:right;">Provider</label>
                                                                    @Html.DropDownListFor(model => model.ProviderId, (IEnumerable<SelectListItem>)ViewBag.Provider, "--Choose Provider--", new { @class = "form-control dropdowncursor", id = "ProviderIDu", style="margin-left:85px; width:89%; border-top:1px solid gray; border-left:1px solid gray;" })
                                                                <label class="text-danger db" style="display:none" id="msgcustomertype">Enter Provider</label>
                                                            </div>
                                                        </div>
                                                     
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-lg-4 col-sm-4">
                                            <div class="row ">
                                                <div class="col-lg-10 col-sm-10">
                                                    <div class="form-group">
                                                        <label class="dim col-sm-6" style="position:absolute; font-weight:bold; width:100px;">Customer Type </label>
                                                            @Html.DropDownListFor(model => model.CustomerType, (IEnumerable<SelectListItem>)ViewBag.CustomerType, "--Choose Customer Type--", new { @class = "form-control dropdowncursor", id = "customertypeu", style="margin-left:103px; width:71%; border-top:1px solid gray; border-left:1px solid gray;" })
                                                        <label class="text-danger db" style="display:none" id="msgcustomertype">Enter Customer Type</label>
                                                    </div>
                                                </div>
                                              
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-lg-8 col-sm-8">
                                    <div class="row">
                                        <div class="col-lg-6 col-sm-6">
                                            <div class="form-group">
                                                <label class="dim col-sm-12" style="position:absolute; font-weight:bold; width:115px; text-align:right"> Other </label>
                                                    @Html.EditorFor(model => model.Other, new { htmlAttributes = new { @class = "form-control ", placeholder = "other ", id = "otheru", style="margin-left:122px; width:70%; border-top:1px solid gray; border-left:1px solid gray;" } })
                                                    @Html.ValidationMessageFor(model => model.Other, "", new { @class = "text-danger db" })
                                            </div>
                                        </div>
                                        <div class="col-lg-6 col-sm-6">
                                            <div class="form-group">
                                                <label class="dim col-sm-12" style="position:absolute; font-weight:bold; width:96px; font-size:12px"> Owner Address</label>
                                                    @Html.EditorFor(model => model.OwnerAddress, new { htmlAttributes = new { @class = "form-control ", placeholder = "Owner Adress ", id = "txtowneraddressu", style="margin-left:90px; width:78%; border-top:1px solid gray; border-left:1px solid gray;" } })
                                                    @Html.ValidationMessageFor(model => model.OwnerAddress, "", new { @class = "text-danger db" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-4 col-sm-4">
                                    <div class="form-group">
                                        <label class="dim col-sm-12" style="position:absolute; font-weight:bold; width:100px;"> Vehicle Number </label>
                                            @Html.EditorFor(model => model.VehicleNumber, new { htmlAttributes = new { @class = "form-control ", placeholder = "Enter Cell ", id = "txtvehiclenumberu", style="margin-left:105px; width:68%; border-top:1px solid gray; border-left:1px solid gray;" } })
                                            @Html.ValidationMessageFor(model => model.VehicleNumber, "", new { @class = "text-danger db" })
                                    </div>
                                </div>

                            </div>
                            <div class="row">
                                <div class="col-lg-8 col-sm-8">
                                    <div class="row">
                                        <div class="col-lg-6 col-sm-6">
                                            <div class="form-group">
                                                <label class="dim col-sm-6" style="position:absolute; font-weight:bold; width:115px; text-align:right"> Emial </label>
                                                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control ", placeholder = "Email ", id = "emailu", style="margin-left:122px; width:76%; border-top:1px solid gray; border-left:1px solid gray;" } })
                                                <label class="text-danger db" id="emailvalidation"></label>
                                            </div>
                                        </div>
                                        <div class="col-lg-6 col-sm-6">
                                            <div class="form-group">
                                                <label class="dim col-sm-6" style="position:absolute; font-weight:bold; width:80px; text-align:right;"> Website</label>
                                                    @Html.EditorFor(model => model.Website, new { htmlAttributes = new { @class = "form-control ", placeholder = "Website ", id = "Websiteu", style="margin-left:87px; width:79%; border-top:1px solid gray; border-left:1px solid gray;" } })
                                                    @Html.ValidationMessageFor(model => model.Website, "", new { @class = "text-danger db" })
                                            </div>
                                        </div>

                                    </div>
                                </div>
                                <div class="col-lg-4 col-sm-4">
                                    <div class="form-group">
                                        <label class="dim col-sm-12" style="position:absolute; font-weight:bold; width:100px; text-align:right; color:red"> DOB </label>
                                            @Html.EditorFor(model => model.Dob, new { htmlAttributes = new { @class = "form-control dropdowncursor", id = "txtdobu", style="margin-left:110px; width:68%; border-top:1px solid gray; border-left:1px solid gray; background:peachpuff;" } })
                                            @Html.ValidationMessageFor(model => model.Dob, "", new { @class = "text-danger db" })
                                    </div>
                                </div>

                            </div>
                            <div class="row">
                                <div class="col-lg-8 col-sm-8">
                                    <div class="row">
                                        <div class="col-lg-6 col-sm-6">
                                            <div class="form-group">
                                                <label class="dim col-sm-12" style="position:absolute; font-weight:bold; width:115px; text-align:right"> Tax Id [FEIN] </label>
                                                    @Html.EditorFor(model => model.TaxIdfein, new { htmlAttributes = new { @class = "form-control ", placeholder = "TaxID ", id = "Taxidfeinu", style="margin-left:122px; width:75%; border-top:1px solid gray; border-left:1px solid gray; background:#f7f703;" } })
                                                    @Html.ValidationMessageFor(model => model.TaxIdfein, "", new { @class = "text-danger db" })
                                                <label class="text-danger db" id="taxidfeinvalidation"></label>
                                            </div>
                                        </div>
                                        <div class="col-lg-6 col-sm-6">
                                            <div class="form-group">
                                                <label class="dim col-sm-12" style="position:absolute; font-weight:bold; width:80px; text-align:right"> State ID # </label>
                                                    @Html.EditorFor(model => model.StateIdnumber, new { htmlAttributes = new { @class = "form-control ", placeholder = "State ID Number ", id = "Stateidnumberu", style="margin-left:88px; width:79%; border-top:1px solid gray; border-left:1px solid gray;" } })
                                                    @Html.ValidationMessageFor(model => model.StateIdnumber, "", new { @class = "text-danger db" })
                                                <label class="text-danger db" id="stateidvalidation"></label>
                                            </div>
                                        </div>

                                    </div>
                                </div>
                                <div class="col-lg-4 col-sm-4">
                                    <div class="form-group">
                                        <label class="dim col-sm-6" style="position:absolute; font-weight:bold; width:100px; text-align:right; color:red"> SSN </label>
                                            @Html.EditorFor(model => model.Ssn, new { htmlAttributes = new { @class = "form-control ", placeholder = "SSN ", id = "Ssnu", style="margin-left:110px; width:68%; border-top:1px solid gray; border-left:1px solid gray; background:peachpuff;" } })
                                        <label class="text-danger db" id="ssnvalidation"></label>
                                    </div>
                                </div>

                            </div>
                            <div class="row">
                                <div class="col-lg-8 col-sm-8">
                                    <div class="row">
                                        <div class="col-lg-6 col-sm-6">
                                            <div class="form-group">
                                                <label class="dim col-sm-12" style="position:absolute; font-weight:bold; width:115px; text-align:right"> Tobacco License </label>
                                                    @Html.EditorFor(model => model.TobaccoLicenseNumber, new { htmlAttributes = new { @class = "form-control ", placeholder = "Tobacco Licenese ", id = "TobaccoLisceneseu", style="margin-left:122px; width:75%; border-top:1px solid gray; border-left:1px solid gray; background:skyblue;" } })
                                                    @Html.ValidationMessageFor(model => model.TobaccoLicenseNumber, "", new { @class = "text-danger db" })
                                                <label class="text-danger db" id="tobaccolisencevalidation"></label>
                                            </div>
                                        </div>
                                        <div class="col-lg-6 col-sm-6">
                                            <div class="form-group">
                                                <label class="dim col-sm-6" style="position:absolute; font-weight:bold; width:80px; text-align:right"> Vendor </label>
                                                    @Html.EditorFor(model => model.Vendor, new { htmlAttributes = new { @class = "form-control ", placeholder = "Vendor", id = "vendoru", style="margin-left:88px; width:79%; border-top:1px solid gray; border-left:1px solid gray; background:skyblue;" } })
                                                    @Html.ValidationMessageFor(model => model.Vendor, "", new { @class = "text-danger db" })
                                            </div>
                                        </div>

                                    </div>
                                </div>
                                <div class="col-lg-4 col-sm-4">
                                    <div class="row">
                                        <div class="col-lg-6 col-sm-6">
                                            <div class="form-group">
                                                <label class="dim col-sm-6" style="position:absolute; font-weight:bold; width:88px; color:red"> DL Number </label>
                                                    @Html.EditorFor(model => model.DrivingLicenseNumber, new { htmlAttributes = new { @class = "form-control ", placeholder = "Driving Licenese ", id = "txtdrivingnumberu", style="margin-left:79px; border-top:1px solid gray; border-left:1px solid gray; background:peachpuff;" } })
                                                    @Html.ValidationMessageFor(model => model.DrivingLicenseNumber, "", new { @class = "text-danger db" })
                                                <label class="text-danger db" id="drivinglisencevalidation"></label>
                                            </div>
                                        </div>
                                        <div class="col-lg-6 col-sm-6">
                                            <div class="row">
                                                <div class="col-lg-9 col col-sm-9">
                                                    <div class="form-group">
                                                            @*<label class="dim col-sm-12">License State</label>*@
                                                            @Html.DropDownListFor(model => model.DrivingLicenseStateId, (IEnumerable<SelectListItem>)ViewBag.DrivingLicenseState, "Choose State", new { @class = "form-control dropdowncursor", id = "txtdrivinglicensestateu", style="margin-left:53px; border-top:1px solid gray; border-left:1px solid gray; background:peachpuff;" })
                                                        <label class="text-danger db" style="display:none" id="msgcustomertype">Enter Driving License State</label>
                                                    </div>
                                                </div>
                                               @* <div class="col-lg-3 col-sm-3" style="padding-top:5px;">
                                                    <i class="mdi mdi-plus text-primary" data-bs-toggle="modal" data-bs-target="#adddrivinglicensestate" style="margin-left:22px;  padding:5px; border:1px solid gray;"></i>

                                                </div>*@
                                            </div>
                                        </div>
                                    </div>
                                </div>

                            </div>
                            <div class="row">
                                <div class="col-lg-8 col-sm-8">
                                    <div class="row">
                                        <div class="col-lg-6 col-sm-6">
                                            <div class="form-group">
                                                <label class="dim col-sm-6" style="position:absolute; font-weight:bold; width:115px; text-align:right"> Cigaratte License </label>
                                                    @Html.EditorFor(model => model.CigaretteLicenseNumber, new { htmlAttributes = new { @class = "form-control ", placeholder = "Cigratte License Number ", id = "txtcigarettelicensenumberu", style="margin-left:122px; width:75%; border-top:1px solid gray; border-left:1px solid gray;" } })
                                                    @Html.ValidationMessageFor(model => model.CigaretteLicenseNumber, "", new { @class = "text-danger db" })
                                                <label class="text-danger db" id="cigrattelisencevalidation"></label>
                                            </div>
                                        </div>
                                        <div class="col-lg-6 col-sm-6">
                                            <div class="form-group">
                                                <label class="dim col-sm-6" style="position:absolute; font-weight:bold; width:80px; text-align:right"> DEA </label>
                                                    @Html.EditorFor(model => model.Dea, new { htmlAttributes = new { @class = "form-control ", placeholder = "DEA", id = "deau", style="margin-left:88px; width:79%; border-top:1px solid gray; border-left:1px solid gray;" } })
                                                    @Html.ValidationMessageFor(model => model.Dea, "", new { @class = "text-danger db" })
                                            </div>
                                        </div>

                                    </div>
                                </div>
                               @* <div class="col-lg-4 col-sm-4">
                                    <div class="form-group">
                                            @Html.CheckBox("Authorized", false, new { @id = "Authorizedu", })
                                        <label class="dim col-sm-8" for="Authorized" style="font-weight:bold;">
                                            Authorized
                                        </label>
                                    </div>
                                </div>*@

                            </div>
                            <div class="row">
                                <div class="col-lg-12 col-sm-12">
                                    <div class="form-group">
                                        <label class="dim col-sm-12" style="position:absolute; font-weight:bold; width:115px; text-align:right"> Memo </label>
                                            @Html.TextAreaFor(model => model.Memo, 5, 12, new { @class = "form-control height", placeholder = "memo", id = "memou", style="margin-left:122px; width:90%; border-top:1px solid gray; border-left:1px solid gray;" })
                                            @Html.ValidationMessageFor(model => model.Memo, "", new { @class = "text-danger db" })
                                    </div>
                                </div>
                            </div>
                                @*</form>*@
                        </div>
                        <div class="tab-pane fade row" id="classificationdatau">
                            <div class="row">
                                <div class="col-lg-4 col-sm-4">
                                    <div class="row">
                                        <div class="row">
                                            <div class=" col-lg-10 col-sm-10" style="margin-top:15px;">
                                                <div class="form-group">
                                                    <label class="dim col-sm-6" style="font-weight:bold; color:black; width:85px; text-align:right; position:absolute;">Group </label>
                                                        @Html.DropDownListFor(model => model.CustomerClassification.GroupId, (IEnumerable<SelectListItem>)ViewBag.Group, "--Group--", new { @class = "form-control dropdowncursor", id = "Groupu" , style="margin-left:90px; width:81%; border-top:1px solid gray; border-left:1px solid gray;" })
                                                </div>
                                            </div>
                                            <div class=" col-lg-2 col-sm-2" style="padding-top:21px;">
                                                <i class="mdi mdi-plus text-primary" data-bs-toggle="modal" data-bs-target="#addgroup" style=" margin-left:20px; border:1px solid gray; padding:5px;"></i>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class=" col-lg-10 col-sm-10">
                                                <div class="form-group">
                                                    <label class="dim col-sm-6" style="font-weight:bold; color:black; width:85px; text-align:right; position:absolute;"> SubGroup </label>
                                                        @Html.DropDownListFor(model => model.CustomerClassification.SubGroupId, (IEnumerable<SelectListItem>)ViewBag.SubGroup, "--SubGroup--", new { @class = "form-control dropdowncursor", id = "SubGroupu", style="margin-left:90px; width:81%; border-top:1px solid gray; border-left:1px solid gray;" })
                                                </div>
                                            </div>
                                            <div class="col-lg-2 col-sm-2" style="padding-top:5px;">
                                                <i class="mdi mdi-plus text-primary" data-bs-toggle="modal" data-bs-target="#addsubgroup" style=" margin-left:20px; border:1px solid gray; padding:5px;"></i>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-lg-10 col-sm-10">
                                                <div class="form-group">
                                                    <label class="dim col-sm-6" style="font-weight:bold; color:black; width:85px; text-align:right; position:absolute;">Zone </label>
                                                        @Html.DropDownListFor(model => model.CustomerClassification.Zone, (IEnumerable<SelectListItem>)ViewBag.Zone, "--Zone--", new { @class = "form-control dropdowncursor", id = "Zoneu", style="margin-left:90px; width:81%; border-top:1px solid gray; border-left:1px solid gray;" })

                                                </div>
                                            </div>
                                            <div class="col-lg-2 col-sm-2 " style="padding-top:5px;">
                                                <i class="mdi mdi-plus text-primary" data-bs-toggle="modal" data-bs-target="#addzone" style=" margin-left:20px; border:1px solid gray; padding:5px;"></i>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-lg-10 col-sm-10">
                                                <div class="form-group">
                                                    <label class="dim col-sm-6" style="font-weight:bold; color:black; width:88px; text-align:right; position:absolute;">BusinessType</label>
                                                        @Html.DropDownListFor(model => model.CustomerClassification.BusinessTypeId, (IEnumerable<SelectListItem>)ViewBag.BusinessType, "--BusinessType--", new { @class = "form-control dropdowncursor", id = "BusinessTypeu", style="margin-left:92px; width:81%; border-top:1px solid gray; border-left:1px solid gray;" })

                                                </div>
                                            </div>
                                            <div class="col-lg-2 col-sm-2" style="padding-top:5px;">
                                                <i class="mdi mdi-plus text-primary" data-bs-toggle="modal" data-bs-target="#addbusinesstype" style=" margin-left:20px; border:1px solid gray; padding:5px;"></i>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-lg-10 col-sm-10">
                                                <div class="form-group">
                                                    <label class="dim col-sm-6" style="font-weight:bold; color:black; width:85px; text-align:right; position:absolute;">Salesman</label>
                                                        @Html.DropDownListFor(model => model.CustomerClassification.SalesmanId, (IEnumerable<SelectListItem>)ViewBag.Salesman, "--Salesman--", new { @class = "form-control dropdowncursor", id = "SalesManu", style="margin-left:90px; width:81%; border-top:1px solid gray; border-left:1px solid gray;" })

                                                </div>
                                            </div>
                                            <div class="col-lg-2 col-sm-2 " style="padding-top:5px;">
                                                <i class="mdi mdi-plus text-primary" data-bs-toggle="modal" data-bs-target="#addsalesman" style=" margin-left:20px; border:1px solid gray; padding:5px;"></i>
                                            </div>
                                        </div>

                                    </div>

                                </div>
                                <div class="col-lg-4 col-sm-4" style="margin-top:5px">
                                    <div class="row">
                                        <div class="col-lg-10 col-sm-10">
                                            <div class="form-group">
                                                <label class="dim col-sm-6" style="font-weight:bold; width:115px; text-align:right; position:absolute;">Ship To Reference </label>
                                                    @Html.DropDownListFor(model => model.CustomerClassification.ShiptoReference, (IEnumerable<SelectListItem>)ViewBag.ShiptoReference, "--Select--", new { @class = "form-control dropdowncursor", id = "ShipToReferenceu", style="margin-left:118px; width:75%; border-top:1px solid gray; border-left:1px solid gray;" })
                                            </div>
                                        </div>
                                        <div class="col-lg-2 col-sm-2" style="padding-top:5px;">
                                            <i class="mdi mdi-plus text-primary" data-bs-toggle="modal" data-bs-target="#addshiptoreference" style="margin-left:25px; border:1px solid gray; padding:5px;"></i>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-lg-12 col-sm-12">
                                    <div class="row">
                                        <div class="col-lg-4 col-sm-4 border">
                                            <br />
                                            <h2 style="color:blue"> Delivery Info</h2>
                                            <div class="row">
                                                <div class="col-lg-10 col-sm-10">
                                                    <div class="form-group">
                                                        <label class="dim col-sm-12" style="font-weight:bold; color:black; width:120px; text-align:right; position:absolute;">ShippedVia</label>
                                                            @Html.DropDownListFor(model => model.CustomerClassification.ShippedViaId, (IEnumerable<SelectListItem>)ViewBag.ShipmentPurchase, "--ShippedVia--", new { @class = "form-control dropdowncursor", id = "ShippedViau", style="margin-left:125px; width:61%; border-top:1px solid gray; border-left:1px solid gray;" })
                                                    </div>
                                                </div>
                                                <div class="col-lg-2 col-sm-2 " style="padding-top:5px;">
                                                    <i class="mdi mdi-plus text-primary" data-bs-toggle="modal" data-bs-target="#addshippedvia" style="border:1px solid gray; padding:5px;"></i>

                                                </div>
                                            </div>
                                            <div class="row">
                                                <div class="col-lg-10 col-sm-10">
                                                    <div class="form-group">
                                                        <label class="dim col-sm-12" style="font-weight:bold; color:black; width:120px; text-align:right; position:absolute;">Route name</label>
                                                            @Html.DropDownListFor(model => model.CustomerClassification.RouteId, (IEnumerable<SelectListItem>)ViewBag.Route, "--Route--", new { @class = "form-control dropdowncursor", id = "Routeu", style="margin-left:125px; width:61%; border-top:1px solid gray; border-left:1px solid gray;" })
                                                    </div>
                                                </div>
                                                <div class="col-lg-2 col-sm-2 " style="padding-top:5px;">
                                                    <i class="mdi mdi-plus text-primary" data-bs-toggle="modal" data-bs-target="#addroutename" style="border:1px solid gray; padding:5px;"></i>

                                                </div>
                                            </div>
                                            <div class="row">
                                                <div class="col-lg-10 col-sm-10">
                                                    <div class="form-group">
                                                        <label class="dim col-sm-12" style="font-weight:bold; color:black; width:126px; text-align:right; position:absolute;">Route Delievery Day</label>
                                                            @Html.DropDownListFor(model => model.CustomerClassification.RouteDeliveryDay, (IEnumerable<SelectListItem>)ViewBag.routedeliverydays, "--Delievery Days--", new { @class = "form-control dropdowncursor", id = "routedeliverydayu", style="margin-left:128px; width:61%; border-top:1px solid gray; border-left:1px solid gray;" })

                                                    </div>
                                                </div>

                                            </div>
                                            <div class="row">
                                                <div class="col-lg-10 col-sm-10">
                                                    <div class="form-group">
                                                        <label class="dim col-sm-12" style="font-weight:bold; color:black; width:120px; text-align:right; position:absolute;">Driver's name</label>
                                                            @Html.DropDownListFor(model => model.CustomerClassification.DriverName, (IEnumerable<SelectListItem>)ViewBag.Driver, "--Driver--", new { @class = "form-control dropdowncursor", id = "Driveru", style="margin-left:125px; width:61%; border-top:1px solid gray; border-left:1px solid gray;" })
                                                        <label class="text-danger db" style="display:none" id="msgcustomertype">Select Driver</label>
                                                    </div>
                                                </div>
                                                <div class="col-lg-2 col-sm-2" style="padding-top:5px;">
                                                    <i class="mdi mdi-plus text-primary" data-bs-toggle="modal" data-bs-target="#adddrivername" style="border:1px solid gray; padding:5px;"></i>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-lg-4 col-sm-4 border">
                                            <br />
                                            <h2 style="color:blue">Customer Setting</h2>
                                            <div class="col-lg-12 col-sm-12">
                                                <div class="form-group">
                                                        @Html.CheckBox("CustomerClassification.OutOfStateCustomer", false, new { @id = "txtOutOfstateCustomeru", })
                                                    <label class="dim col-sm-8" for="OutOfStateCustomer" style="color:blue; font-weight:bold">
                                                        Out Of State Customer
                                                    </label>
                                                </div>
                                            </div>
                                            <div class="col-lg-12 col-sm-12">
                                                <div class="form-group">
                                                        @Html.CheckBox("CustomerClassification.AddtoMaillingList", false, new { @id = "txtAddToMailingListu", })
                                                    <label class="dim col-sm-8" for="AddtoMaillingList" style="color:blue; font-weight:bold">
                                                        Add To Mailing List
                                                    </label>
                                                </div>
                                            </div>
                                            <div class="col-lg-12 col-sm-12 ">
                                                <div class="form-group">
                                                        @Html.CheckBox("CustomerClassification.AddtoemailTextList", false, new { @id = "txtaddtoemailtextlistu", })
                                                    <label class="dim col-sm-8" for="AddtoemailTextLis" style="color:blue; font-weight:bold">
                                                        Add To Email/Text List
                                                    </label>
                                                </div>
                                            </div>
                                            <div class="col-lg-12 col-sm-12 ">
                                                <div class="form-group">
                                                        @Html.CheckBox("CustomerClassification.RejectPromotion", false, new { @id = "txtrejectpromotionu", })
                                                    <label class="dim col-sm-8" for="RejectPromotion" style="color:blue; font-weight:bold; color:red;">
                                                        Reject Promotion
                                                    </label>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-lg-4 col-sm-4 border">
                                            <br />
                                            <h2 style="color:blue">Invoice Setting</h2>
                                            <div class="col-lg-12 col-sm-12 ">
                                                <div class="form-group ">
                                                        @Html.CheckBox("CustomerClassification.ViewInvoicePrevBalance", false, new { @id = "txtViewInvoicePrevBalanceu", })
                                                    <label class="dim col-sm-8" for="ViewInvoicePrevBalance" style="font-weight:bold">
                                                        View Invoice Prev.Balance
                                                    </label>
                                                </div>
                                            </div>
                                            <div class="col-lg-12 col-sm-12 ">
                                                <div class="form-group">
                                                        @Html.CheckBox("CustomerClassification.ViewRetailandDiscount", false, new { @id = "txtViewRetailandDiscountu", })
                                                    <label class="dim col-sm-8" for="ViewRetailandDiscount" style="font-weight:bold">
                                                        View Retail And Discount
                                                    </label>
                                                </div>
                                            </div>
                                            <div class="col-lg-12 col-sm-12">
                                                <div class="form-group">
                                                    <label class="dim " style="position:absolute; font-weight:bold;">Barcode</label>
                                                        @Html.DropDownListFor(model => model.CustomerClassification.BarCodeId, (IEnumerable<SelectListItem>)ViewData["Group"], "--Retail--", new { @class = "form-control dropdowncursor", id = "txtbarcodeu", style="margin-left:56px; width:85%;" })
                                                        @*<i class="mdi mdi-plus text-primary" data-bs-toggle="modal" data-bs-target="#addbarcode"></i>*@
                                                </div>
                                            </div>
                                            <div class="col-lg-12 col-sm-12 mt-4">
                                                <div class="form-group">
                                                    <label class="dim " style="position:absolute; font-weight:bold;"> Default Invoice Copies </label>
                                                        @Html.EditorFor(model => model.CustomerClassification.DefaultInvoiceCopies, new { htmlAttributes = new { @class = "form-control ", id = "txtdefaultinvoicecopiesu", style="margin-left:237px; width:30%;" } })
                                                        @Html.ValidationMessageFor(model => model.CustomerClassification.DefaultInvoiceCopies, "", new { @class = "text-danger db" })
                                                </div>
                                            </div>
                                            <div class="col-lg-12 col-sm-12">
                                                <div class="form-group">
                                                        @Html.CheckBox("CustomerClassification.SpecialInvoiceCustom", false, new { @id = "txtSpecialInvoiceCustomu", })
                                                    <label class="dim col-sm-8" for="SpecialInvoiceCustom" style="font-weight:bold; color:red;">
                                                        Special Invoive Custom
                                                    </label>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row" style="margin-top:20px;">
                                    @*<div class="row mt-3">
                                <div class="offset-lg-4 col-lg-8 offset-sm-4 col-sm-8">
                                <div class="form-group">
                                @Html.CheckBox("CustomerClassification.UseDefaultInvMemo", false, new { @id = "defaultinvmemou", })
                                <label class="dim col-sm-8" for="Default Inv Memo">
                                User Default Inv Memo
                                </label>
                                </div>
                                </div>
                                </div>*@
                                <div class="row">
                                    <div class="col-lg-4 col col-sm-4">
                                        <div class="form-group">
                                            <label class="dim " style="position:absolute; font-weight:bold"> Other Customer Reference </label>
                                                @Html.EditorFor(model => model.CustomerClassification.OtherCustomerReference, new { htmlAttributes = new { @class = "form-control ", placeholder = "Other Reference Number ", id = "txtOtherReferenceNumberu", style="margin-left:173px; width:50%; border-top:1px solid gray; border-left:1px solid gray;" } })
                                                @Html.ValidationMessageFor(model => model.CustomerClassification.OtherCustomerReference, "", new { @class = "text-danger db" })
                                        </div>
                                    </div>
                                    <div class="col-lg-8 col col-sm-8">
                                        <div class="form-group">
                                            <label class="dim " style="position:absolute; color:gray"> Invoice Memo </label>
                                                @Html.CheckBox("CustomerClassification.UseDefaultInvMemo", false, new { @id = "defaultinvmemou", style="margin-left:200px;" })
                                            <label class="dim col-sm-8" for="Default Inv Memo">
                                                User Default Inv Memo
                                            </label>
                                                @Html.TextAreaFor(model => model.CustomerClassification.InvoiceMemo, 5, 12, new { @class = "form-control height", placeholder = "InvoiceMemo", id = "txtinvoicememou", style="width:107%; border-top:1px solid gray; border-left:1px solid gray;"})
                                                @Html.ValidationMessageFor(model => model.CustomerClassification.InvoiceMemo, "", new { @class = "text-danger db" })
                                        </div>
                                    </div>

                                </div>
                            </div>
                        </div>
                        <div class="tab-pane fade row" id="billinginfodatau">
                            <div class="col-lg-12 col-sm-12">
                                <div class="row" style="margin-top:10px">
                                    <div class="col-lg-8 col-sm-8 col px-md-5 ">
                                        <div class="row  border border-dark ">
                                            <div class="row">
                                                <h2 style="color:blue; margin-top:10px;">Sales Information</h2>

                                                <div class="form-group mt-4">

                                                    <label class="dim  fs-5 text-primary" for=" TaxExempt" style="font-weight:bold;">
                                                        TaxExempt
                                                    </label>
                                                        @Html.CheckBox("CustomerBillingInfo.IsTaxExempt", false, new { @id = "txttaxexemptu", style="margin-top:7px;" })
                                                </div>

                                            </div>
                                            <div class=" col-lg-12 col-sm-12 mt-4">
                                                <div class="row">
                                                    <div class=" col-lg-6 col-sm-6" style="padding-top:10px;">
                                                        <div class="row">
                                                            <div class="col-lg-10 col-sm-10">
                                                                <div class="form-group ">
                                                                    <label class="text-primary" style="position:absolute; font-weight:bold;">Pricing</label>
                                                                        @Html.DropDownListFor(model => model.CustomerBillingInfo.PricingId, (IEnumerable<SelectListItem>)ViewBag.Pricing, "--Pricing--", new { @class = "form-control dropdowncursor", id = "txtpricingidu", style="margin-left:50px; width:80%;" })
                                                                    <label class="text-danger db" style="display:none" id="msgcustomertype">Select Price</label>
                                                                </div>
                                                            </div>
                                                            <div class="col-lg-2 col-sm-2" style="margin-left:-22px; padding-top:5px;">
                                                                <div class="col-lg-2 col-sm-2 ">
                                                                    <i class="mdi mdi-plus text-primary" data-bs-toggle="modal" data-bs-target="#addpricing" style="padding:5px; border:1px solid gray;"></i>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="col-lg-6 col-sm-3">
                                                        <div class="form-group">
                                                            <label style=" position:absolute; font-weight:bold;"> Retail Plus% </label>
                                                                @Html.EditorFor(model => model.CustomerBillingInfo.RetailPlusPercentage, new { htmlAttributes = new { @class = "form-control ", placeholder = "$0.00", id = "txtretailpluspercentageu", style="margin-left:85px;width:50%;" } })
                                                                @Html.ValidationMessageFor(model => model.CustomerBillingInfo.RetailPlusPercentage, "", new { @class = "text-danger db" })
                                                            <label style=" position:absolute; font-weight:bold;"> Retail Plus$ </label>
                                                                @Html.EditorFor(model => model.CustomerBillingInfo.RetailPlus, new { htmlAttributes = new { @class = "form-control ", placeholder = "$0.00", id = "txtretailplusu", style="margin-left:85px;width:50%;" } })
                                                                @Html.ValidationMessageFor(model => model.CustomerBillingInfo.RetailPlus, "", new { @class = "text-danger db" })
                                                        </div>
                                                    </div>

                                                </div>
                                            </div>
                                            <br />
                                            <br />
                                            <br />
                                            <div class="col-lg-12 col-sm-12 mt-4">
                                                <div class="row">
                                                    <div class="form-group col-sm-6 col-lg-6">
                                                        <div class="form-group">
                                                                @Html.CheckBox("CustomerBillingInfo.IsGetSalesDiscounts", false, new { @id = "txtisgetsalesdiscountsu", style="margin-top:4px;" })
                                                            <label class="dim col-sm-10  text-primary" for=" GetSales/Discounts" style="font-weight:bold; margin-left:5px;">
                                                                Get Sales/Discounts
                                                            </label>
                                                        </div>
                                                    </div>
                                                    <div class="col-sm-6 col-md-6 col-lg-6">
                                                            @Html.CheckBox("CustomerBillingInfo.IsOutOfStateCustomer", false, new { @id = "txtisoutofstatecustomeru", })
                                                        <label class="dim col-sm-10 fs-5 text-primary " for=" OutOfStatesCustomers" style="font-weight:bold">
                                                            Out Of States Customers
                                                        </label>

                                                    </div>

                                                </div>
                                            </div>
                                        </div>
                                        <br />
                                        <div class=" col-lg-12 col-sm-12 ">
                                            <div class="row">
                                                <div class=" col-lg-4 col-sm-4 ">
                                                    <div class="form-group">
                                                        <button type="button" class="btn btn-light fs-6 btn-lg btn-block" , id="txtspecialprices" , style="width:-webkit-fill-available; border-radius:unset; background:rgb(232, 236, 239)">Special Prices</button>
                                                    </div>
                                                </div>

                                                <div class=" col-lg-8 col-sm-8 ">
                                                    <div class="form-group">
                                                        <button type="button" class="btn btn-light fs-6 btn-lg btn-block" , id="txtadditionalitemdiscount/charge" , style="width:-webkit-fill-available; border-radius:unset; background:rgb(232, 236, 239)">Additional Item Discount/Charge</button>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>

                                        <div class=" col-lg-12 col-sm -12">
                                            <div class="row">
                                                <div class=" col-lg-6 col-sm-6  mt-5">
                                                    <div class="form-group">
                                                        <label class="col-sm-6 col-lg-6" style="font-weight:bold; width:95px; text-align:right; position:absolute;">Additional Invoice Charge</label>
                                                            @Html.EditorFor(model => model.CustomerBillingInfo.AdditionalInvoiceCharge, new { htmlAttributes = new { @class = "form-control ", placeholder = "%0.00", id = "txtadditionalinvoicechargeu", style=" width:50%; margin-left:109px;" } })
                                                            @Html.ValidationMessageFor(model => model.CustomerBillingInfo.AdditionalInvoiceCharge, "", new { @class = "text-danger db" })
                                                    </div>
                                                </div>
                                                <div class=" col-lg-6 col-sm-6  mt-5">
                                                    <div class="form-group">
                                                        <label class="col-sm-6 col-lg-6" style="font-weight:bold; width:105px; text-align:right; position:absolute;"> Additional Invoice Discount </label>
                                                            @Html.EditorFor(model => model.CustomerBillingInfo.AdditionalInvoiceDiscount, new { htmlAttributes = new { @class = "form-control ", placeholder = "$0.00", id = "txtadditionalinvoicediscountu",style=" width:50%; margin-left:115px;" } })
                                                            @Html.ValidationMessageFor(model => model.CustomerBillingInfo.AdditionalInvoiceDiscount, "", new { @class = "text-danger db" })
                                                    </div>
                                                </div>

                                            </div>
                                        </div>

                                    </div>


                                    <br />
                                    <div class="col-lg-4 col-sm-4 border border-dark">
                                        <div class="=row">
                                            <br />
                                            <h2 style="color:blue">Customer Credit</h2>
                                            <div class="row">
                                                <div class="col-lg-10 col-sm-10">
                                                    <div class="form-group">
                                                        <label class="dim col-sm-8 text-primary" style="position:absolute; font-weight:bold; width:105px; text-align:right;">Payement Terms</label>
                                                            @Html.DropDownListFor(model => model.CustomerBillingInfo.PaymentTermsId, (IEnumerable<SelectListItem>)ViewBag.PaymentTerm, "--PayementTerms--", new { @class = "form-control dropdowncursor", id = "paymenttermsidu", style=" margin-left:107px; width:70%; border-left:1px solid gray; border-top:1px solid gray;" })
                                                    </div>
                                                </div>
                                                <div class="col-lg-2 col-sm-2 ">
                                                    <i class="mdi mdi-plus text-primary" data-bs-toggle="modal" data-bs-target="#addpayementterms" style="padding:5px; border:1px solid gray;"></i>
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                <label class="dim col-sm-8 text-primary" style="position:absolute; font-weight:bold; width:103px; text-align:right;">Credit Limit</label>
                                                    @Html.EditorFor(model => model.CustomerBillingInfo.CreditLimit, new { htmlAttributes = new { @class = "form-control", placeholder = "$0.00", id = "creditlimitu", style=" margin-left:107px; width:58%; border-left:1px solid gray; border-top:1px solid gray;" } })
                                                    @Html.ValidationMessageFor(model => model.CustomerBillingInfo.CreditLimit, "", new { @class = "text-danger db" })
                                            </div>
                                            <div class="form-group" style="padding-left:105px;">
                                                    @Html.CheckBox("CustomerBillingInfo.IsCreditHold", false, new { @id = "txtcreditholdu", })
                                                <label class="dim col-sm-8 fs-5 text-danger" for="CreditHold">
                                                    Credit Hold
                                                </label>
                                            </div>
                                            <div class="row">
                                                <div class="col-lg-12 col-md-12 col-sm-12 col-12" id="billtobillcheckbox">
                                                    <div class="form-group" style="padding-left:105px;">
                                                            @Html.CheckBox("CustomerBillingInfo.IsBillToBill", false, new { @id = "txtbilltobillu", })
                                                        <label class="dim col-sm-8 fs-5 text-danger" for=" BillToBill">
                                                            Bill To Bill
                                                        </label>
                                                    </div>
                                                </div>
                                                <div id="forbilltobilllisticon"></div>
                                            </div>

                                            <div class="form-group" style="padding-left:105px;">
                                                    @Html.CheckBox("CustomerBillingInfo.IsNoCheckAccepted", false, new { @id = "txtnocheckacceptedu", })
                                                <label class="dim col-sm-8  text-danger" for=" NoChecksAccepted" style="font-size:16px; font-weight:bold;">
                                                    No Checks Accepted
                                                </label>
                                            </div>
                                            <div class="form-group">
                                                    @Html.CheckBox("CustomerBillingInfo.IsExclude", false, new { @id = "txtexcludeu", })
                                                <label class="dim col-sm-8  text-success" for="Exclude Overdue Popup Message on new Invoice" style="font-weight:bold;">
                                                    Exclude Overdue Popup Message on new Invoice
                                                </label>
                                            </div>
                                            <div class="row">

                                                <div class="form-group " style="padding-left:107px;">
                                                    <label class="text-primary" style="position:absolute; font-weight:bold;">3rd Party Check Charge</label>
                                                        @Html.EditorFor(model => model.CustomerBillingInfo.ThirdPartyCheckCharge, new { htmlAttributes = new { @class = "form-control ", placeholder = "$0.00", id = "txtthirdpartycheckchargeu", style="width:37%; margin-left:157px; border-top:1px solid gray; border-left:1px solid gray;" } })
                                                        @Html.ValidationMessageFor(model => model.CustomerBillingInfo.ThirdPartyCheckCharge, "", new { @class = "text-danger db" })
                                                </div>
                                            </div>
                                            <div class=" col-lg-12 col-sm-12">
                                                <div class="row">
                                                    <div class="  col-lg-6 col-sm-6 ">
                                                        <div class="form-group">
                                                                @Html.CheckBox("CustomerBillingInfo.IsCashBackBalance", false, new { @id = "txtiscashbackbalanceu" })
                                                            <label class=" text-success" for=" CheckBackBalance" style="font-weight:bold">
                                                                Check Back Balance
                                                            </label>
                                                        </div>
                                                    </div>
                                                    <div class=" col-lg-6 col-sm-6">
                                                        <div class="form-group">

                                                                @Html.EditorFor(model => model.CustomerBillingInfo.CashBackBalance, new { htmlAttributes = new { @class = "form-control ", placeholder = "0.00", id = "txtcashbackbalanceu", style=" border-top:1px solid gray; border-left:1px solid gray;" } })
                                                                @Html.ValidationMessageFor(model => model.CustomerBillingInfo.CashBackBalance, "", new { @class = "text-danger db" })
                                                        </div>
                                                    </div>

                                                </div>

                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-12 col-sm-12">
                                <div class="row">
                                    <div class="col-lg-8  col px-md-5 mt-3 ">
                                        <div class="row  border border-dark ">
                                            <div class="col-lg-12 col-sm-12">
                                                <div class="row">
                                                    <div class=" col-lg-4 col-sm-4">
                                                        <div class="form-group  mt-4 fs-6">
                                                            <label class=" fs-6 text-primary" style="font-weight:bold;">Schedule Message</label>

                                                        </div>
                                                    </div>
                                                    <div class=" col-lg-4 col-sm-4">
                                                        <div class="form-group  mt-4 ">
                                                            <label class=" text-primary" style="font-weight:bold; position:absolute">From</label>
                                                                @Html.EditorFor(model => model.CustomerBillingInfo.ScheduleMessageFromDate, new { htmlAttributes = new { @class = "form-control dropdowncursor", id = "txtschedulemessagefromdateu", style=" margin-left:35px; width:91%; border-top:1px solid gray; border-left:1px solid gray;"  } })
                                                                @Html.ValidationMessageFor(model => model.CustomerBillingInfo.ScheduleMessageFromDate, "", new { @class = "text-danger db" })
                                                        </div>
                                                    </div>
                                                    <div class=" col-lg-4 col-sm-4">
                                                        <div class="form-group  mt-4 ">
                                                            <label class=" text-primary" style="font-weight:bold; position:absolute"> To </label>
                                                                @Html.EditorFor(model => model.CustomerBillingInfo.ScheduleMessageToDate, new { htmlAttributes = new { @class = "form-control dropdowncursor", id = "txtschedulemessagetodateu", style=" margin-left:19px; width:90%; border-top:1px solid gray; border-left:1px solid gray;" } })
                                                                @Html.ValidationMessageFor(model => model.CustomerBillingInfo.ScheduleMessageToDate, "", new { @class = "text-danger db" })
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-lg-12 col-sm-12">
                                                <div class="row">
                                                    <div class="form-group ">
                                                            @Html.TextAreaFor(model => model.CustomerBillingInfo.ScheduleMessage, 5, 12, new { @class = "form-control height", placeholder = "", id = "txtschedulemessageu", style=" border-top:1px solid gray; border-left:1px solid gray;" })
                                                            @Html.ValidationMessageFor(model => model.CustomerBillingInfo.ScheduleMessage, "", new { @class = "text-danger db" })
                                                    </div>
                                                </div>
                                            </div>

                                        </div>
                                    </div>
                                    <div class=" col-lg-4 col-sm-4 border border-dark mt-3">
                                        <div class="form-group mt-4">
                                                @Html.CheckBox("CustomerBillingInfo.IsPopupMessage", false, new { @id = "txtispopupmessageu", })
                                            <label class="dim col-sm-8 fs-5 text-primary" for=" Pop Up Message" style="font-weight:bold;">
                                                Pop Up Message
                                            </label>
                                        </div>
                                        <div class=" col-lg-12 col-sm-12 ">

                                            <div class="form-group  mt-4">

                                                    @Html.TextAreaFor(model => model.CustomerBillingInfo.PopupMessage, 7, 12, new { @class = "form-control height", placeholder = "", id = "txtpopupmessageu", style="border-left:1px solid gray; border-top:1px solid gray;" })
                                                    @Html.ValidationMessageFor(model => model.CustomerBillingInfo.PopupMessage, "", new { @class = "text-danger db" })

                                            </div>
                                        </div>

                                    </div>

                                </div>

                            </div>
                        </div>

                        <div class="tab-pane fade row" id="saledatau">
                            <div class="row mt-3">
                                <div class="col-lg-12 col-md-12 col-sm-12 col-12 table-responsive" id="saletable">
                                    <table class="table table-bordered table-condensed" id="saletable" style="border:0.7px solid;">
                                        <thead>
                                            <tr class="text-center grids-head-simple" style="border:0.7px solid;border-bottom:1.4px solid">
                                                <th class="w-auto">Sr#</th>
                                                <th class="w-auto">Invoice#</th>
                                                <th class="w-auto">Inv. Date</th>
                                                <th class="w-auto">Printed Date</th>
                                                <th class="w-auto">SaleMan</th>
                                                <th class="w-auto">User</th>
                                                <th class="w-auto">Total Amount</th>
                                                <th class="w-auto">Total Paid</th>
                                                <th class="w-auto">Due</th>
                                            </tr>
                                        </thead>
                                        <tbody id="appendnewrowforsaleu">
                                            <!-- hidden row -->

                                        </tbody>
                                    </table>

                                </div>
                            </div>
                        </div>
                        <div class="tab-pane fade row" id="paymentdatau">
                            <div class="row mt-3">
                                <div class="col-lg-12 col-md-12 col-sm-12 col-12 table-responsive" id="paymenttable">
                                    <table class="table table-bordered table-condensed" id="paymenttable" style="border:0.7px solid;">
                                        <thead>
                                            <tr class="text-center grids-head-simple" style="border:0.7px solid;border-bottom:1.4px solid">
                                                <th style="width:10px;">Date Paid</th>
                                                <th style="width:10px;">Time</th>
                                                <th style="width:10px;">Hold Date</th>
                                                <th style="width:10px;">SID</th>
                                                <th style="width:10px;">Type</th>
                                                <th style="width:10px;">Check#</th>
                                                <th style="width:10px;">Amount Paid</th>
                                                <th style="width:10px;">Amount Alloc</th>
                                                <th style="width:10px;">Change</th>

                                            </tr>
                                        </thead>
                                        <tbody id="appendnewrowforpaymentu">
                                            <!-- hidden row -->

                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>

                        <div class="tab-pane fade row" id="accounthistorydatau">
                            <div class=" col-lg-12 col-sm-12" style="margin-top:15px;">
                                <div class=" row ">
                                    <div class=" col-lg-6 col-sm-6 col px-md-5 ">
                                        <h4 style="color:blue;"> Customer,s Balance History</h4>
                                        <div class="row border border-dark ">
                                            <table class="table" id="accounthistoryscroll">
                                                <thead>
                                                    <tr>
                                                        <th scope="col" class="text-primary"> Credit</th>
                                                        <th scope="col" class="text-primary">Debit</th>
                                                        <th scope="col" class="text-primary">DateTime</th>

                                                    </tr>
                                                </thead>

                                                <tbody id="appendnewrowforaccounthistory">

                                            </table>

                                        </div>
                                    </div>


                                    <div class=" col-lg-6 col-sm-6">
                                        <h4 style="color:blue;"> Attachments History</h4>
                                        <div class=" row border border-dark">
                                            <div class="col-lg-12 col-sm-12">
                                                <div class="row">

                                                    <div class=" col-lg-6 col-sm-6">
                                                        <label class="text-primary">Attch-Desc</label>

                                                    </div>
                                                    <div class=" col-lg-6 col-sm-6  ">
                                                        <label class="text-primary  ">Date- Time</label>

                                                    </div>
                                                </div>
                                            </div>
                                            <br />
                                            <br />
                                            <br />
                                            <br />
                                            <br />
                                            <br />
                                            <br />
                                            <br />
                                            <br />
                                            <br />


                                        </div>


                                        <h4 style="color:blue;"> Account Statistics </h4>
                                        <div class="row border border-dark">
                                            <div class=" col-lg-12 col-sm-12">
                                                <div class="row" style="margin-top:10px;">
                                                    <div class="col-lg-6 col sm-6">
                                                        <div class="form-group ">
                                                            <label style="color:blue; position:absolute; font-weight:bold; width:85px; text-align:right"> Created </label>
                                                            <input class="form-control" id="CreatedD" style="margin-left:92px; width:65%; border-top:1px solid gray; border-left:1px solid gray;" />
                                                        </div>
                                                    </div>
                                                    <div class=" col-lg-6 col-sm-6">
                                                        <div class="form-group ">
                                                            <label style="color:blue; position:absolute; font-weight:bold; width:85px; text-align:right"> Last Used</label>
                                                            <input class="form-control" id="LastSale" style="margin-left:92px; width:65%; border-top:1px solid gray; border-left:1px solid gray;" />
                                                        </div>
                                                    </div>

                                                </div>
                                            </div>
                                            <div class=" col-lg-12 col-sm-12">

                                                <div class="row">
                                                    <div class="col-lg-6 col sm-6">
                                                        <div class="form-group ">
                                                            <label style="color:blue; position:absolute; font-weight:bold; width:85px; text-align:right"> Enabled </label>
                                                            <input class="form-control" id="Enbleu" style="margin-left:92px; width:65%; border-top:1px solid gray; border-left:1px solid gray;" />
                                                        </div>
                                                    </div>
                                                    <div class=" col-lg-6 col-sm-6">
                                                        <div class="form-group ">
                                                            <label style="color:blue; position:absolute; font-weight:bold; width:85px; text-align:right"> Last Sales</label>
                                                            <input class="form-control" id="Lastaleu" style="margin-left:92px; width:65%; border-top:1px solid gray; border-left:1px solid gray;" />
                                                        </div>
                                                    </div>


                                                </div>
                                            </div>
                                            <br />
                                            <br />
                                            <div class=" col-lg-12 col-sm-12">

                                                <div class="row">
                                                    <div class="col-lg-6 col sm-6">
                                                        <div class="form-group ">
                                                            <label style="color:blue; position:absolute; font-weight:bold; width:85px; text-align:right"> Disabled </label>
                                                            <input class="form-control" id="Disabledu" style="margin-left:92px; width:65%; border-top:1px solid gray; border-left:1px solid gray;" />
                                                        </div>
                                                    </div>
                                                    <div class=" col-lg-6 col-sm-6">
                                                        <div class="form-group ">
                                                            <label style="color:blue; position:absolute; font-weight:bold; width:85px; text-align:right"> Last Pay </label>
                                                            <input class="form-control" id="LastPayu" style="margin-left:92px; width:65%; border-top:1px solid gray; border-left:1px solid gray;" />
                                                        </div>
                                                    </div>

                                                </div>

                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                    </div>
                </div>
            </div>

        </div>
    </div>
</div>


    @*AddProvider*@
<div id="addprovider" class="modal fade" role="dialog">
    <div class="modal-dialog">


        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title mx-auto" id="ModalLabel">Add Provider </h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close" onclick="closemodal()">
                    <span aria-hidden="true">×</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="form-group">
                        <label for="groupname">Add Name </label>
                        <input class="form-control" type="text" placeholder="Name" id="providername" />
                        <label class="text-danger db" style="display:none" id="msgprovidername">Enter Provider Name</label>
                    </div>
                    <button type="button" onclick="addproviderdata()" class="btn btn-dark text-white mx-auto col-md-3 validationchkstore"><p style="color:white">Submit</p></button>
                </div>

            </div>

        </div>
    </div>
</div>
    @*CustomerType*@
<div id="addcustomertype" class="modal fade" role="dialog">
    <div class="modal-dialog">


        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title mx-auto" id="ModalLabel">Add TypeName </h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close" onclick="closemodal()">
                    <span aria-hidden="true">×</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="form-group">
                        <label for="groupname">Add TypeName </label>
                        <input class="form-control" type="text" placeholder="Customer Type " id="customertype" />
                        <label class="text-danger db" style="display:none" id="msgcustomertype">Enter Customer TypeName </label>
                    </div>
                    <button type="button" onclick="addcustomertypedata()" class="btn btn-dark text-white mx-auto col-md-3 validationchkstore"><p style="color:white">Submit</p></button>
                </div>

            </div>

        </div>
    </div>
</div>


    @*Add Customer Satet*@
<div id="addcustomerstate" class="modal fade" role="dialog">
    <div class="modal-dialog">


        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title mx-auto" id="ModalLabel">Add Customer State   </h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close" onclick="closemodal()">
                    <span aria-hidden="true">×</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="form-group">
                        <label for="groupname">StateName </label>
                        <input class="form-control" type="text" placeholder="StateName" id="StateName" />
                        <label class="text-danger db" style="display:none" id="msgStateName">Enter State Name</label>
                    </div>
                    <button type="button" onclick="addcustomerstatedata()" class="btn btn-dark text-white mx-auto col-md-3 validationchkstore"><p style="color:white">Submit</p></button>
                </div>

            </div>

        </div>
    </div>
</div>
    @*Add Driving License State*@
<div id="adddrivinglicensestate" class="modal fade" role="dialog">
    <div class="modal-dialog">


        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title mx-auto" id="ModalLabel">Add Driving License State   </h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close" onclick="closemodal()">
                    <span aria-hidden="true">×</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="form-group">
                        <label for="groupname">Name </label>
                        <input class="form-control" type="text" placeholder="Name" id="driverlicensestatename" />
                        <label class="text-danger db" style="display:none" id="msgDrivingStateName">Enter  Driving State Name</label>
                    </div>
                    <button type="button" onclick="adddriverlicensestatedata()" class="btn btn-dark text-white mx-auto col-md-3 validationchkstore"><p style="color:white">Submit</p></button>
                </div>

            </div>

        </div>
    </div>
</div>

    @*AddBarCode*@
<div id="addbarcode" class="modal fade" role="dialog">
    <div class="modal-dialog">


        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title mx-auto" id="ModalLabel">Add Barcode </h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close" onclick="closemodal()">
                    <span aria-hidden="true">×</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="form-group">
                        <label for="groupname">Add Barcode </label>
                        <input class="form-control" type="text" placeholder="Barcode" id="barcodenumber" />
                        <label class="text-danger db" style="display:none" id="msggroupname">Enter Barcode </label>
                    </div>
                    <button type="button" onclick="" class="btn btn-dark text-white mx-auto col-md-3 validationchkstore"><p style="color:white">Submit</p></button>
                </div>

            </div>

        </div>
    </div>
</div>
<div id="addshiptoreference" class="modal fade" role="dialog">
    <div class="modal-dialog">


        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title mx-auto" id="ModalLabel">Add Ship TO Reference  </h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close" onclick="closemodal()">
                    <span aria-hidden="true">×</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="form-group">
                        <label for="shiptoreferencename">Name </label>
                        <input class="form-control" type="text" placeholder="Name" id="shiptoreferencename" />
                        <label class="text-danger db" style="display:none" id="msgshiptoreferencename">Enter  Ship To Reference Name</label>
                    </div>
                    <button type="button" onclick="addshiptoreference()" class="btn btn-dark text-white mx-auto col-md-3 validationchkstore"><p style="color:white">Submit</p></button>
                </div>

            </div>

        </div>
    </div>
</div>
    @*AddSalesman*@
<div id="addsalesman" class="modal fade" role="dialog">
    <div class="modal-dialog">


        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title mx-auto" id="ModalLabel">Add Sales Man </h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close" onclick="closemodal()">
                    <span aria-hidden="true">×</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="form-group">
                        <label for="salesmanname"> Name </label>
                        <input class="form-control" type="text" placeholder="SalesMan Name" id="salesmanname" />
                        <label class="text-danger db" style="display:none" id="msgsalesmanname">Enter Sales Man Name</label>
                    </div>
                    <div class="form-group">
                        <label for="salesmanaddress"> Address </label>
                        <input class="form-control" type="text" placeholder="SalesMan Address" id="salesmanaddress" />
                        <label class="text-danger db" style="display:none" id="msgsalesmanaddress">Enter Sales Man Address </label>
                    </div>
                    <div class="form-group">
                        <label for="salesmancity"> City </label>
                        <input class="form-control" type="text" placeholder="SalesMan City" id="salesmancity" />
                        <label class="text-danger db" style="display:none" id="msgsalesmanCity">Enter Sales Man City</label>
                    </div>
                    <div class="form-group">
                        <label for="salesmanstate">State </label>
                        <input class="form-control" type="text" placeholder="SalesManState" id="salesmanstate" />
                        <label class="text-danger db" style="display:none" id="msgsalesmanState">Enter Sales Man State </label>
                    </div>
                    <div class="form-group">
                        <label for="salesmanPhone">Phone </label>
                        <input class="form-control" type="number" placeholder="SalesMan Phone" id="salesmanPhone" />
                        <label class="text-danger db" style="display:none" id="msgsalesmanPhone">Enter Sales Man Phone</label>
                    </div>
                    <div class="form-group">
                        <label for="salesmanmobile"> Mobile </label>
                        <input class="form-control" type="text" placeholder="SalesMan Mobile" id="salesmanmobile" />
                        <label class="text-danger db" style="display:none" id="msgsalesmanMobile">Enter Sales Man Mobile </label>
                    </div>
                    <div class="form-group">
                        <label for="groupname"> Email </label>
                        <input class="form-control" type="text" placeholder="SalesMan Email" id="salesmanemail" />
                        <label class="text-danger db" style="display:none" id="msgsalesmanEmail">Enter Sales Man Email </label>
                    </div>
                    <div class="form-group">
                        <label for="salesmancountry"> Country </label>
                        <input class="form-control" type="text" placeholder="SalesMan Country" id="salesmancountry" />
                        <label class="text-danger db" style="display:none" id="msgsalesmanCountry">Enter Sales Man Country </label>
                    </div>

                    <button type="button" onclick="addsalesmandata()" class="btn btn-dark text-white mx-auto col-md-3 validationchkstore"><p style="color:white">Submit</p></button>
                </div>

            </div>

        </div>
    </div>
</div>
    @*AddShippedVia*@
<div id="addshippedvia" class="modal fade" role="dialog">
    <div class="modal-dialog">


        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title mx-auto" id="ModalLabel">Add Shipped Via </h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close" onclick="closemodal()">
                    <span aria-hidden="true">×</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="form-group">
                        <label for="ShippedType">Type </label>
                        <input class="form-control" type="text" placeholder="Shipped Type " id="ShippedType" />
                        <label class="text-danger db" style="display:none" id="msgshippedvia">Enter Shipped Type </label>
                    </div>
                    <div class="form-group">
                        <label for="Shippeddate">CreateDate </label>
                        <input class="form-control" type="date" placeholder="Shipped Date " id="Shippeddate" />
                        <label class="text-danger db" style="display:none" id="msgshippedvia">Enter Shipped CreateDate </label>
                    </div>
                    <div class="form-group">
                        <label for="ShipNumber">ShipNumber </label>
                        <input class="form-control" type="text" placeholder="ShipNumber " id="ShipNumber" />
                        <label class="text-danger db" style="display:none" id="msgshippedvia">Enter ShipNumber </label>
                    </div>
                    <div class="form-group">
                        <label for="Reference">Reference </label>
                        <input class="form-control" type="text" placeholder="Reference " id="Reference" />
                        <label class="text-danger db" style="display:none" id="msgshippedvia">Enter ShipReference </label>
                    </div>
                    <button type="button" onclick="addshipmentpurchasedata()" class="btn btn-dark text-white mx-auto col-md-3 validationchkstore"><p style="color:white">Submit</p></button>
                </div>

            </div>

        </div>
    </div>
</div>
    @*AddRouteName*@
<div id="addroutename" class="modal fade" role="dialog">
    <div class="modal-dialog">


        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title mx-auto" id="ModalLabel">Add Route Name </h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close" onclick="closemodal()">
                    <span aria-hidden="true">×</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="form-group">
                        <label for="routename">RouteName </label>
                        <input class="form-control" type="text" placeholder="Route Name" id="routename" />
                        <label class="text-danger db" style="display:none" id="msgroutename">Enter Route Name</label>
                    </div>
                    <div class="form-group">
                        <label for="routeCreateDate">CreateDate </label>
                        <input class="form-control" type="date" placeholder="CreateDate" id="routeCreateDate" />
                        <label class="text-danger db" style="display:none" id="msgroutecreatedate">Enter Route CreateDate</label>
                    </div>
                    <div class="form-group">
                        <label for="InitialLocation">InitialLocation</label>
                        <input class="form-control" type="text" placeholder="InitialLocation" id="InitialLocation" />
                        <label class="text-danger db" style="display:none" id="msgrouteinitilalocation">Enter InitialLocation</label>
                    </div>
                    <div class="form-group">
                        <label for="DesignationLocation">DesignationLocation </label>
                        <input class="form-control" type="text" placeholder="DesignationLocation" id="DesignationLocation" />
                        <label class="text-danger db" style="display:none" id="msgroutedesignationlocation">Enter Route DesignationLocation</label>
                    </div>
                    <button type="button" onclick="addroutedata()" class="btn btn-dark text-white mx-auto col-md-3 validationchkstore"><p style="color:white">Submit</p></button>
                </div>

            </div>

        </div>
    </div>
</div>

    @*AddDriverName*@
<div id="adddrivername" class="modal fade" role="dialog">
    <div class="modal-dialog">


        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title mx-auto" id="ModalLabel">Add Driver Name </h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close" onclick="closemodal()">
                    <span aria-hidden="true">×</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="form-group">
                        <label for="drivername">Name </label>
                        <input class="form-control" type="text" placeholder="Driver Name" id="drivername" />
                        <label class="text-danger db" style="display:none" id="msggroupname">Enter Driver Name</label>
                    </div>
                    <div class="form-group">
                        <label for="driverEmail">Email  </label>
                        <input class="form-control" type="text" placeholder="Driver Email " id="driverEmail " />
                        <label class="text-danger db" style="display:none" id="msgEmail ">Enter Driver Email </label>
                    </div>
                    <div class="form-group">
                        <label for="driverMobile">Mobile </label>
                        <input class="form-control" type="number" placeholder="Driver Mobile" id="driverMobile" />
                        <label class="text-danger db" style="display:none" id="msgMobile">Enter Driver Mobile</label>
                    </div>
                    <div class="form-group">
                        <label for="driverPhone">Phone </label>
                        <input class="form-control" type="number" placeholder="Driver Phone" id="driverPhone" />
                        <label class="text-danger db" style="display:none" id="msgPhone">Enter Driver Phone</label>
                    </div>
                    <div class="form-group">
                        <label for="driverCity">City  </label>
                        <input class="form-control" type="text" placeholder="Driver City " id="driverCity " />
                        <label class="text-danger db" style="display:none" id="msgcityname">Enter Driver City </label>
                    </div>
                    <div class="form-group">
                        <label for="driverCountry">Country </label>
                        <input class="form-control" type="text" placeholder="Driver Country" id="driverCountry" />
                        <label class="text-danger db" style="display:none" id="msgcountryname">Enter Driver Country</label>
                    </div>
                    <div class="form-group">
                        <label for="driverDrivingLicenseNumber">DrivingLicenseNumber </label>
                        <input class="form-control" type="text" placeholder="Driver DrivingLicenseNumber" id="driverDrivingLicenseNumber" />
                        <label class="text-danger db" style="display:none" id="msggDrivingLicenseNumber">Enter Driver DrivingLicenseNumber</label>

                    </div>
                    <div class="form-group">
                        <label for="driverRegisteredOn">RegisteredOn </label>
                        <input class="form-control" type="text" placeholder="Driver RegisteredOn" id="driverRegisteredOn" />
                        <label class="text-danger db" style="display:none" id="msggroupname">Enter Driver RegisteredOn</label>
                    </div>
                    <div class="form-group">
                        <label for="driverVehicleNumber">VehicleNumber </label>
                        <input class="form-control" type="text" placeholder="Driver VehicleNumber" id="driverVehicleNumber" />
                        <label class="text-danger db" style="display:none" id="msgVehicleNumber">Enter Driver VehicleNumber</label>
                    </div>
                    <div class="form-group">
                        <label for="driverAddress">Address</label>
                        <input class="form-control" type="text" placeholder="Driver Address" id="driverAddress" />
                        <label class="text-danger db" style="display:none" id="msgDriverAddresse">Enter Driver Address</label>
                    </div>
                    <div class="form-group">
                        <label for="driverAddress1">Address1 </label>
                        <input class="form-control" type="text" placeholder="Driver Address1 " id="driverAddress1 " />
                        <label class="text-danger db" style="display:none" id="msgDriverAddresse">Enter DriverAddress1 </label>
                    </div>
                    <button type="button" onclick="adddriverdata()" class="btn btn-dark text-white mx-auto col-md-3 validationchkstore"><p style="color:white">Submit</p></button>
                </div>

            </div>

        </div>
    </div>
</div>
    @*AddGroup*@
<div id="addgroup" class="modal fade" role="dialog" tabindex="-1">
    <div class="modal-dialog">


        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title mx-auto" id="ModalLabel">Add Group </h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close" onclick="closemodal()">
                    <span aria-hidden="true">×</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="form-group">
                        <label for="groupname">Add Name</label>
                        <input class="form-control" type="text" placeholder="Name" id="groupname" />
                        <label class="text-danger db" style="display:none" id="msggroupname">Enter Group Name</label>
                    </div>
                    <button type="button" onclick="addgroupdata()" class="btn btn-dark text-white mx-auto col-md-3 validationchkstore"><p style="color:white">Submit</p></button>
                </div>

            </div>

        </div>
    </div>
</div>
    @*AddSubGroup*@
<div id="addsubgroup" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title mx-auto" id="ModalLabel">Add Sub Group </h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close" onclick="closemodal()">
                    <span aria-hidden="true">×</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="form-group">
                        <label for="groupname">  SubGroupName </label>
                        <input class="form-control" type="text" placeholder=" Sub Group Name" id="subgroupname" />
                        <label class="text-danger db" style="display:none" id="msgsubgroupname">Enter Sub Group Name</label>
                    </div>
                    <div class="form-group">
                        <div class="row">
                            <div class="col-lg-10 col-sm-10">
                                <label for="parentgroupname">  ParentGroupName </label>
                                <select class="form-control dropdowncursor" id="parentgroupname">
                                    <option value="Select">Select</option>
                                </select>
                                <label class="text-danger db" style="display:none" id="msgparentGroupNamename">EnterParentGroupName</label>
                            </div>
                            <div class="col-lg-2 col-sm-2 py-4">
                                <i class="mdi mdi-plus text-primary" onclick="subgroupmodalclose()"></i>
                            </div>
                        </div>

                    </div>
                    <button type="button" onclick="addsubgroupdata()" class="btn btn-dark text-white mx-auto col-md-3 validationchkstore"><p style="color:white">Submit</p></button>
                </div>
            </div>
        </div>
    </div>
</div>
    @*AddZone*@
<div id="addzone" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title mx-auto" id="ModalLabel">Add zone </h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close" onclick="closemodal()">
                    <span aria-hidden="true">×</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="form-group">
                        <label for="zonename">Name </label>
                        <input class="form-control" type="text" placeholder="Zone Name" id="zonename" />
                        <label class="text-danger db" style="display:none" id="msgzonename">Enter Zone Name</label>
                    </div>
                    <button type="button" onclick="addzonedata()" class="btn btn-dark text-white mx-auto col-md-3 validationchkstore"><p style="color:white">Submit</p></button>
                </div>

            </div>

        </div>
    </div>
</div>
    @*AddBusinessType*@
<div id="addbusinesstype" class="modal fade" role="dialog">
    <div class="modal-dialog">


        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title mx-auto" id="ModalLabel">Add Business Type  </h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close" onclick="closemodal()">
                    <span aria-hidden="true">×</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="form-group">
                        <label for="groupname">TypeName </label>
                        <input class="form-control" type="text" placeholder="BusinessType" id="businesstype" />
                        <label class="text-danger db" style="display:none" id="msgbusinesstype">Enter Business Type Name</label>
                    </div>
                    <button type="button" onclick="addbusinesstypedata()" class="btn btn-dark text-white mx-auto col-md-3 validationchkstore"><p style="color:white">Submit</p></button>
                </div>

            </div>

        </div>
    </div>
</div>
<div id="addpayementterms" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title mx-auto" id="ModalLabel">Add Payement Terms  </h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close" onclick="closemodal()">
                    <span aria-hidden="true">×</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="form-group">
                        <label for="pyementtermsname"> Name </label>
                        <input class="form-control" type="text" placeholder="Name" id="pyementtermsname" />
                        <label class="text-danger db" style="display:none" id="msgpayementtermsname">Enter Payement Terms </label>
                    </div>
                    <button type="button" onclick="addpaymenttermsdata()" class="btn btn-dark text-white mx-auto col-md-3 validationchkstore"><p style="color:white">Submit</p></button>
                </div>

            </div>

        </div>
    </div>
</div>
<div id="addpricing" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title mx-auto" id="ModalLabel">Add Pricing </h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close" onclick="closemodal()">
                    <span aria-hidden="true">×</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="form-group">
                        <label for="pricingname"> Name </label>
                        <input class="form-control" type="text" placeholder="Name" id="pricingname" />
                        <label class="text-danger db" style="display:none" id="msgpricingname">Enter Pricing</label>
                    </div>
                    <button type="button" onclick="addpricingdata()" class="btn btn-dark text-white mx-auto col-md-3 validationchkstore"><p style="color:white">Submit</p></button>
                </div>

            </div>

        </div>
    </div>
</div>
    @*Zip Code Add*@
<div id="addzipcode" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content" style="width:135%">
            <div class="modal-header">
                <h5 class="modal-title mx-auto" id="ModalLabel">Edit Add ZipCode</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close" onclick="closemodal()">
                    <span aria-hidden="true">×</span>
                </button>
            </div>
            <div class="modal-body" style="padding:0px;">
                <div class="row" style="margin:0px;">
                    <div class="w-100 h-100 w-100 d-inline-block actionbox" id="listbtns" style="border-radius:0px; background:rgb(198, 201, 206); margin-bottom: 0px; font-size:17px;">
                        <div id="zipcodeonlisticon" class="row">

                            <div class="row my-3" style="margin-bottom:0px !important;">
                                <div style=" border: 1px solid unset; margin: 3px; box-shadow: 2px 2px #888888; background-color: rgb(240, 240, 240); width:23%; ">
                                    <i class="fa fa-step-backward" style=" background:rgb(240, 240, 240); padding:5px; padding-right:15px; border-right:1px solid gray;"></i>
                                    <i class="fa fa-caret-left" style=" background:rgb(240, 240, 240); padding:5px; padding-right:15px; border-right:1px solid gray;"></i>
                                    <i class="fa fa-caret-right" style=" background:rgb(240, 240, 240); padding:5px; padding-left:15px; border-right:1px solid gray;"></i>
                                    <i class="fa fa-step-forward" style=" background:rgb(240, 240, 240); padding:5px;"></i>
                                </div>
                                <i class="mdi mdi-plus" style="padding:5px; background:rgb(239, 240, 241); width:auto; margin-left:10px; color:yellow;" onclick="Addnewrowforzipcodetable()"></i>
                                <div class="row my-3" style="justify-content:end;margin-bottom:0px !important;">


                                    <div class="w-auto" style="margin-top:-40px;">
                                        <label style="width:95px; text-align:center;">Select</label>
                                        <select id="stateselect" style="background:rgb(198, 201, 206);  border:1px solid gray;">
                                            <option value="Select">All States</option>
                                        </select>
                                        <img src="../images/printer.png" style="width:37px; margin-left:13px;" title="Print" />
                                    </div>
                                        @*<img src="~/images/printer.png" style="width:50px" title="Print" />*@
                                </div>

                            </div>
                            <div class="w-auto" style="margin-left:282px;margin-top:-10px; ">
                                <div class="d-flex">
                                    <label style="width:95px">Free Search</label>
                                    <input type="text" id="modalzipcodesearch" style="background:rgb(198, 201, 206); border:1px solid gray; width:50%;" />
                                </div>
                            </div>
                        </div>
                        <div id="onaddiconclick" class="d-flex" style="padding-top:15px;"></div>
                        <div id="onanothericonclick" class="d-flex"></div>
                        <br>
                        <input type="hidden" id="fortablerowid" />
                    </div>
                    <div class="col-lg-12 col-md-12 col-sm-12 col-12 table-responsive" style="padding:0px;">
                        <table class="table table-bordered table-condensed overflow-auto" style="border:0.7px solid; margin-bottom:15px;">
                            <thead style="text-align:center;">
                                <tr style="background:rgb(198, 201, 206);  ">
                                    <th class="w-auto" style="color:blue;">Sr#</th>
                                    <th class="w-auto" style="color:blue;">ZipCode</th>
                                    <th class="w-auto" style="color:blue;">City</th>
                                    <th class="w-auto" style="color:blue;">ST</th>
                                    <th class="w-auto" style="color:blue;">State</th>
                                </tr>
                            </thead>
                            <tbody id="modalzipcodegetlisttable">
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
    @*Sales Modal*@
<div id="addsalesinvoice" class="modal fade" role="dialog">
    <div class="modal-dialog modal-lg overflow-auto">
        <div class="modal-content">
            <div class="modal-header" style="background:rgb(234, 232, 235);">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close" onclick="closeaddsalesinvoice()">
                    <span aria-hidden="true">×</span>
                </button>
            </div>
            <div class="modal-body" style="background:rgb(234, 232, 235);">
                <div class="card" style="background:rgb(234, 232, 235);">
                    <div class="card-header">
                        <label>POSSale Screen</label>
                        <div id="LoadPage " class="alertstyle">
                        <a id="Printbtn" onclick="PrintMe()"> <img src="~/images/printer.png" style="width: 50px;" title="Print" /></a>
                        </div>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            <div class="col-lg-12 col-md-12 col-sm-12 col-sm-12">
                                <div class="row">
                                    <div class="col-lg-8 col-md-8 col-sm-8 col-8">
                                        <div class="row">
                                            <div class="col-lg-12 col-md-12 col-sm-12 col-sm-12">
                                                <div class="row">
                                                    <div class="form-group">

                                                        <div class="row">
                                                            <div class="col-lg-6 col-md-6 col-sm-6 col-6">
                                                                <div class="form-group" style="margin-bottom:1rem;">
                                                                    <label class="dim">Sold To</label>
                                                                    <input class="form-control" id="modaltxtcustomername" disabled />
                                                                </div>
                                                            </div>
                                                            <div class="col-lg-6 col-md-6 col-sm-6 col-6">
                                                                <div class="form-group" style="margin-bottom:1rem;">
                                                                    <label class="dim"> Customer Code</label>
                                                                    <input class="form-control" id="modaltxtcustomercode" disabled />
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-lg-4 col-md-4 col-sm-4 col-4">
                                                <div class="form-group">
                                                    <label class="dim col-sm-12" for="modaltxtisgetsalediscount">
                                                        Get Sales/Discount
                                                    </label>
                                                    <input type="checkbox" id="modaltxtisgetsalediscount" disabled />
                                                </div>
                                            </div>
                                            <div class="col-lg-3 col-md-3 col-sm-3 col-3">
                                                <div class="form-group">
                                                    <input type="text" class="form-control" id="discount" disabled />
                                                </div>
                                            </div>
                                            <div class="col-lg-5 col-md-5 col-sm-5 col-5">
                                                <div class="form-group">
                                                    <div class="row">
                                                        <div class="col-lg-6 col-sm-6 col-6 col-md-6">
                                                            <input type="text" class="form-control" id="discount" disabled />
                                                        </div>
                                                        <div class="col-lg-6 col-md-6 col-sm-6 col-6">
                                                            <input type="text" class="form-control" id="discount" disabled />
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row mb-2">
                                            <div class="col-lg-12 col-md-12 col-sm-12 col-12 table-responsive">
                                                <table class="table  table-bordered table-condensed" style="border:0.7px solid;">
                                                    <thead>
                                                        <tr style="background-color:lightgreen">
                                                            <th class="w-auto">Sales Man</th>
                                                            <th class="w-auto">Paymnt Terms</th>
                                                            <th class="w-auto">Shipped Via</th>
                                                            <th class="w-auto">Driver</th>
                                                            <th class="w-auto">Weight</th>
                                                            <th class="w-auto">Count</th>
                                                        </tr>
                                                    </thead>
                                                    <tbody id="modaltxtsalemantable" style="background:white;">
                                                    </tbody>
                                                </table>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="col-lg-4 col-md-4 col-sm-4 col-4">
                                        <div class="row">
                                            <div class="col-lg-12 col-sm-12 col-md-12 col-12">
                                                <label class="dim" style="font-size:0.812rem; line-height:1.4rem; vertical-align:top; margin-bottom:0.5rem;">Invoice No.</label>
                                                <input class="form-control border-style" type="text" id="modaltxtinvoicenumberid" disabled>
                                            </div>
                                            <div class="col-lg-12 col-md-12 col-sm-12 col-12">
                                                <div class="form-group" style="margin-bottom:0px;">
                                                    <label>Prev.bal</label>
                                                    <input class="form-control border" type="text" id="modaltxtpreviousbalanceid" disabled>
                                                </div>
                                            </div>
                                            <div class="col-lg-12 col-md-12 col-sm-12 col-12">
                                                <div class="form-group" style="margin-bottom:0px;">
                                                    <label>SubTotal</label>
                                                    <input class="form-control border" type="text" id="modaltxtsubtotalid" disabled>
                                                </div>
                                            </div>
                                            <div class="col-lg-12 col-md-12 col-sm-12 col-12">
                                                <div class="form-group" style="margin-bottom:0px;">
                                                    <label>Other/Charges</label>
                                                    <div class="row">
                                                        <div class="col-lg-6 col-md-6 col-sm-6 col-6">
                                                            <input class="form-control border" type="text" id="modaltxtotherid" disabled>
                                                        </div>
                                                        <div class="col-lg-6 col-md-6 col-sm-6 col-6">
                                                            <input class="form-control border" type="text" id="modaltxtdiscountid" disabled>
                                                        </div>
                                                    </div>

                                                </div>
                                            </div>
                                            <div class="col-lg-12 col-md-12 col-sm-12 col-12">
                                                <div class="form-group" style="margin-bottom:0px;">
                                                    <label>Tax/Freight</label>
                                                    <div class="row">
                                                        <div class="col-lg-6 col-md-6 col-sm-6 col-6">
                                                            <input class="form-control border" type="text" id="modaltxttaxid" disabled>
                                                        </div>
                                                        <div class="col-lg-6 col-md-6 col-sm-6 col-6">
                                                            <input class="form-control border" type="text" id="modaltxtfreightid" disabled>
                                                        </div>
                                                    </div>

                                                </div>
                                            </div>
                                            <div class="col-lg-12 col-md-12 col-sm-12 col-12">
                                                <div class="form-group" style="margin-bottom:0px;">
                                                    <label>Inv.Total</label>
                                                    <input class="form-control border" type="text" id="modaltxtinvtotalid" disabled>
                                                </div>
                                            </div>
                                            <div class="col-lg-12 col-md-12 col-sm-12 col-12">
                                                <div class="form-group" style="margin-bottom:0px;">
                                                    <label>AmountDue</label>
                                                    <input class="form-control border" type="text" id="modaltxtamountdueid" disabled>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="row mt-3">
                            <div class="col-lg-12 col-md-12 col-sm-12 col-12 table-responsive">
                                <table class="table table-bordered table-condensed" id="saletable" style="border:0.7px solid; background:white;">
                                    <thead>
                                        <tr style="border:0.7px solid;border-bottom:1.4px solid">
                                            <th class="w-auto">Sr</th>
                                            <th class="w-auto">Item#</th>
                                            <th>Description</th>
                                            <th>Quantity</th>
                                            <th>Amount</th>
                                            <th>InDiscount</th>
                                            <th>OutDiscount</th>
                                            <th>InUnits</th>
                                            <th>OutUnits</th>
                                            <th>Price</th>
                                            <th>Total</th>
                                        </tr>
                                    </thead>
                                    <tbody id="modaltxtsaleitemdetail">
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>



                </div>
            </div>
        </div>
    </div>
</div>
<div id="addbilltobillcustomer" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title mx-auto" id="ModalLabel">Bill To Bill Customers </h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close" onclick="closemodal()">
                    <span aria-hidden="true">×</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-lg-12 col-md-12 col-sm-12 col-12 table-responsive">
                        <table class="table table-bordered table-condensed" id="billtobillcheckboxlisttable" style="border:0.7px solid;">
                            <thead>
                                <tr style="border:0.7px solid;border-bottom:1.4px solid">
                                    <th class="w-25 text-center text-black">Customer</th>
                                    <th class="w-auto text-center text-primary mt-5">
                                        FilterBy
                                        <select>
                                            <option value="Select">ALL</option>
                                        </select>
                                    </th>
                                    <th class="w-25 text-center text-black">Bill To Bill </th>

                                </tr>
                            </thead>
                            <tbody id="appendbilltobillcheckboxlist">
                                <!-- hidden row -->
                            </tbody>
                            <tfoot>
                                <tr>
                                    <td style="border:none">
                                        <div class="d-flex">
                                            <label class="mt-2">Record:</label>
                                            <input type="number" class="form-control" id="forselectrowindex" min="0" oninput="validity.valid||(value='');" />
                                        </div>
                                    </td>
                                </tr>
                            </tfoot>
                        </table>
                    </div>
                </div>

            </div>

        </div>
    </div>
</div>


    @*Attachments*@
<div id="attach" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title mx-auto" id="ModalLabel">Attachments</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close" onclick="closeattachmodal()">
                    <span aria-hidden="true">×</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <label id="documentuploadresponse" class="text-danger" style="text-align:center"></label>
                    <div class="form-group">
                        <label>Document Type</label>
                        <div class="row">
                            <div class="col-lg-10">
                                    @Html.DropDownList("DocumentType", (IEnumerable<SelectListItem>)ViewBag.SupDocType, "--Choose Doc Type--", new { @class = "form-control", id = "SupDocType" })
                                <label class="text-danger db" style="display:none" id="msgdoctype">Enter Document Type</label>

                            </div>
                            <div class="col-lg-1">
                                <i class="mdi mdi-plus text-primary" data-bs-toggle="modal" data-bs-target="#DocumentTypeModal"></i>

                            </div>


                        </div>
                        <div class="row">
                            <div class="col-lg-10">
                                <label>Document  Name</label>
                                <input type="text" name="name" class="form-control" placeholder="Enter Document Name" id="DocumentName" />
                                <br />
                                <input type="file" name="file" id="Imagefile" />

                            </div>
                        </div>

                        <br />
                        <label class="text-danger db" style="display:none" id="msgstore">Select Attachments</label>
                        <br />
                    </div>
                    <button type="submit" class="btn btn-dark text-white mx-auto col-md-3" id="submittAttachments"><p style="color:white">Submit</p></button>
                </div>

            </div>

        </div>
    </div>
</div>

    @*DocumentTypeModal*@
<div id="DocumentTypeModal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title mx-auto" id="ModalLabel">Document Types </h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close" onclick="closemodaldocument()">
                    <span aria-hidden="true">×</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="form-group">

                        <div class="row">
                            <div class="col-lg-10">
                                <label>Document Type  Name</label>
                                <input type="text" name="name" class="form-control" placeholder="Enter Document Type Name" id="DocumentType" />

                            </div>
                        </div>
                        <label class="text-danger db" style="display:none" id="msgDocumentType">Enter Document Type Name</label>
                    </div>
                    <button type="button" class="btn btn-dark text-white mx-auto col-md-3" id="DocumentTypeSubmit"><p style="color:white">Submit</p></button>
                </div>

            </div>

        </div>
    </div>
</div>

    @*Notes Modal*@
<div id="NotesModal" class="modal fade" z-index="-1" role="dialog">
    <div class="modal-dialog" style="min-width: 43%;">
        <div class="modal-content" style="background-color:#e1e1e1" id="VDMC">
            <div class="modal-header" style="padding:0.5rem!important;">
                <h5 class="modal-title" id="ModalLabel">Customer Notes</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close" onclick="closeNotesModal()">
                    <span aria-hidden="true">×</span>
                </button>
            </div>
            <div class="modal-body" style="color: #0000AB; padding-top: 20px;padding-bottom:10px; background:rgb(152, 204, 254);">
                <div class="row">
                    <div class="col-lg-9">
                        <div class="row ">
                            <div class="col-lg-2" style="margin-right: -10px;">
                                    @*<label style="width: 62px;color: #810101;font-weight: bolder;">Description</label>*@
                                <span id="CustomerCodeNa" style="font-weight:bold;"></span>
                            </div>
                            <div class="col-lg-8 " style="margin-left: 10px;">
                                <input type="text" class="form-control" autocomplete="off" style="min-width:100%" id="CustomerNameNote" disabled>
                            </div>
                            <div class="col-lg-2" style="padding-top:3px ">
                                <i class="mdi mdi-plus" style="padding:5px; background:rgb(239, 240, 241) ;margin-left:-13px; color:blue;" id="PlusN"></i>
                            </div>
                        </div>
                    </div>
                    <div class="col-lg-3" style="margin-top:-2.7%" >
                        <label style="width: 62px;color: blue; font-size:13px">Note'sDate</label>
                        <input style="width:100%" id="NoteAddDate" disabled />
                    </div>
                </div>
                <div class="row" style="margin-top:10px;">
                    <div class="col-lg-12">
                        <div style="background:#fe97cc; height:350px;">
                            <div class="addnotediv">
                                <div class="row">
                                    <div class="col-lg-10">
                                        <textarea class="form-control" style="height:315px; display:none;" id="NoteArea"></textarea>

                                    </div>
                                    <div class="col-lg-2">
                                        <img src="../images/attachNote.jpg" id="AttachImg" style="width:73px; height:70px; margin-left:-12px; margin-top:30px; display:none;" onclick="ShowNotesAttachment()" />
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row" style="margin-top:10px;">
                    <div class="col-lg-10">
                        <button class="btn" id="UploadNoteBtn" style="color:blue; background:rgb(225, 225, 225); font-weight:bold; border-bottom:1px solid gray; border-right:1px solid gray; border-radius:0px;">Add</button>
                        <button class="btn" id="UpdateNoteBtn" style="color:blue; background:rgb(225, 225, 225); font-weight:bold; border-bottom:1px solid gray; border-right:1px solid gray; border-radius:0px;">Update</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

    @*Notes Attachment Modal*@
<div id="NotesAttachmentModal" class="modal fade" z-index="-1" role="dialog" style="margin-left:20px;">
    <div class="modal-dialog" style="min-width: 43%;">
        <div class="modal-content" style="background-color:#e1e1e1; width:700px" id="VDMC">
            <div class="modal-header" style="padding:0.5rem!important; background:white;">
                <h5 class="modal-title" id="ModalLabel">Attachments Dialog</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close" onclick="CloseNotesAttachment()">
                    <span aria-hidden="true">×</span>
                </button>
            </div>
            <div class="modal-body" style="padding-top: 20px;padding-bottom:10px;">
                <div class="row">
                   @* <div class="col-lg-2 col-md-4 col-sm-6">
                        <label class="text-primary">Type</label>
                        <select style="width:100%" id="typeSelect">
                            <option value="option1">Notes</option>
                            <option value="option2">2</option>
                            <option value="option3">3</option>
                        </select>
                    </div>
                    <div class="col-lg-2 col-md-4 col-sm-6">
                        <label class="text-primary">Id</label>
                        <select style="width:100%" id="idSelect">
                            <option value="option1">1</option>
                            <option value="option2">2</option>
                            <option value="option3">3</option>
                        </select>
                    </div>*@
                    <div class="col-lg-4 col-md-12" >
                        <label class="text-primary">Search</label>
                       
                            <input type="text" id="searchnote">
                           @* <div class="input-group-append">
                                <button class="btn" id="viewnotebtn" style="color:blue; font-weight:bold; border-bottom:1px solid gray; border-right:1px solid gray; border-radius:0px; margin-right:0px;">View</button>
                                <button class="btn" id="delnotebtn" style="color:blue; font-weight:bold; border-bottom:1px solid gray; border-right:1px solid gray; border-radius:0px; margin-right:0px;">Delete</button>
                            </div>*@
                       
                    </div>
                    <div class="col-lg-2 col-md-12">
                        <button class="btn" id="delnotebtn" style="color:blue; font-weight:bold; border-bottom:1px solid gray; border-right:1px solid gray; border-radius:0px; margin-right:0px;margin-top:15px ">Delete</button>
                
                               
                           
                          </div>
                           <div class="col-lg-2 col-md-4 col-sm-6">
                        <button class="btn" id="viewnotebtn" style="color:blue; font-weight:bold; border-bottom:1px solid gray; border-right:1px solid gray; border-radius:0px; margin-right:0px;margin-top:15px">View</button>
                    </div>
                      </div>
                 
                <div class="row" style=" background:white; height:300px;">
                    <div class="table-responsive-lg">
                        <table class="table table-bordered w-100 overflow-auto" id="attachtable">
                            <thead>
                                <tr>
                                    <th scope="col" class="text-primary" style="width:0px;">AttachmentDesc</th>
                                    <th scope="col" class="text-primary" style="width:0px;">Date Time</th>
                                    <th scope="col" class="text-primary" style="width:0px;">Station</th>
                                    <th scope="col" class="text-primary" style="width:0px;">UserName</th>
                                </tr>
                            </thead>
                            <tbody id="NotesAttachmentBody"> </tbody>
                        </table>
                    </div>
                </div>
                <div class="row">
                    <div class="col-lg-12">
                        <input type="file" style="width:42%" id="NoteFile">
                        <labeL class="text-primary">Description</labeL>
                        <input type="text" style="width:28%" id="AttachmentName">
                        <button class="btn" style="color:blue; font-weight:bold; border-bottom:1px solid gray; border-right:1px solid gray; border-radius:0px;" id="SubmitNoteAttachment">Add File</button>
`
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

    @*Notes Modal Update*@
<div id="NotesModalu" class="modal fade" z-index="-1" role="dialog">
    <div class="modal-dialog" style="min-width: 43%;">
        <div class="modal-content" style="background-color:#e1e1e1" id="VDMC">
            <div class="modal-header" style="padding:0.5rem!important;">
                <h5 class="modal-title" id="ModalLabel">Customer Notes</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close" onclick="closeNotesModalu()">
                    <span aria-hidden="true">×</span>
                </button>
            </div>
            <div class="modal-body" style="color: #0000AB; padding-top: 20px;padding-bottom:10px; background:rgb(152, 204, 254);">
                <div class="row">
                    <div class="col-lg-9">
                        <div class="row ">
                            <div class="col-lg-2" style="margin-right: -10px;">
                                    @*<label style="width: 62px;color: #810101;font-weight: bolder;">Description</label>*@
                                <span id="CustomerCodeNau" style="font-weight:bold;"></span>
                            </div>
                            <div class="col-lg-8 " style="margin-left: 10px;">
                                <input type="text" autocomplete="off" style="min-width:100%" id="CustomerNameNoteu">
                            </div>
                            <div class="col-lg-2">
                                <i class="mdi mdi-plus" style="padding:5px; background:rgb(239, 240, 241); margin-left:-13px; color:yellow;" id="PlusNu"></i>
                            </div>
                        </div>
                    </div>
                    <div class="col-lg-3">
                        <label style="width: 62px;color: blue;">Note'sDate</label>
                        <input class="form-control" type="date" id="NotesDateu" />
                    </div>
                </div>
                <div class="row" style="margin-top:10px;">
                    <div class="col-lg-12">
                        <div style="background:#fe97cc; height:350px;">
                            <div class="addnotediv">
                                <div class="row">
                                    <div class="col-lg-10">
                                        <textarea class="form-control" style="height:315px; display:none;" id="NoteAreau"></textarea>

                                    </div>
                                    <div class="col-lg-2">
                                        <img src="../images/attachNote.jpg" id="AttachImgu" style="width:73px; height:70px; margin-left:-12px; margin-top:30px; display:none;" onclick="ShowNotesAttachment()" />
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row" style="margin-top:10px;">
                    <div class="col-lg-10">
                        <button class="btn" id="UpdateNoteBtn" style="color:blue; background:rgb(225, 225, 225); font-weight:bold; border-bottom:1px solid gray; border-right:1px solid gray; border-radius:0px;">Update</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
    @*Map Modal*@
<div id="MapModal" class="modal fade" z-index="-1" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content" style="background-color:#e1e1e1; width:133%;">
            <div class="modal-header" style="padding:0.5rem!important;">
                <h5 class="modal-title" id="ModalLabel">Location</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close" onclick="CloseMapModal()">
                    <span aria-hidden="true">×</span>
                </button>
            </div>
            <div class="modal-body" style="color: #0000AB; padding-top: 20px;padding-bottom:10px; background:rgb(152, 204, 254);">
                <iframe src="https://www.google.com/maps/embed?pb=!1m16!1m12!1m3!1d21056742.211671695!2d-97.15369!3d49.891235!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!2m1!1s14735+32A+AVE+Surrey+V4P+1Z8+bc!5e0!3m2!1sen!2sca!4v1424618801986" width="600" height="450" frameborder="0" style="border:0"></iframe>
            </div>
        </div>
    </div>
</div>


<script>
    //    $("#location").click(function(){
    //    navigator.geolocation.getCurrentPosition(function(position){
    //        console.log(position);
    //        $.get("https://maps.googleapis.com/map/api/getcode/json?latlng-"+ position.coords.latitude + "," +position.coords.longitude + "&sensor=false", function(data){
    //            console.log(data);
    //        })
    //        var img = new Image();
    //        img.src = "https://maps.googleapis.com/maps/api/staticmap?center=" + position.coords.latitude + "," + position.coords.longitude + "&zoom=13&size=800x400&sensor=false";
    //        $('#output').html(img);
    //    });
    //});

    $("#AccurateBalance").click(function() {
        $("#AccurateBalance").hide();
        $("#PreviousBalanceS").show();
    })


    $("#location").click(function() {
        $("#MapModal").modal('show');
    });
    function CloseMapModal() {
        $("#MapModal").modal('hide');
    }
    function openNotesModal() {
        $("#NotesModal").modal('show');
        var pp = $("#customernumberfound").text();
        var nn = $("#txtFirstName").val();
        $("#CustomerCodeNa").text(pp);
        $("#CustomerNameNote").val(nn);
    }
    function closeNotesModal() {
        $("#NotesModal").modal('hide');
    }

    $("#PlusN").click(function() {
        $("#NoteArea").show();
        $("#AttachImg").show();
    });
    function ShowNotesAttachment() {
        $("#NotesAttachmentModal").modal('show');
    }
    function CloseNotesAttachment() {
        $("#NotesAttachmentModal").modal('hide');
    }

    //Customer Documents Upload
    $("#UploadNoteBtn").click(function() {
        debugger;
        var customerId = $("#customerinformationid").val();
        var customerNote = $("#NoteArea").val();
        var customerName = $("#CustomerNameNote").val();
        var data = {};
        data = new FormData();

        data.append("CustomerID", customerId);
        data.append("CustomerNote1", customerNote);
        data.append("CustomerName", customerName);
        $.ajax({
            url: '@Url.Action("AddCustomerNote", "Customer")',
            type: "POST",
            data: data,
            dataType: "json",
            processData: false,
            contentType: false,

            success: function() {
                swal("Success!", "Customer Note Added Successfully!");
                $("#NotesModal").modal('hide');
                window.location = '@Url.Action("NewCustomer", "Customer")';
            },
            error: function() {
                swal("Error!", "Customer Note Already Added");
                $("#NotesModal").modal('hide');
            }

        });
    });

    //Customer Note Update
    $("#UpdateNoteBtn").click(function() {
        debugger;
        var customerId = $("#customerinformationid").val();
        var customerNote = $("#NoteArea").val();
        var customerName = $("#CustomerNameNote").val();
        var data = {};
        data = new FormData();

        data.append("CustomerID", customerId);
        data.append("CustomerNote1", customerNote);
        data.append("CustomerName", customerName);
        $.ajax({
            url: '@Url.Action("EditCustomerNotes", "Customer")',
            type: "POST",
            data: data,
            dataType: "json",
            processData: false,
            contentType: false,

            success: function() {
                swal("Success!", "Customer Note Updated Successfully!");
                $("#NotesModal").modal('hide');
                window.location = '@Url.Action("NewCustomer", "Customer")';
            },
            error: function() {
                swal("Error!", "Customer Note Already Added");
                $("#NotesModal").modal('hide');
            }

        });
    });


    function openNotesModalu() {
        debugger;
        $("#NotesModalu").modal('show');
        var pp = $("#newcustomercode").text();
        $("#CustomerCodeNa").text(pp);
    }
    function closeNotesModalu() {
        $("#NotesModalu").modal('hide');
    }

    $("#PlusNu").click(function() {
        $("#NoteAreau").show();
        $("#AttachImgu").show();
    });


    $("#DocumentTypeSubmit").on('click', function() {
        var DocumentType = $("#DocumentType").val();

        var record = {};
        record = new FormData();
        if (DocumentType != null && DocumentType != "" && DocumentType != "undefined") {
            $("#msgDocumentType").hide();
            record.append("DocumentType", DocumentType);
            $.confirm({
                title: 'Add New Document Type!',
                content: 'Are you sure to add new dcoument type?',
                buttons: {
                    confirm: function() {
                        $.blockUI({ message: '<h3 class="blockui-txt"><img src="../images/busy.gif" style="width:15%"/> Loading ...</h1>' });
                        $.ajax({
                            url: '@Url.Action("AddDocumentType", "Vendor")',
                            type: "POST",
                            data: record,
                            async: false,
                            dataType: "json",
                            processData: false,
                            contentType: false,
                            success: function(data) {
                                if (data == "Add Successfully") {
                                    $("#DocumentTypeModal").modal('hide');
                                    setTimeout(function() {
                                        $.unblockUI();
                                        window.location = '@Url.Action("NewCustomer", "Customer")';
                                        toastr.success("Document TYpe Added Successfully");

                                    }, 2500);
                                }
                            },
                            error: function() {
                                setTimeout(function() {
                                    $.unblockUI();

                                }, 2500);
                            }
                        });
                    },
                    cancel: function() {
                    },
                }
            });


        }
        else {
            $("#msgDocumentType").show();
        }
    });
    function closemodaldocument() {
        $("#DocumentTypeModal").modal('hide');
    }
    function closeattachmodal() {
        $("#attach").modal('hide');
    }




</script>

    @*submittAttachments*@
<script>
    //start
    function Changerow(val, val2, event) {

        if ($(event).hasClass("selectedrow")) {
            $(event).removeClass("selectedrow");
        }
        else {
            $('.selrow').each((index, element) => {
                $(element).removeClass("selectedrow");
            });
            var allrows = $(".selrow").find('tr');
            $(event).addClass("selectedrow");

            $("#delnotebtn").click(function() {
                DeleteAttachment(val2);
            });
        }

    }

    //End



    $("#submittAttachments").on('click', function() {

        var DocumentType = $("#SupDocType").val();
        var DocumentName = $("#DocumentName").val();
        var VendorId = $("#customerinformationid").val();
        var val = $("#Imagefile").val().toLowerCase(),
            regex = new RegExp("(.*?)\.(pdf|PDF)$");
        if (val != "") {
            if (!(regex.test(val))) {
                $("#documentuploadresponse").text("Only pdf format are allowed !");
                $("#documentuploadresponse").show();
                setTimeout(function() {
                    $("#documentuploadresponse").hide();
                }, 3000);
            }
            else {
                var record = {};
                record = new FormData();

                var titleimage = "";
                if (DocumentType != null && DocumentType != "" && DocumentType != "undefined") {
                    if (document.getElementById('Imagefile') !== null) {
                        var totalFiles = document.getElementById('Imagefile').files.length;
                        for (var i = 0; i < totalFiles; i++)
                            titleimage = document.getElementById('Imagefile').files[i];
                    }
                    $("#msgDocumentType").hide();
                    record.append("DocumentTypeId", DocumentType);
                    record.append("DocumentName", DocumentName);
                    record.append("UserId", VendorId);
                    if (titleimage != "" && titleimage != null) {
                        record.append("file", titleimage);
                    }
                    //console.log(record);

                    $.confirm({
                        title: 'Add Customer Documents!',
                        content: 'Are you sure to add this Document?',
                        buttons: {
                            confirm: function() {
                                $.blockUI({ message: '<h3 class="blockui-txt"><img src="../images/busy.gif" style="width:15%"/> Loading ...</h1>' });
                                $.ajax({
                                    type: "POST",
                                    url: '@Url.Action("AddCustomerDocument", "Customer")',
                                    data: record,
                                    dataType: "json",
                                    processData: false,
                                    contentType: false,
                                    success: function(data) {
                                        console.log(data);
                                        if (data == true) {
                                            $("#documentuploadresponse").text("successfully uploaded");
                                            $("#documentuploadresponse").show();
                                            setTimeout(function() {
                                                $.unblockUI();
                                                location.reload();
                                            }, 2500);
                                        }
                                    },
                                    error: function() {
                                        setTimeout(function() {
                                            $.unblockUI();
                                            location.reload();
                                        }, 2500);
                                    }
                                });

                            },
                            cancel: function() {
                            },
                        }
                    });
                }
                $("#msgDocumentType").show();

            }
            //else
            //{
            //    $("#msgDocumentType").show();
            //}
        }
    });

        @*Submit Note Attachments*@

        $("#SubmitNoteAttachment").on('click', function() {
            var customerId = $("#customerinformationid").val();
            var DocumentName = $("#AttachmentName").val();
            var val = $("#NoteFile").val().toLowerCase(),
                regex = new RegExp("(.*?)\.(pdf|PDF)$");
            if (val != "") {
                if (!(regex.test(val))) {
                    swal("Error", "Only PDF Allowed")
                    setTimeout(function() {
                        $("#documentuploadresponse").hide();
                    }, 3000);
                }
                else {
                    var record = {};
                    record = new FormData();

                    var titleimage = "";

                    if (document.getElementById('NoteFile') !== null) {
                        var totalFiles = document.getElementById('NoteFile').files.length;
                        for (var i = 0; i < totalFiles; i++)
                            titleimage = document.getElementById('NoteFile').files[i];
                    }
                    $("#msgDocumentType").hide();
                    record.append("DocumentName", DocumentName);
                    record.append("UserId", customerId);
                    if (titleimage != "" && titleimage != null) {
                        record.append("file", titleimage);
                    }
                    //console.log(record);

                    $.confirm({
                        title: 'Add Customer Documents!',
                        content: 'Are you sure to add this Document?',
                        buttons: {
                            confirm: function() {
                                $.blockUI({ message: '<h3 class="blockui-txt"><img src="../images/busy.gif" style="width:15%"/> Loading ...</h1>' });
                                $.ajax({
                                    type: "POST",
                                    url: '@Url.Action("AddCustomerNotesDocument", "Customer")',
                                    data: record,
                                    dataType: "json",
                                    processData: false,
                                    contentType: false,
                                    success: function(data) {
                                        console.log(data);
                                        if (data == true) {
                                            swal("Success", "Document Uploaded Successfully");
                                            $("#NotesAttachmentModal").modal('hide');
                                            $("#NotesModal").modal('hide');
                                            setTimeout(function() {
                                                $.unblockUI();
                                                location.reload();
                                            }, 2500);
                                        }
                                    },
                                    error: function() {
                                        setTimeout(function() {
                                            $.unblockUI();
                                            location.reload();
                                        }, 2500);
                                    }
                                });

                            },
                            cancel: function() {
                            },
                        }
                    });
                }
                $("#msgDocumentType").show();

            }
            else {
                swal("Error", "Please Choose a file!");
            }

        });

</script>
<script>
    $(document).ready(function() {

        $("#addappendTabs").hide();
        $("#deleteicon").hide();
        $("#createicon").hide();
        $("#attachmentsicon").hide();
        $("#editicon").hide();
        $("#printicon").hide();
        $("#companyvalidation").text("").hide();
        $("#fnamevalidation").text("").hide();
        $("#lastvalidation").text("").hide();
        $("#emailvalidation").text("").hide();
        $("#ssnvalidation").text("").hide();
        $.ajax({
            url: '@Url.Action("ShowGroup", "Customer")',
            async: false,
            dataType: "json",
            processData: false,
            contentType: false,
            success: function(data) {
                if (data.length > 0) {
                    $('#parentgroupname').html('');
                    var options = '';
                    options += ' <option value="Select">Select</option>';
                    for (var i = 0; i < data.length; i++) {
                        options += '<option value="' + data[i].value + '">' + data[i].text + '</option>';
                    }
                    $('#parentgroupname').append(options);
                }
            },
            error: function() {

            }
        });

        AppendAllMissions(event);
        GetAllZipCodes();
        statelistcallfun();
        $('.modal').each(function() {
            $("#addzipcode").on('hidden.bs.modal', function() {
                //location.reload();
            });

        });



    });


    var appendsalescreen = function(e) {
        var customerid = $(e).attr('ab');
        var currentInvoice = $(e).attr('cd');

        $.ajax({
            type: "GET",
            url: '@Url.Action("POSSaleGetByCustomerId", "Customer")',
            data: {
                customerid: customerid,
                currentInvoice: currentInvoice
            },
            success: function(data) {
                if (data != null) {
                    console.log(data);
                    $('#addsalesinvoice').modal('show');
                    $.each(data, function(key, value) {
                        if (value.getSaleDiscount) {

                            $("#modaltxtisgetsalediscount").prop("checked", true)
                        }
                        else {
                            $("#modaltxtisgetsalediscount").prop("unchecked", false)
                        }
                        $("#modaltxtcustomername").val(value.customerName);
                        $("#modaltxtcustomercode").val(value.customerNumber);
                        $("#modaltxtinvoicenumberid").val(value.invoiceNumber);
                        $("#modaltxtinvtotalid").val(value.invoiceTotal);
                        $("#modaltxtpreviousbalanceid").val(value.previousBalance);
                        $("#modaltxtdiscountid").val(value.charges);
                        $("#modaltxttaxid").val(value.tax);
                        $("#modaltxtotherid").val(value.other);
                        $("#modaltxtsubtotalid").val(value.subTotal);
                        $("#modaltxtfreightid").val(value.freight);
                        $("#modaltxtamountdueid").val(value.amountDue);
                        //$("#modaltxtsaleitemdetail").empty(saleitemdetail);

                        if (key == 0) {
                            var salemantable = "";
                            salemantable += '<tr>';
                            salemantable += '<td class="w-auto">' + value.saleManName + '</td>';
                            salemantable += '<td class="w-auto">' + value.paymentTerms + '</td>';
                            salemantable += '<td class="w-auto">' + value.shippedName + '</td>';
                            salemantable += '<td class="w-auto">' + value.driverName + '</td>';
                            salemantable += '<td class="w-auto">' + value.weight + '</td>';
                            salemantable += '<td class="w-auto">' + value.count + '</td>';
                            salemantable += '</tr>';
                            $("#modaltxtsalemantable").empty(salemantable);
                            $("#modaltxtsalemantable").append(salemantable);
                        }

                        var saleitemdetail = "";
                        saleitemdetail += '<tr>';
                        saleitemdetail += '<td class="w-auto" id="TdSrNo">' + (key + 1) + '</td>';
                        saleitemdetail += '<td class="w-auto" id="TdItemNumber">' + value.itemNumber + '</td>';
                        saleitemdetail += '<td class="w-auto" id="TdItemDescription">' + value.itemDescription + '</td>';
                        saleitemdetail += '<td class="w-auto" id="TdQuantity">' + value.ringerQuantity + '</td>';
                        saleitemdetail += '<td class="w-auto" id="TdAmountRetail">' + value.amountRetail + '</td>';
                        saleitemdetail += '<td class="w-auto" id="TdInDiscounts">' + value.inDiscount + '</td>';
                        saleitemdetail += '<td class="w-auto" id="TdOutDiscounts">' + value.outDiscount + '</td>';
                        saleitemdetail += '<td class="w-auto" id="TdInUnits">' + value.inUnits + '</td>';
                        saleitemdetail += '<td class="w-auto" id="TdOutUnits">' + value.outUnits + '</td>';
                        saleitemdetail += '<td class="w-auto" id="TdPRice">' + value.price + '</td>';
                        saleitemdetail += '<td class="w-auto" id="TdTotal">' + value.total + '</td>';
                        saleitemdetail += '</tr>';

                        $("#modaltxtsaleitemdetail").append(saleitemdetail);
                        //$("#modaltxtsaleitemdetail").empty(saleitemdetail);
                    });
                }
            },
            error: function() {

            },
        });
    }


    $("#searchnote").on("keyup", function() {
        var value = $(this).val().toLowerCase();
        $("#attachtable tr").filter(function() {
            $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)
        });
    });

    function showattachmentmodal() {
        $("#attach").modal('show');
    }
    function closeattachmentmodal() {
        $("#attach").modal('hide');
    }

    function AppendAllMissions(event) {
        $.ajax({
            type: "GET",
            url: '@Url.Action("AutoCompleteSearchCustomer", "Customer")',//"/Customer/AutoCompleteSearchCustomer",
            async: false,
            dataType: 'json',
            cache: false,
            success: function(data) {
                var inner = '';
                var opts = jQuery.parseJSON(JSON.stringify(data));
                if (opts.length > 0) {
                }
                $.each(opts, function(i, d) {
                    inner = '';
                    if (i == 0) {
                        inner += '<div class="setsearchbox dropdownhwading hidden">';
                        inner += '<div class="searchheader" style="width:20% !important">Company Name</div>';
                        inner += '<div class="searchheader" style="width:20% !important">First Name</div>';
                        inner += '<div class="searchheader" style="width:20% !important">Last Name</div>';
                        inner += '<div class="searchheader" style="width:20% !important">Phone#</div>';
                        inner += '<div class="searchheader" style="width:20% !important">Cell#</div>';
                        inner += '</div>';
                    }
                    inner += '<div class="setsearchbox anitem dropdown-menu searchitem cp" onclick="GetCustomerByID(' + d.id + ')";>';
                    inner += '<div class="item_name di w-auto data-rel=' + d.id + '" style="width:20% !important">' + d.company + '</div>';
                    inner += '<div class="item_name di w-auto data-rel=' + d.id + '" style="width:20% !important">' + d.firstName + '</div>';
                    inner += '<div class="item_name di w-auto data-rel=' + d.id + '" style="width:20% !important">' + d.lastName + '</div>';
                    inner += '<div class="item_name di w-auto data-rel=' + d.id + '" style="width:20% !important">' + d.phone + '</div>';
                    inner += '<div class="item_name di w-auto data-rel=' + d.id + '" style="width:20% !important">' + d.cell + '</div>';
                    inner += '</div>';
                    $("#listallmissions").append(inner);
                });
            },
            error: function(xhr, status, error) {
                var errorMessage = xhr.status + ': ' + xhr.statusText
            },
        });
    };



    function GetAllMatchedItems(event) {

        var naming = $(".searchname").val();
        if (naming != null && naming != "") {
            $(".dropdownhwading").show();
        }
        if (naming == "") {
            $(".item_name").parent().hide();
            $(".dropdownhwading").hide();
        }
        else {
            var text = naming;
            var items = $(".item_name");
            //first, hide all:
            items.parent().hide();

            //show only those matching user input:
            items.filter(function() {
                return $(this).text().toLowerCase().indexOf(text) == 0;
            }).parent().show();

        }

    };


    function GetCustomerByID(id) {
        $(".createnew").hide();
        $.ajax({
            type: "GET",
            url: '@Url.Action("GetCustomerByID", "Customer")',
            data: {
                id: id
            },
            success: function(data) {
                if (data != null) {


                    var iconhtml = '';
                    iconhtml += '<img class="hide-icon" src="../images/attach.png" style="width:50px" title="Attachments" onclick="showattachmentmodal()" />';
                    iconhtml += '<img class="hide-icon" src="../images/delete.png" style="width:50px" title="Delete" onclick="DeleteCustomer()"/>';
                    iconhtml += '<img class="hide-icon saveexisting" src="../images/edit.png" style="width:50px" title="Edit" onclick="UpdateExistingCustomer()" />';
                    //iconhtml += '<img class="hide-icon" src="/images/printer.png" style="width:50px" title="Print" />';
                    $("#defaultlisticons").append(iconhtml);

                    var itennumberhtml = '';
                    itennumberhtml += '<h3>';
                    itennumberhtml += '<label id="itemlabel" style="font-weight:bold;">Customer Number:</label><span id="customernumberfound" class="itemnumberbox di"></span></br>';
                    itennumberhtml += '<label id="qtylabel" class="mg-t-2" style="font-weight:bold;">Prev. Balance:</label><span id="prebalance" class="itemnumberbox di ml-2"></span></br>';
                    itennumberhtml += ' </h3>';
                    $("#existingitemnumber").append(itennumberhtml);



                    $("#customerinformationid").val(data.id);
                    $("#NoteArea").val(data.customerNote);
                    if (data.customerNote == null || data.customerNote == "" || data.customerNote == "undefined") {
                        $("#UpdateNoteBtn").prop('disabled', true);
                    }
                    else {
                        $("#UploadNoteBtn").prop('disabled', true);
                    }
                    $("#NoteAddDate").val(data.noteDate);
                    $("#customernumberfound").text(data.customerCode);
                    //$("#txtcustomercode").html("CustomerNumber:" + data.customerCode);
                    // $("#txtbalance").val(data.balance);
                    $("#prebalance").text(data.balance);
                    $("#PreviousBalanceS").text(data.balance);
                    $("#companyname").val(data.company);
                    $("#suite").val(data.suite);
                    $('#txtgender').val(data.gender).attr("selected", "selected");
                    //if (data.gender != null) {
                    //    var Gender = new Option(data.gender, data.gender);
                    //    Gender.selected = true;
                    //    $("#txtgender").append(Gender);
                    //}
                    $("#txtFirstName").val(data.firstName);
                    $("#txtLastName").val(data.lastName);
                    $("#StretNumber").val(data.street);
                    $("#streetNumber").val(data.businessAddress);
                    $("#txtcity").val(data.city);
                    $('#state').val(data.state);

                    $("#txtzipcode").val(data.zip);
                    $("#Country").val(data.country);
                    if (data.checkAddress) {
                        $("#CheckAdress").prop("checked", true)
                    }
                    else {
                        $("#CheckAdress").prop("unchecked", false)
                    }
                    $("#phonenumber").val(data.phone);
                    $("#txtfax").val(data.fax);
                    $("#txtcell").val(data.cell);
                    $('#ProviderID').val(data.providerId).attr("selected", "selected");
                    $('#customertype').val(data.customerTypeId).attr("selected", "selected");

                    $("#other").val(data.other);
                    $("#txtowneraddress").val(data.ownerAddress);
                    $("#txtvehiclenumber").val(data.vehicleNumber);
                    $("#email").val(data.email);
                    $("#Website").val(data.website);
                    $("#txtdob").val(data.dob);
                    $("#Taxidfein").val(data.taxIdfein);
                    $("#Stateidnumber").val(data.stateIdnumber);
                    $("#Ssn").val(data.ssn);
                    $("#TobaccoLiscenese").val(data.tobaccoLicenseNumber);
                    $("#vendor").val(data.vendor);
                    $("#txtdrivingnumber").val(data.drivingLicenseNumber);
                    $('#txtdrivinglicensestate').val(data.drivingLicenseStateId).attr("selected", "selected");

                    $("#txtcigarettelicensenumber").val(data.cigaretteLicenseNumber);
                    $("#dea").val(data.dea);
                    if (data.authorized) {
                        $("#Authorized").prop("checked", true)
                    }
                    else {
                        $("#Authorized").prop("unchecked", false)
                    }
                    $("#memo").val(data.memo);
                    if (data.customerClassification != null) {

                        $('#Group').val(data.customerClassification.groupId).attr("selected", "selected");
                        $('#SubGroup').val(data.customerClassification.subGroupId).attr("selected", "selected");
                        $('#Zone').val(data.customerClassification.zoneId).attr("selected", "selected");
                        $('#BusinessType').val(data.customerClassification.businessTypeId).attr("selected", "selected");
                        $('#SalesMan').val(data.customerClassification.salesmanId).attr("selected", "selected");
                        $('#ShippedVia').val(data.customerClassification.shippedViaId).attr("selected", "selected");
                        $('#Route').val(data.customerClassification.routeId).attr("selected", "selected");
                        $('#routedeliveryday').val(data.customerClassification.routedeliveryday).attr("selected", "selected");
                        $('#Driver').val(data.customerClassification.driverId).attr("selected", "selected");

                        if (data.customerClassification.outOfStateCustomer) {
                            $("#txtOutOfstateCustomer").prop("checked", true)
                        }
                        else {
                            $("#txtOutOfstateCustomer").prop("unchecked", false)
                        }
                        if (data.customerClassification.addtoMaillingList) {
                            $("#txtAddToMailingList").prop("checked", true)
                        }
                        else {
                            $("#txtAddToMailingList").prop("unchecked", false)
                        }
                        if (data.customerClassification.addtoemailTextList) {
                            $("#txtaddtoemailtextlist").prop("checked", true)
                        }
                        else {
                            $("#txtaddtoemailtextlist").prop("unchecked", false)
                        }
                        if (data.customerClassification.rejectPromotion) {
                            $("#txtrejectpromotion").prop("checked", true)
                        }
                        else {
                            $("#txtrejectpromotion").prop("unchecked", false)
                        }
                        if (data.customerClassification.viewInvoicePrevBalance) {
                            $("#txtViewInvoicePrevBalance").prop("checked", true)
                        }
                        else {
                            $("#txtViewInvoicePrevBalance").prop("unchecked", false)
                        }
                        if (data.customerClassification.viewRetailandDiscount) {
                            $("#txtViewRetailandDiscount").prop("checked", true)
                        }
                        else {
                            $("#txtViewRetailandDiscount").prop("unchecked", false)
                        }
                        $('#txtbarcode').val(data.customerClassification.barCodeId).attr("selected", "selected");

                        $("#txtdefaultinvoicecopies").val(data.customerClassification.defaultInvoiceCopies);
                        if (data.customerClassification.specialInvoiceCustom) {
                            $("#txtSpecialInvoiceCustom").prop("checked", true)
                        }
                        else {
                            $("#txtSpecialInvoiceCustom").prop("unchecked", false)
                        }
                        $('#ShipToReference').val(data.customerClassification.shiptoReferenceId).attr("selected", "selected");

                        if (data.customerClassification.useDefaultInvMemo) {
                            $("#defaultinvmemo").prop("checked", true)
                        }
                        else {
                            $("#defaultinvmemo").prop("unchecked", false)
                        }
                        $("#txtinvoicememo").val(data.customerClassification.invoiceMemo);
                        $("#txtOtherReferenceNumber").val(data.customerClassification.otherCustomerReference);
                    }
                    if (data.customerBillingInfo != null) {
                        if (data.customerBillingInfo.isTaxExempt) {
                            $("#txttaxexempt").prop("checked", true)
                        }
                        else {
                            $("#txttaxexempt").prop("unchecked", false)
                        }
                        $('#txtpricingid').val(data.customerBillingInfo.pricingId).attr("selected", "selected");

                        if (data.customerBillingInfo.isGetSalesDiscounts) {
                            $("#txtisgetsalesdiscounts").prop("checked", true)
                        }
                        else {
                            $("#txtisgetsalesdiscounts").prop("unchecked", false)
                        }
                        if (data.customerBillingInfo.isOutOfStateCustomer) {
                            $("#txtisoutofstatecustomer").prop("checked", true)
                        }
                        else {
                            $("#txtisoutofstatecustomer").prop("unchecked", false)
                        }
                        $("#txtretailpluspercentage").val(data.customerBillingInfo.retailPlusPercentage);
                        $("#txtretailplus").val(data.customerBillingInfo.retailPlus);
                        $("#txtadditionalinvoicecharge").val(data.customerBillingInfo.additionalInvoiceCharge);
                        $("#txtadditionalinvoicediscount").val(data.customerBillingInfo.additionalInvoiceDiscount);
                        $("#txtschedulemessagefromdate").val(data.customerBillingInfo.scheduleMessageFromDate);
                        $("#txtschedulemessagetodate").val(data.customerBillingInfo.scheduleMessageToDate);
                        $("#txtschedulemessage").val(data.customerBillingInfo.scheduleMessage);
                        $('#paymenttermsid').val(data.customerBillingInfo.paymentTermsId).attr("selected", "selected");

                        $("#creditlimit").val(data.customerBillingInfo.creditLimit);
                        if (data.customerBillingInfo.isCreditHold) {
                            $("#txtcredithold").prop("checked", true)
                        }
                        else {
                            $("#txtcredithold").prop("unchecked", false)
                        }
                        if (data.customerBillingInfo.isBillToBill) {
                            $("#txtbilltobill").prop("checked", true)
                        }
                        else {
                            $("#txtbilltobill").prop("unchecked", false)
                        }
                        if (data.customerBillingInfo.isNoCheckAccepted) {
                            $("#txtnocheckaccepted").prop("checked", true)
                        }
                        else {
                            $("#txtnocheckaccepted").prop("unchecked", false)
                        }
                        if (data.customerBillingInfo.isExclude) {
                            $("#txtexclude").prop("checked", true)
                        }
                        else {
                            $("#txtexclude").prop("unchecked", false)
                        }
                        $("#txtthirdpartycheckcharge").val(data.customerBillingInfo.thirdPartyCheckCharge);
                        if (data.customerBillingInfo.isCashBackBalance) {
                            $("#txtiscashbackbalance").prop("checked", true)
                        }
                        else {
                            $("#txtiscashbackbalance").prop("unchecked", false)
                        }
                        $("#txtcashbackbalance").val(data.customerBillingInfo.cashBackBalance);
                        if (data.customerBillingInfo.isPopupMessage) {
                            $("#txtispopupmessage").prop("checked", true)
                        }
                        else {
                            $("#txtispopupmessage").prop("unchecked", false)
                        }
                        $("#txtpopupmessage").val(data.customerBillingInfo.popupMessage);
                    }
                    //$("#editicon").show();
                    //$("#deleteicon").show();
                    //$("#addicon").hide();

                    $("#itemlabel").show();
                    $("#qtylabel").show();
                    $("#listallmissions").empty();
                }
            },
            error: function() {

            },
        });
        CustomerSales(id);
        Customerpayments(id);
        CustomerTransaction(id);
        CustomerStatistics(id);
        CustomerNotes(id);
        CustomerAttachmentsHistory(id);
        addbilltobillicon();
        getcheckboxbilltobilllist();
        NotesAttachmentsHistory(id);
    }



    //function NotesAttachmentsHistory(id){
    //    $.ajax({
    //        type:"GET",
    //        url:'@Url.Action("NotesAttachmentByCustomerId" , "Customer")',
    //        data:{
    //            id:id
    //        },
    //        success : function(data){
    //            if(data != null && data.length >0){
    //               $.each(data, function (value) {
    //                    //var date=(value.invoiceDate).ToString("dd/mm/yyy");
    //                    var html = "";
    //                    html += '<tr >';
    //                    html += '<td class="w-auto"> ' + value.documentName . + '</td >';
    //                    html += '<td class="w-auto grids-td-simple">' + value.uploadDate + '</td>';
    //                    html += '<td class="w-auto">' + value.documentName + '</td>';
    //                    html += '<td class="w-auto grids-td-simple">'+ value.userName + '</td>';
    //                    html += '</tr >';
    //                    $("#NotesAttachmentBody").append(html);

    //                });
    //            }
    //        },
    //    });
    //}
    function NotesAttachmentsHistory(id) {
        $.ajax({
            type: "GET",
            url: '@Url.Action("NotesAttachmentByCustomerId" , "Customer")',
            data: {
                id: id
            },
            success: function(data) {
                if (data != null && data.length > 0) {
                    $.each(data, function(index, value) {
                        console.log(value);
                        //var date=(value.invoiceDate).ToString("dd/mm/yyy");
                        var html = "";
                        //html += '<tr >';
                        html += '<tr id="rowlistid-' + index + '" onclick ="Changerow(' + index + ',' + value.documentId + ',this)"  class="selrow cp">';
                        html += '<td class="w-auto"> ' + value.documentName + '</td >';
                        html += '<td class="w-auto grids-td-simple">' + value.uploadDate + '</td>';
                        html += '<td class="w-auto">' + value.documentName + '</td>';
                        html += '<td class="w-auto grids-td-simple">' + data[0].userName + '</td>';
                        html += '</tr >';
                        $("#NotesAttachmentBody").append(html);

                    });

                }

            }
        });
    }

    function CustomerSales(id) {
        $.ajax({
            type: "GET",
            url: '@Url.Action("SaleGetByCustomerID", "Customer")',
            data: {
                id: id
            },
            success: function(data) {
                if (data != null && data.length > 0) {
                    $.each(data, function(key, value) {
                        //var date=(value.invoiceDate).ToString("dd/mm/yyy");
                        var html = "";
                        html += '<tr ondblclick="appendsalescreen(this)" ab="' + value.customerId + '" cd="' + value.invoiceNumber + '" >';
                        html += '<td class="w-auto" style="font-weight:bold; color:blue;"> ' + (key + 1) + '</td >';
                        html += '<td class="w-auto grids-td-simple" style="font-weight:bold; color:blue;">' + value.invoiceNumber + '</td>';
                        html += '<td class="w-auto" style="font-weight:bold; color:blue;">' + value.orderDate + '</td>';
                        html += '<td class="w-auto grids-td-simple" style="font-weight:bold; color:blue;">' + value.orderDate + '</td>';
                        html += '<td class="w-auto" style="font-weight:bold; color:blue;">' + value.cashierName + '</td>';
                        html += '<td class="w-auto grids-td-simple" style="font-size:weight; color:blue;">' + value.customerName + '</td>';
                        html += '<td class="w-auto" style="font-weight:bold; color:blue;">' + value.invoiceTotal + '</td>';
                        html += '<td class="w-auto" style="font-weight:bold; color:blue;">' + value.paidAmount + '</td>';
                        html += '<td class="w-auto" style="font-weight:bold; color:blue;">' + value.amountDue + '</td>';
                        html += '</tr >';
                        $("#appendnewrowforsale").append(html);
                        if (key % 2 != 0) {
                            $("#appendnewrowforsale tr").eq(key).css("background-color", "#afe3f9");
                        }
                    });
                } else {

                }
            },
            error: function() {

            },
        });
    }

    function CustomerAttachmentsHistory(id) {
        $.ajax({
            type: "GET",
            url: '@Url.Action("CustomerDocumentsByCustomerId" , "Customer")',
            data: {
                id: id
            },
            success: function(data) {
                if (data != null && data.length > 0) {
                    console.log(data);
                    $.each(data, function(key, value) {
                        //var date=(value.invoiceDate).ToString("dd/mm/yyy");
                        var html = "";
                        html += '<tr >';
                        html += '<td class="w-auto"> ' + (key + 1) + '</td >';
                        html += '<td class="w-auto grids-td-simple">' + value.documentType + '</td>';
                        html += '<td class="w-auto">' + value.documentName + '</td>';
                        html += '<td class="w-auto grids-td-simple">' + '<a style="margin-right:10px;" href="' + value.imageByPath + '" download>Download</a>' + '<a class="cp" onclick="DeleteDocument(' + value.documentId + ')"><i class="fa fa-trash"></i></a>' + '</td>';
                        html += '</tr >';
                        $("#AttachmentBody").append(html);

                    });
                }
            },
        });
    }
    function Customerpayments(id) {
        $.ajax({
            type: "GET",
            url: '@Url.Action("PaymentsGetByCustomerID", "Customer")',
            data: {
                id: id
            },
            success: function(data) {
                if (data != null && data.length > 0) {

                    $.each(data, function(key, value) {
                        var html = "";
                        html += '<tr ondblclick="forpaymentrowcolor(' + key + ')">';
                        html += '<td class="w-auto"> ' + value.orderDate + '</td >';
                        html += '<td class="w-auto">' + value.orderTime + '</td>';
                        html += '<td class="w-auto">' + value.invoiceDate + '</td>';
                        html += '<td class="w-auto">' + value.possaleId + '</td>';
                        html += '<td class="w-auto">' + value.saleManName + '</td>';
                        html += '<td class="w-auto">' + value.paymentTerms + '</td>';
                        html += '<td class="w-auto">' + value.saleManName + '</td>';
                        html += '<td class="w-auto">' + value.invoiceTotal + '</td>';
                        html += '<td class="w-auto">' + value.paidAmount + '</td>';
                        html += '<td class="w-auto">' + value.amountDue + '</td>';
                        html += '</tr >';
                        $("#appendnewrowforpayment").append(html);
                        if (key % 2 != 0) {
                            $("#appendnewrowforpayment tr").eq(key).css("background-color", "rgb(175, 227, 249)");
                        }
                    });
                }
            },
            error: function() {

            },
        });
    }

    function CustomerTransaction(id) {

        $.ajax({
            type: "GET",
            url: '@Url.Action("CustomerTransByID", "Customer")',
            data: {
                id: id
            },
            success: function(data) {
                //console.log(data);
                if (data != null && data.length > 0) {
                    $.each(data, function(key, value) {
                        //var date=(value.invoiceDate).ToString("dd/mm/yyy");
                        var html = "";
                        html += '<tr >';
                        html += '<td class="w-auto grids-td-simple">' + value.credit + '</td>';
                        html += '<td class="w-auto">' + value.debit + '</td>';
                        html += '<td class="w-auto grids-td-simple">' + value.date + '</td>';
                        html += '</tr >';
                        $("#appendnewrowforaccounthistory").append(html);
                        if (key % 2 != 0) {
                            $("#appendnewrowforaccounthistory tr").eq(key).css("background-color", "skyblue");
                        }
                    });
                } else {

                }
            },
            error: function() {

            },
        });
    }

    function CustomerStatistics(id) {

        $.ajax({
            type: "GET",
            url: '@Url.Action("CustomerStatsByID", "Customer")',
            data: {
                id: id
            },
            success: function(data) {

                console.log(data);
                $("#CreatedD").val(data.createdDate);
                $("#LastUse").val(data.lastLogin);
                $("#LastSale").val(data.deliveredDate);
            },
            error: function() {

            },
        });
    }

    function CustomerNotes(id) {

        $.ajax({
            type: "GET",
            url: '@Url.Action("CustomerNotesByID", "Customer")',
            data: {
                id: id
            },
            success: function(data) {

                console.log(data);

            },
            error: function() {

            },
        });
    }

    function DeleteDocument(id) {
        //var thisrow = $(this).parents("tr").attr("id");
        //var thisrow = $(this).closest('tr').attr('id');
        var zaf = $('#tbleid tr').attr("id");
        //var row = $(this).parents('tr').attr('id');

        $.confirm({
            title: "Delete Document",
            content: "Are you sure to add delete document?",
            buttons: {
                confirm: function() {

                    $.ajax({
                        type: "GET",
                        url: "@Url.Action("DeleteCustomerDocument", "Customer")",
                        data: {
                            id: id
                        },
                        success: function(data) {

                            swal("Success!", "Document Deleted Successfully");
                            window.location = '@Url.Action("NewCustomer", "Customer")';
                            //$(this).closest("tr").remove();
                            //$("#" + thisrow).remove();


                            //$(document).on("click", "#tbleid tbody tr", function() {
                            //var thisrow = $(this).closest('tr').attr('id');
                            // //alert("I am a " + animal);
                            // $("#" + thisrow).remove();
                            // swal("Success!", "Document Deleted Successfully");
                            //    });
                        },
                        error: function() {

                        },
                    });
                },
                cancel: function() { }
            }
        })
    }

    //Delete attachment
    function DeleteAttachment(id) {

        $.confirm({
            title: "Delete Document",
            content: "Are you sure to add delete document?",
            buttons: {
                confirm: function() {

                    $.ajax({
                        type: "GET",
                        url: "@Url.Action("DeleteNoteAttachment", "Customer")",
                        data: {
                            id: id
                        },
                        success: function(data) {

                            swal("Success!", "Document Deleted Successfully");
                            window.location = '@Url.Action("NewCustomer", "Customer")';

                        },
                        error: function() {

                        },
                    });
                },
                cancel: function() { }
            }
        })
    }



    function subgroupmodalclose() {
        $("#addsubgroup").modal('hide');
        $("#addgroup").modal('show');
    }
    function closemodal() {
        $("#adddrivername").modal('hide');
        $("#addbarcode").modal('hide');
        $("#addcustomertype").modal('hide');
        $("#addroutedeliveryday").modal('hide');
        $("#addroutename").modal('hide');
        $("#addshippedvia").modal('hide');
        $("#addsalesman").modal('hide');
        $("#addgroup").modal('hide');
        $("#addsubgroup").modal('hide');
        $("#addzone").modal('hide');
        $("#addbusinesstype").modal('hide');
        $("#addprovider").modal('hide');
        $("#addcustomerstate").modal('hide');
        $("#adddrivinglicensestate").modal('hide');
        $("#addshiptoreference").modal('hide');
        $("#addpricing").modal('hide');
        $("#addpayementterms").modal('hide');
        $("#addzipcode").modal('hide');
        //$("#addsalesinvoice").modal('hide');
        $("#addbilltobillcustomer").modal('hide');
    }

    function closeaddsalesinvoice() {
        $("#addsalesinvoice").modal('hide');

        $("#modaltxtcustomername").val("");
        $("#modaltxtcustomercode").val("");
        $("#modaltxtinvoicenumberid").val("");
        $("#modaltxtinvtotalid").val("");
        $("#modaltxtpreviousbalanceid").val("");
        $("#modaltxtdiscountid").val("");
        $("#modaltxttaxid").val("");
        $("#modaltxtotherid").val("");
        $("#modaltxtsubtotalid").val("");
        $("#modaltxtfreightid").val("");
        $("#modaltxtamountdueid").val("");
        $("#modaltxtsaleitemdetail").empty();

    }

    function addproviderdata() {
        $.confirm({
            title: "Add A New Provider",
            content: "Are you sure to add a new provider?",
            buttons: {
                confirm: function() {
                    var ProviderName = $("#providername").val();
                    var providerdata = {};
                    providerdata = new FormData();
                    providerdata.append("Name", ProviderName);
                    $.ajax({
                        type: "POST",
                        url: "@Url.Action("AddProvider", "Customer")",
                        data: providerdata,
                        cache: false,
                        processData: false,
                        contentType: false,
                        success: function(data) {
                            if (data == "true") {
                                closemodal();
                                window.location = '@Url.Action("NewCustomer", "Customer")';

                            }
                        },
                        error: function() {

                        },
                    });
                },
                cancel: function() { }
            }
        })
    }
    function addshiptoreference() {
        $.confirm({
            title: 'Add New ShiptoReference!',
            content: 'Are you sure to Add New ShiptoReference?',
            buttons: {
                confrim: function() {

                    var Name = $("#shiptoreferencename").val();
                    var shiptoreferencedata = {};
                    shiptoreferencedata = new FormData();
                    shiptoreferencedata.append("Name", Name);
                    $.ajax({
                        type: "POST",
                        url: "@Url.Action("AddShipToReference", "Customer")",
                        data: shiptoreferencedata,
                        cache: false,
                        processData: false,
                        contentType: false,
                        success: function(data) {
                            if (data == "true") {
                                closemodal();
                                window.location = '@Url.Action("NewCustomer", "Customer")';
                            }
                        },
                        error: function() {

                        },
                    });
                },
                cancel: function() { }
            }
        });

    }
    function addcustomerstatedata() {
        $.confirm({
            title: "Add a new Customer State",
            content: "Are u Sure To Add A New Customer State",
            buttons: {
                confirm: function() {
                    var CustomerStateName = $("#StateName").val();
                    var CustomerStatedata = {};
                    CustomerStatedata = new FormData();
                    CustomerStatedata.append("StateName", CustomerStateName);
                    $.ajax({
                        type: "POST",
                        url: "@Url.Action("AddCustomerState", "Customer")",
                        data: CustomerStatedata,
                        cache: false,
                        processData: false,
                        contentType: false,
                        success: function(data) {
                            if (data == "true") {
                                closemodal();
                                window.location = '@Url.Action("NewCustomer", "Customer")';
                            }
                        },
                        error: function() {

                        },
                    });
                },
                cancel: function() { }
            }
        });

    }
    function addcustomertypedata() {
        $.confirm({
            title: "Add a new Customer Type",
            content: "Are u Sure To Add A New Customer Type",
            buttons: {
                confirm: function() {
                    var TypeName = $("#customertype").val();
                    var TypeNamedata = {};
                    TypeNamedata = new FormData();
                    TypeNamedata.append("TypeName", TypeName);
                    $.ajax({
                        type: "POST",
                        url: "@Url.Action("AddCustomerType", "Customer")",
                        data: TypeNamedata,
                        cache: false,
                        processData: false,
                        contentType: false,
                        success: function(data) {
                            if (data == "true") {
                                closemodal();
                                window.location = '@Url.Action("NewCustomer", "Customer")';
                            }
                        },
                        error: function() {

                        },
                    });
                },

                cancel: function() { }
            }
        });

    }
    function adddriverlicensestatedata() {
        $.confirm({
            title: "Add a new Driving License State",
            content: "Are u Sure To Add A New Driving Licenese State",
            buttons: {
                confirm: function() {

                    var Name = $("#driverlicensestatename").val();
                    var Driverlicensestatedata = {};
                    Driverlicensestatedata = new FormData();
                    Driverlicensestatedata.append("Name", Name);
                    $.ajax({
                        type: "POST",
                        url: "@Url.Action("AddDrivingLicenseState", "Customer")",
                        data: Driverlicensestatedata,
                        cache: false,
                        processData: false,
                        contentType: false,
                        success: function(data) {
                            if (data == "true") {
                                closemodal();
                                window.location = '@Url.Action("NewCustomer", "Customer")';
                            }
                        },
                        error: function() {

                        },
                    });
                },

                cancel: function() { }
            }
        });

    }
    function addgroupdata() {

        var Name = $("#groupname").val();
        var Groupdata = {};
        Groupdata = new FormData();
        Groupdata.append("Name", Name);
        $.confirm({
            title: 'Add New Group!',
            content: 'Are you sure to Add New Group?',
            buttons: {
                confirm: function() {
                    $.ajax({
                        type: "POST",
                        url: "@Url.Action("AddGroup", "Customer")",
                        data: Groupdata,
                        cache: false,
                        processData: false,
                        contentType: false,
                        success: function(data) {
                            if (data == "true") {
                                closemodal();
                                window.location = '@Url.Action("NewCustomer", "Customer")';
                            }
                        },
                        error: function() {

                        },
                    });
                },
                cancel: function() { }
            }
        });

    }
    function addsubgroupdata() {
        var SubGroupName = $("#subgroupname").val();
        var GroupID = $("#parentgroupname").val();
        var SubGroupdata = {};
        SubGroupdata = new FormData();
        SubGroupdata.append("SubGroupName", SubGroupName);
        SubGroupdata.append("GroupID", GroupID);
        $.confirm({
            title: 'Add New SubGroup!',
            content: 'Are you sure to Add New SubGroup?',
            buttons: {
                confrim: function() {
                    $.ajax({
                        type: "POST",
                        url: "@Url.Action("AddSubGroup", "Customer")",
                        data: SubGroupdata,
                        cache: false,
                        processData: false,
                        contentType: false,
                        success: function(data) {
                            if (data == "true") {
                                closemodal();
                                window.location = '@Url.Action("NewCustomer", "Customer")';
                            }
                        },
                        error: function() {

                        },
                    });
                },
                cancel: function() { }
            }
        });

    }
    function addzonedata() {
        var Name = $("#zonename").val();
        var zonedata = {};
        zonedata = new FormData();
        zonedata.append("Name", Name);
        $.confirm({
            title: 'Add New Zone!',
            content: 'Are you sure to Add New Zone?',
            buttons: {
                confrim: function() {
                    $.ajax({
                        type: "POST",
                        url: "@Url.Action("AddZone", "Customer")",
                        data: zonedata,
                        cache: false,
                        processData: false,
                        contentType: false,
                        success: function(data) {
                            if (data == "true") {
                                closemodal();
                                window.location = '@Url.Action("NewCustomer", "Customer")';
                            }
                        },
                        error: function() {

                        },
                    });
                },
                cancel: function() { }
            }
        });

    }
    function addbusinesstypedata() {
        var TypeName = $("#businesstype").val();
        var businesstypedata = {};
        businesstypedata = new FormData();
        businesstypedata.append("TypeName", TypeName);
        $.confirm({
            title: 'Add New Business Type!',
            content: 'Are you sure to Add New Business Type?',
            buttons: {
                confrim: function() {
                    $.ajax({
                        type: "POST",
                        url: "@Url.Action("AddBusinessType", "Customer")",
                        data: businesstypedata,
                        cache: false,
                        processData: false,
                        contentType: false,
                        success: function(data) {
                            if (data == "true") {
                                closemodal();
                                window.location = '@Url.Action("NewCustomer", "Customer")';
                            }
                        },
                        error: function() {

                        },
                    });
                },
                cancel: function() { }
            }
        });

    }
    function addsalesmandata() {
        var Name = $("#salesmanname").val();
        var Address = $("#salesmanaddress").val();
        var City = $("#salesmancity").val();
        var State = $("#salesmanstate").val();
        var Phone = $("#salesmanPhone").val();
        var Mobile = $("#salesmanmobile").val();
        var Email = $("#salesmanemail").val();
        var Country = $("#salesmancountry").val();
        var salesmandata = {};
        salesmandata = new FormData();
        salesmandata.append("Name", Name);
        salesmandata.append("Address", Address);
        salesmandata.append("City", City);
        salesmandata.append("State", State);
        salesmandata.append("Phone", Phone);
        salesmandata.append("Mobile", Mobile);
        salesmandata.append("Email", Email);
        salesmandata.append("Country", Country);
        $.confirm({
            title: 'Add New SalesMan!',
            content: 'Are you sure to Add New SalesMan?',
            buttons: {
                confrim: function() {
                    $.ajax({
                        type: "POST",
                        url: "@Url.Action("AddSalesman", "Customer")",
                        data: salesmandata,
                        cache: false,
                        processData: false,
                        contentType: false,
                        success: function(data) {
                            if (data == "true") {
                                closemodal();
                                window.location = '@Url.Action("NewCustomer", "Customer")';
                            }
                        },
                        error: function() {

                        },
                    });
                },
                cancel: function() { }
            }
        });

    }
    function addshipmentpurchasedata() {
        var Type = $("#ShippedType").val();
        var CreateDate = $("#Shippeddate").val();
        var ShipNumber = $("#ShipNumber").val();
        var Reference = $("#Reference").val();
        var shipmentpurchasedata = {};
        shipmentpurchasedata = new FormData();
        shipmentpurchasedata.append("Type", Type);
        shipmentpurchasedata.append("CreateDate", CreateDate);
        shipmentpurchasedata.append("ShipNumber", ShipNumber);
        shipmentpurchasedata.append("Reference", Reference);

        $.confirm({
            title: 'Add New Shipped Via!',
            content: 'Are you sure to Add New Shipped Via?',
            buttons: {
                confrim: function() {
                    $.ajax({
                        type: "POST",
                        url: "@Url.Action("AddShipmentPurchase", "Customer")",
                        data: shipmentpurchasedata,
                        cache: false,
                        processData: false,
                        contentType: false,
                        success: function(data) {
                            if (data == "true") {
                                closemodal();
                                window.location = '@Url.Action("NewCustomer", "Customer")';
                            }
                        },
                        error: function() {

                        },
                    });
                },
                cancel: function() { }
            }
        });

    }
    function addroutedata() {
        var RouteName = $("#routename").val();
        var CreateDate = $("#routeCreateDate").val();
        var InitialLocation = $("#InitialLocation").val();
        var DesignationLocation = $("#DesignationLocation").val();
        var routedata = {};
        routedata = new FormData();
        routedata.append("RouteName", RouteName);
        routedata.append("CreateDate", CreateDate);
        routedata.append("InitialLocation", InitialLocation);
        routedata.append("DesignationLocation", DesignationLocation);

        $.confirm({
            title: 'Add New Route!',
            content: 'Are you sure to Add New Route?',
            buttons: {
                confrim: function() {
                    $.ajax({
                        type: "POST",
                        url: "@Url.Action("AddRoute", "Customer")",
                        data: routedata,
                        cache: false,
                        processData: false,
                        contentType: false,
                        success: function(data) {
                            if (data == "true") {
                                closemodal();
                                window.location = '@Url.Action("NewCustomer", "Customer")';
                            }
                        },
                        error: function() {

                        },
                    });
                },
                cancel: function() { }
            }
        });

    }
    function adddriverdata() {
        var Name = $("#drivername").val();
        var Email = $("#driverEmail").val();
        var Mobile = $("#driverMobile").val();
        var Phone = $("#driverPhone").val();
        var City = $("#driverCity").val();
        var Country = $("#driverCountry").val();
        var DrivingLicenseNumber = $("#driverDrivingLicenseNumber").val();
        var RegisteredOn = $("#driverRegisteredOn").val();
        var VehicleNumber = $("#driverVehicleNumber").val();
        var Address = $("#driverAddress").val();
        var Address1 = $("#driverAddress1").val();
        var driverdata = {};
        driverdata = new FormData();
        driverdata.append("Name", Name);
        driverdata.append("Email", Email);
        driverdata.append("Mobile", Mobile);
        driverdata.append("Phone", Phone);
        driverdata.append("City", City);
        driverdata.append("Country", Country);
        driverdata.append("DrivingLicenseNumber", DrivingLicenseNumber);
        driverdata.append("RegisteredOn", RegisteredOn);
        driverdata.append("VehicleNumber", VehicleNumber);
        driverdata.append("Address", Address);
        driverdata.append("Address1", Address1);

        $.confirm({
            title: 'Add New Route!',
            content: 'Are you sure to Add New Route?',
            buttons: {
                confrim: function() {
                    $.ajax({
                        type: "POST",
                        url: "@Url.Action("AddDriver", "Customer")",
                        data: driverdata,
                        cache: false,
                        processData: false,
                        contentType: false,
                        success: function(data) {
                            if (data == "true") {
                                closemodal();
                                window.location = '@Url.Action("NewCustomer", "Customer")';
                            }
                        },
                        error: function() {

                        },
                    });
                },
                cancel: function() { }
            }
        });

    }
    function addpricingdata() {
        $.confirm({
            title: 'Add New Pricing!',
            content: 'Are you sure to Add New Pricing?',
            buttons: {
                confrim: function() {

                    var Name = $("#pricingname").val();
                    var pricingdata = {};
                    pricingdata = new FormData();
                    pricingdata.append("Name", Name);
                    $.ajax({
                        type: "POST",
                        url: "@Url.Action("Addpricing", "Customer")",
                        data: pricingdata,
                        cache: false,
                        processData: false,
                        contentType: false,
                        success: function(data) {
                            if (data == "true") {
                                closemodal();
                                window.location = '@Url.Action("NewCustomer", "Customer")';
                            }
                        },
                        error: function() {

                        },
                    });
                },
                cancel: function() { }
            }
        });

    }
    function addpaymenttermsdata() {
        $.confirm({
            title: 'Add New PaymentTerm!',
            content: 'Are you sure to Add New PaymentTerm?',
            buttons: {
                confrim: function() {

                    var Name = $("#pyementtermsname").val();
                    var paymenttermsdata = {};
                    paymenttermsdata = new FormData();
                    paymenttermsdata.append("Name", Name);
                    $.ajax({
                        type: "POST",
                        url: "@Url.Action("Addpaymentterms", "Customer")",
                        data: paymenttermsdata,
                        cache: false,
                        processData: false,
                        contentType: false,
                        success: function(data) {
                            if (data == "true") {
                                closemodal();
                                window.location = '@Url.Action("NewCustomer", "Customer")';
                            }
                        },
                        error: function() {

                        },
                    });
                },
                cancel: function() { }
            }
        });

    }
    function UpdateExistingCustomer() {
        var id = $("#customerinformationid").val();

        var customercode = $("#txtcustomercode").val();
        var balance = $("#txtbalance").val();
        var company = $("#CompanyInput").val();
        var gender = $("#txtgender").val();
        var firstname = $("#txtFirstName").val();
        var lastname = $("#txtLastName").val();
        var streetnumber = $("#StretNumber").val();
        var streetnumber2 = $("#streetNumber").val();
        var suite = $("#suite").val();
        var city = $("#txtcity").val();
        var customerstateid = $("#state").val();
        var zipcode = $("#txtzipcode").val();
        var country = $("#Country").val();
        var checkAddress;
        if ($("#CheckAdress").prop('checked') == true) {
            checkAddress = true;
        }
        else {
            checkAddress = false;
        }
        var phone = $("#phonenumber").val();
        var fax = $("#txtfax").val();
        var cell = $("#txtcell").val();
        var providerid = $("#ProviderID").val();
        var customertypeid = $("#customertype").val();
        var other = $("#other").val();
        var owneraddress = $("#txtowneraddress").val();
        var vehicleNumber = $("#txtvehiclenumber").val();
        var email = $("#email").val();
        var website = $("#Website").val();
        var dob = $("#txtdob").val();
        var taxIdfein = $("#Taxidfein").val();
        var stateIdnumber = $("#Stateidnumber").val();
        var ssn = $("#Ssn").val();
        var tobaccoLicenseNumber = $("#TobaccoLiscenese").val();
        var vendor = $("#vendor").val();
        var drivingLicenseNumber = $("#txtdrivingnumber").val();
        var drivingLicenseStateId = $("#txtdrivinglicensestate").val();
        var cigaretteLicenseNumber = $("#txtcigarettelicensenumber").val();
        var dea = $("#dea").val();
        var authorized;
        if ($("#Authorized").prop('checked') == true) {
            authorized = true;
        }
        else {
            authorized = false;
        }
        var memo = $("#memo").val();
        var groupId = $("#Group").val();
        var subGroupId = $("#SubGroup").val();
        var zoneId = $("#Zone").val();
        var businessTypeId = $("#BusinessType").val();
        var salesmanId = $("#SalesMan").val();
        var shippedViaId = $("#ShippedVia").val();
        var routeId = $("#Route").val();
        var routeDeliveryDay = $("#routedeliveryday").val();
        var driverId = $("#Driver").val();
        var outOfStateCustomer;
        if ($("#txtOutOfstateCustomer").prop('checked') == true) {
            outOfStateCustomer = true;
        }
        else {
            outOfStateCustomer = false;
        }
        var addtoMaillingList;
        if ($("#txtAddToMailingList").prop('checked') == true) {
            addtoMaillingList = true;
        }
        else {
            addtoMaillingList = false;
        }
        var addtoemailTextList;
        if ($("#txtaddtoemailtextlist").prop('checked') == true) {
            addtoemailTextList = true;
        }
        else {
            addtoemailTextList = false;
        }
        var rejectPromotion;
        if ($("#txtrejectpromotion").prop('checked') == true) {
            rejectPromotion = true;
        }
        else {
            rejectPromotion = false;
        }
        var viewInvoicePrevBalance;
        if ($("#txtViewInvoicePrevBalance").prop('checked') == true) {
            viewInvoicePrevBalance = true;
        }
        else {
            viewInvoicePrevBalance = false;
        }
        var viewRetailandDiscount;
        if ($("#txtViewRetailandDiscount").prop('checked') == true) {
            viewRetailandDiscount = true;
        }
        else {
            viewRetailandDiscount = false;
        }
        var barcodeid = $("#txtbarcode").val();
        var defaultInvoiceCopies = $("#txtdefaultinvoicecopies").val();
        var specialInvoiceCustom;
        if ($("#txtSpecialInvoiceCustom").prop('checked') == true) {
            specialInvoiceCustom = true;
        }
        else {
            specialInvoiceCustom = false;
        }
        var shiptoReferenceId = $("#ShipToReference").val();
        var useDefaultInvMemo;
        if ($("#defaultinvmemo").prop('checked') == true) {
            useDefaultInvMemo = true;
        }
        else {
            useDefaultInvMemo = false;
        }
        //billinginfo
        var IsTaxExempt = $("#txttaxexempt").is(':checked');
        var PricingId = $("#txtpricingid").val();
        var RetailPlusPercentage = $("#txtretailpluspercentage").val();
        var RetailPlus = $("#txtretailplus").val();
        var IsGetSalesDiscounts = $("#txtisgetsalesdiscounts").is(':checked');
        var IsOutOfStateCustomer = $("#txtisoutofstatecustomer").is(':checked');
        var AdditionalInvoiceCharge = $("#txtadditionalinvoicecharge").val();
        var AdditionalInvoiceDiscount = $("#txtadditionalinvoicediscount").val();
        var ScheduleMessage = $("#txtschedulemessage").val();
        var ScheduleMessageFromDate = $("#txtschedulemessagefromdate").val();
        var ScheduleMessageToDate = $("#txtschedulemessagetodate").val();
        var PaymentTermsId = $("#paymenttermsid").val();
        var CreditLimit = $("#creditlimit").val();
        var IsCreditHold = $("#txtcredithold").is(':checked');
        var IsBillToBill = $("#txtbilltobill").is(':checked');
        var IsNoCheckAccepted = $("#txtnocheckaccepted").is(':checked');
        var IsExclude = $("#txtexclude").is(':checked');
        var ThirdPartyCheckCharge = $("#txtthirdpartycheckcharge").val();
        var IsCashBackBalance = $("#txtiscashbackbalance").is(':checked');
        var CashBackBalance = $("#txtcashbackbalance").val();
        var IsPopupMessage = $("#txtispopupmessage").is(':checked');
        var PopupMessage = $("#txtpopupmessage").val();
        var alldata = {};
        alldata = new FormData();
        alldata.append("Id", id);
        alldata.append("CustomerCode", customercode);
        alldata.append("Balance", balance);
        alldata.append("Company", company);
        alldata.append("Gender", gender);
        alldata.append("FirstName", firstname);
        alldata.append("LastName", lastname);
        alldata.append("Street", streetnumber);
        alldata.append("BusinessAddress", streetnumber2);
        alldata.append("suite", suite);
        alldata.append("City", city);
        alldata.append("StateId", customerstateid);
        alldata.append("Zip", zipcode);
        alldata.append("Country", country);
        alldata.append("CheckAddress", checkAddress);
        alldata.append("Phone", phone);
        alldata.append("Fax", fax);
        alldata.append("Cell ", cell);
        alldata.append("ProviderId", providerid);
        alldata.append("CustomerTypeId", customertypeid);
        alldata.append("Other", other);
        alldata.append("OwnerAddress", owneraddress);
        alldata.append("VehicleNumber", vehicleNumber);
        alldata.append("Email", email);
        alldata.append("Website", website);
        alldata.append("Dob", dob);
        alldata.append("TaxIdfein", taxIdfein);
        alldata.append("StateIdnumber", stateIdnumber);
        alldata.append("Ssn", ssn);
        alldata.append("TobaccoLicenseNumber", tobaccoLicenseNumber);
        alldata.append("Vendor", vendor);
        alldata.append("DrivingLicenseNumber", drivingLicenseNumber);
        alldata.append("DrivingLicenseStateId", drivingLicenseStateId);
        alldata.append("CigaretteLicenseNumber", cigaretteLicenseNumber);
        alldata.append("Dea", dea);
        alldata.append("Authorized", authorized);
        alldata.append("Memo", memo);
        alldata.append("CustomerClassification.GroupId", groupId);
        alldata.append("CustomerClassification.SubGroupId", subGroupId);
        alldata.append("CustomerClassification.ZoneId", zoneId);
        alldata.append("CustomerClassification.BusinessTypeId", businessTypeId);
        alldata.append("CustomerClassification.SalesmanId", salesmanId);
        alldata.append("CustomerClassification.ShippedViaId", shippedViaId);
        alldata.append("CustomerClassification.RouteId", routeId);
        alldata.append("CustomerClassification.RouteDeliveryDay", routeDeliveryDay);
        alldata.append("CustomerClassification.DriverId", driverId);
        alldata.append("CustomerClassification.OutOfStateCustomer", outOfStateCustomer);
        alldata.append("CustomerClassification.AddtoMaillingList", addtoMaillingList);
        alldata.append("CustomerClassification.AddtoemailTextList", addtoemailTextList);
        alldata.append("CustomerClassification.RejectPromotion", rejectPromotion);
        alldata.append("CustomerClassification.ViewInvoicePrevBalance", viewInvoicePrevBalance);
        alldata.append("CustomerClassification.ViewRetailandDiscount", viewRetailandDiscount);
        alldata.append("CustomerClassification.BarCodeId", barcodeid);
        alldata.append("CustomerClassification.DefaultInvoiceCopies", defaultInvoiceCopies);
        alldata.append("CustomerClassification.SpecialInvoiceCustom", specialInvoiceCustom);
        alldata.append("CustomerClassification.ShiptoReferenceId", shiptoReferenceId);
        alldata.append("CustomerClassification.UseDefaultInvMemo", useDefaultInvMemo);
        alldata.append("CustomerClassification.CustomerInfoId", id);
        alldata.append("CustomerClassification.CustomerCode", customercode);
        ///billinginfo
        alldata.append("CustomerBillingInfo.IsTaxExempt", IsTaxExempt);
        alldata.append("CustomerBillingInfo.PricingId", PricingId);
        alldata.append("CustomerBillingInfo.RetailPlusPercentage", RetailPlusPercentage);
        alldata.append("CustomerBillingInfo.RetailPlus", RetailPlus);
        alldata.append("CustomerBillingInfo.IsGetSalesDiscounts", IsGetSalesDiscounts);
        alldata.append("CustomerBillingInfo.IsOutOfStateCustomer", IsOutOfStateCustomer);
        alldata.append("CustomerBillingInfo.AdditionalInvoiceCharge", AdditionalInvoiceCharge);
        alldata.append("CustomerBillingInfo.AdditionalInvoiceDiscount", AdditionalInvoiceDiscount);
        alldata.append("CustomerBillingInfo.ScheduleMessage", ScheduleMessage);
        alldata.append("CustomerBillingInfo.ScheduleMessageFromDate", ScheduleMessageFromDate);
        alldata.append("CustomerBillingInfo.ScheduleMessageToDate", ScheduleMessageToDate);
        alldata.append("CustomerBillingInfo.PaymentTermsId", PaymentTermsId);
        alldata.append("CustomerBillingInfo.CreditLimit", CreditLimit);
        alldata.append("CustomerBillingInfo.IsCreditHold", IsCreditHold);
        alldata.append("CustomerBillingInfo.IsBillToBill", IsBillToBill);
        alldata.append("CustomerBillingInfo.IsNoCheckAccepted", IsNoCheckAccepted);
        alldata.append("CustomerBillingInfo.IsExclude", IsExclude);
        alldata.append("CustomerBillingInfo.ThirdPartyCheckCharge", ThirdPartyCheckCharge);
        alldata.append("CustomerBillingInfo.IsCashBackBalance", IsCashBackBalance);
        alldata.append("CustomerBillingInfo.CashBackBalance", CashBackBalance);
        alldata.append("CustomerBillingInfo.IsPopupMessage", IsPopupMessage);
        alldata.append("CustomerBillingInfo.PopupMessage", PopupMessage);


        $.confirm({
            title: 'Update Existing Customer!',
            content: 'Are you sure to update existing customer?',
            buttons: {
                confirm: function() {
                    $.ajax({
                        type: "POST",
                        url: "@Url.Action("EditCustomerInformation", "Customer")",
                        data: alldata,
                        cache: false,
                        processData: false,
                        contentType: false,
                        success: function(data) {
                            if (data == "true") {
                                window.location = '@Url.Action("NewCustomer", "Customer")';
                            }
                        },
                        error: function() {

                        },
                    });
                },
                cancel: function() {
                },
            }
        });

    }
    $("#searchbutton").on('click', function() {
        var companyname = $("#searchcompany").val();
        $.ajax({
            type: "GET",
            url: "@Url.Action("SearchDataByCompanyName", "Customer")",
            data: {
                name: companyname
            },
            dataType: "json",
            success: function(data) {
                if (data != null) {

                    var iconhtml = '';
                    iconhtml += '<img class="hide-icon" src="../images/attach.png" style="width:50px" title="Attachments" />';
                    iconhtml += '<img class="hide-icon" src="../images/delete.png" style="width:50px" title="Delete" onclick="DeleteCustomer()" />';
                    iconhtml += '<img class="hide-icon saveexisting" src="../images/edit.png" style="width:50px" title="Edit" onclick="UpdateExistingItems()" />';
                    iconhtml += '<img class="hide-icon" src="../images/printer.png" style="width:50px" title="Print" />';
                    $("#defaultlisticons").append(iconhtml);

                    var itennumberhtml = '';
                    itennumberhtml += '<h3>';
                    itennumberhtml += '<label id="itemlabel">Customer Number:</label><span id="customernumberfound" class="itemnumberbox di"></span></br>';
                    itennumberhtml += '<label id="qtylabel" class="mg-t-2">Prev. Balance:</label><span id="prebalance" class="itemnumberbox di ml-2"></span></br>';
                    itennumberhtml += ' </h3>';
                    $("#existingitemnumber").append(itennumberhtml);



                    $("#customerinformationid").val(data.id)
                    $("#customernumberfound").val(data.customerCode)
                    //$("#txtcustomercode").html("CustomerNumber:" + data.customerCode);
                    // $("#txtbalance").val(data.balance);
                    $("#prebalance").val(data.balance);
                    $("#companyname").val(data.company);
                    if (data.gender != null) {
                        $('#txtgender').val(data.gender).attr("selected", "selected");
                    }
                    $("#txtFirstName").val(data.firstName);
                    $("#txtLastName").val(data.lastName);
                    $("#StretNumber").val(data.street);
                    $("#streetNumber").val(data.businessAddress);
                    $("#suite").val(data.suite);
                    $("#txtcity").val(data.city);
                    if (data.stateId != null) {
                        $('#state').val(data.stateId).attr("selected", "selected");
                    }
                    $("#txtzipcode").val(data.zip);
                    $("#Country").val(data.country);
                    if (data.checkAddress) {
                        $("#CheckAdress").prop("checked", true)
                    }
                    else {
                        $("#CheckAdress").prop("unchecked", false)
                    }
                    $("#phonenumber").val(data.phone);
                    $("#txtfax").val(data.fax);
                    $("#txtcell").val(data.cell);
                    if (data.providerId != null) {
                        $('#ProviderID').val(data.providerId).attr("selected", "selected");
                    }
                    if (data.customerTypeId != null) {
                        $('#customertype').val(data.customerTypeId).attr("selected", "selected");
                    }
                    $("#other").val(data.other);
                    $("#txtowneraddress").val(data.ownerAddress);
                    $("#txtvehiclenumber").val(data.vehicleNumber);
                    $("#email").val(data.email);
                    $("#Website").val(data.website);
                    $("#txtdob").val(data.dob);
                    $("#Taxidfein").val(data.taxIdfein);
                    $("#Stateidnumber").val(data.stateIdnumber);
                    $("#Ssn").val(data.ssn);
                    $("#TobaccoLiscenese").val(data.tobaccoLicenseNumber);
                    $("#vendor").val(data.vendor);
                    $("#txtdrivingnumber").val(data.drivingLicenseNumber);
                    if (data.drivingLicenseStateId != null) {
                        $('#txtdrivinglicensestate').val(data.drivingLicenseStateId).attr("selected", "selected");
                    }
                    $("#txtcigarettelicensenumber").val(data.cigaretteLicenseNumber);
                    $("#dea").val(data.dea);
                    if (data.authorized) {
                        $("#Authorized").prop("checked", true)
                    }
                    else {
                        $("#Authorized").prop("unchecked", false)
                    }
                    $("#memo").val(data.memo);
                    if (data.customerClassification.groupId != null) {
                        $('#Group').val(data.customerClassification.groupId).attr("selected", "selected");
                    }
                    if (data.customerClassification.subGroupId != null) {
                        $('#SubGroup').val(data.customerClassification.subGroupId).attr("selected", "selected");
                    }
                    if (data.customerClassification.zoneId != null) {
                        $('#Zone').val(data.customerClassification.zoneId).attr("selected", "selected");
                    }
                    if (data.customerClassification.businessTypeId != null) {
                        $('#BusinessType').val(data.customerClassification.businessTypeId).attr("selected", "selected");
                    }
                    if (data.customerClassification.salesmanId != null) {
                        $('#SalesMan').val(data.customerClassification.salesmanId).attr("selected", "selected");
                    }
                    if (data.customerClassification.shippedViaId != null) {
                        $('#ShippedVia').val(data.customerClassification.shippedViaId).attr("selected", "selected");
                    }
                    if (data.customerClassification.routeId != null) {
                        $('#Route').val(data.customerClassification.routeId).attr("selected", "selected");
                    }
                    if (data.customerClassification.routeDeliveryDay != null) {
                        $('#routedeliveryday').val(data.customerClassification.routedeliveryday).attr("selected", "selected");
                    }
                    if (data.customerClassification.driverId != null) {
                        $('#Driver').val(data.customerClassification.driverId).attr("selected", "selected");
                    }
                    if (data.customerClassification.outOfStateCustomer) {
                        $("#txtOutOfstateCustomer").prop("checked", true)
                    }
                    else {
                        $("#txtOutOfstateCustomer").prop("unchecked", false)
                    }
                    if (data.customerClassification.addtoMaillingList) {
                        $("#txtAddToMailingList").prop("checked", true)
                    }
                    else {
                        $("#txtAddToMailingList").prop("unchecked", false)
                    }
                    if (data.customerClassification.addtoemailTextList) {
                        $("#txtaddtoemailtextlist").prop("checked", true)
                    }
                    else {
                        $("#txtaddtoemailtextlist").prop("unchecked", false)
                    }
                    if (data.customerClassification.rejectPromotion) {
                        $("#txtrejectpromotion").prop("checked", true)
                    }
                    else {
                        $("#txtrejectpromotion").prop("unchecked", false)
                    }
                    if (data.customerClassification.viewInvoicePrevBalance) {
                        $("#txtViewInvoicePrevBalance").prop("checked", true)
                    }
                    else {
                        $("#txtViewInvoicePrevBalance").prop("unchecked", false)
                    }
                    if (data.customerClassification.viewRetailandDiscount) {
                        $("#txtViewRetailandDiscount").prop("checked", true)
                    }
                    else {
                        $("#txtViewRetailandDiscount").prop("unchecked", false)
                    }
                    if (data.customerClassification.barCodeId != null) {

                        $('#txtbarcode').val(data.customerClassification.barCodeId).attr("selected", "selected");
                    }
                    $("#txtdefaultinvoicecopies").val(data.customerClassification.defaultInvoiceCopies);
                    if (data.customerClassification.specialInvoiceCustom) {
                        $("#txtSpecialInvoiceCustom").prop("checked", true)
                    }
                    else {
                        $("#txtSpecialInvoiceCustom").prop("unchecked", false)
                    }
                    if (data.customerClassification.shiptoReferenceId != null) {
                        $('#ShipToReference').val(data.customerClassification.shiptoReferenceId).attr("selected", "selected");
                    }
                    if (data.customerClassification.useDefaultInvMemo) {
                        $("#defaultinvmemo").prop("checked", true)
                    }
                    else {
                        $("#defaultinvmemo").prop("unchecked", false)
                    }
                    $("#txtOtherReferenceNumber").val(data.customerClassification.invoiceMemo);
                    $("#comapnyname").val(data.customerClassification.otherCustomerReference);
                    //billinginfodata
                    if (data.customerBillingInfo.isTaxExempt) {
                        $("#txttaxexempt").prop("checked", true)
                    }
                    else {
                        $("#txttaxexempt").prop("unchecked", false)
                    }
                    if (data.customerBillingInfo.pricingId != null) {
                        $('#txtpricingid').val(data.customerBillingInfo.pricingId).attr("selected", "selected");
                    }
                    if (data.customerBillingInfo.isGetSalesDiscounts) {
                        $("#txtisgetsalesdiscounts").prop("checked", true)
                    }
                    else {
                        $("#txtisgetsalesdiscounts").prop("unchecked", false)
                    }
                    if (data.customerBillingInfo.isOutOfStateCustomer) {
                        $("#txtisoutofstatecustomer").prop("checked", true)
                    }
                    else {
                        $("#txtisoutofstatecustomer").prop("unchecked", false)
                    }
                    $("#txtretailpluspercentage").val(data.customerBillingInfo.retailPlusPercentage);
                    $("#txtretailplus").val(data.customerBillingInfo.retailPlus);
                    $("#txtadditionalinvoicecharge").val(data.customerBillingInfo.additionalInvoiceCharge);
                    $("#txtadditionalinvoicediscount").val(data.customerBillingInfo.additionalInvoiceDiscount);
                    $("#txtschedulemessagefromdate").val(data.customerBillingInfo.scheduleMessageFromDate);
                    $("#txtschedulemessagetodate").val(data.customerBillingInfo.scheduleMessageToDate);
                    $("#txtschedulemessage").val(data.customerBillingInfo.scheduleMessage);
                    if (data.customerBillingInfo.paymentTermsId != null) {
                        $('#paymenttermsid').val(data.customerBillingInfo.paymentTermsId).attr("selected", "selected");
                    }
                    $("#creditlimit").val(data.customerBillingInfo.creditLimit);
                    if (data.customerBillingInfo.isCreditHold) {
                        $("#txtcredithold").prop("checked", true)
                    }
                    else {
                        $("#txtcredithold").prop("unchecked", false)
                    }
                    if (data.customerBillingInfo.isBillToBill) {
                        $("#txtbilltobill").prop("checked", true)
                    }
                    else {
                        $("#txtbilltobill").prop("unchecked", false)
                    }
                    if (data.customerBillingInfo.isNoCheckAccepted) {
                        $("#txtnocheckaccepted").prop("checked", true)
                    }
                    else {
                        $("#txtnocheckaccepted").prop("unchecked", false)
                    }
                    if (data.customerBillingInfo.isExclude) {
                        $("#txtexclude").prop("checked", true)
                    }
                    else {
                        $("#txtexclude").prop("unchecked", false)
                    }
                    $("#txtthirdpartycheckcharge").val(data.customerBillingInfo.thirdPartyCheckCharge);
                    if (data.customerBillingInfo.isCashBackBalance) {
                        $("#txtiscashbackbalance").prop("checked", true)
                    }
                    else {
                        $("#txtiscashbackbalance").prop("unchecked", false)
                    }
                    $("#txtcashbackbalance").val(data.customerBillingInfo.cashBackBalance);
                    if (data.customerBillingInfo.isPopupMessage) {
                        $("#txtispopupmessage").prop("checked", true)
                    }
                    else {
                        $("#txtispopupmessage").prop("unchecked", false)
                    }
                    $("#txtpopupmessage").val(data.customerBillingInfo.popupMessage);
                    $("#editicon").show();
                    $("#deleteicon").show();
                    $("#addicon").hide();
                }
            },
            error: function() {

            },
        });
    });
    $("#editicon").on('click', function() {

    });


    $("#deleteicon").on('click', function() {

    });

    //$("#infotab").on('click', function () {
    //    $("#panelheading").text("Customers");
    //});
    //$("#classificationtab").on('click', function () {
    //    $("#panelheading").text("Customer Classification");
    //});
    //$("#billinginfotab").on('click', function () {
    //    $("#panelheading").text("Customer Billing Info");
    //});

    //$("#saledatatab").on('click', function () {
    //    $("#panelheading").text("Sales");
    //});
    //$("#paymentdatatab").on('click', function () {
    //    $("#panelheading").text("Payment");
    //});
    //$("#accounthistorydatatab").on('click', function () {
    //    $("#panelheading").text("Account History");
    //});

    $("#paymentdatatab").on('click', function () {
        debugger;
         // for Clear Old Table Data
        var checktable = $('#invoicepaymenttable').dataTable();
        checktable.fnClearTable();
        checktable.fnDestroy();

      var CustomerId = $('#customerinformationid').val();
       if(CustomerId !=""){
        $.ajax({
        type: "GET",
        url: '@Url.Action("GetPaymentsInvoices", "Customer")',
        data: { CustomerId: CustomerId },
        dataType: 'json',
        success: function (data) {
            debugger;
              var inner = '';
              $.each(data, function (val, text) {
                  debugger;
                          // Invoice Date Formating
                        var Paidd = new Date(text.paidDate);
                          var paidDate = Paidd.getDate() + '-' + (Paidd.getMonth()+1) + '-' + Paidd.getFullYear();

                           // Printed Date Formating
                          var printedd = new Date(text.holdDate);
                          var holdDate = printedd.getDate() + '-' + (printedd.getMonth()+1) + '-' +  printedd.getFullYear();

                         var SalemanName =  text.salemanName !== null ? (SalemanName = text.salemanName) : (SalemanName = "N/A");
                        var Change = text.change !== null ? (Change = text.change) : (Change = 0);

                        //Invoice Row   
                        inner = '';
                        inner += '<tr>';
                        inner += '<td> ' + paidDate + ' </td>';
                        inner += '<td> ' + text.time + ' </td>';
                        inner += '<td> ' + holdDate + ' </td>';
                        inner += '<td> ' + SalemanName + ' </td>';
                        inner += '<td> ' + text.paymentTypeName + ' </td>';
                        inner += '<td> ' + text.chequeNumber + ' </td>';
                        inner += '<td> ' + text.amountPaid + ' </td>';
                        inner += '<td> ' + text.amountAllocate + ' </td>';
                        inner += '<td> ' + Change + ' </td>';
                        inner += '</tr>';
                        $('#invoicepaymenttable > tbody:last-child').append(inner);

                    }); 
       
       
                 
        },
        error: function (xhr, status, error) {
            var errorMessage = xhr.status + ': ' + xhr.statusText
        },
    });
     }
    });

    $("#saledatatab").on('click', function () {
      debugger;
       // for Clear Old Table Data
        var checktable = $('#saleinvoicestable').dataTable();
        checktable.fnClearTable();
        checktable.fnDestroy();

       var CustomerId = $('#customerinformationid').val();
       if(CustomerId !=""){
        $.ajax({
        type: "GET",
        url: '@Url.Action("GetSalesInvoices", "Customer")',
        data: { CustomerId: CustomerId },
        dataType: 'json',
        success: function (data) {
            debugger;
              var inner = '';
              $.each(data, function (val, text) {
                  debugger;
                          // Invoice Date Formating
                          var invd = new Date(text.invoiceDate);
                          var InvDate = invd.getDate() + '-' + (invd.getMonth()+1) + '-' + invd.getFullYear();

                           // Printed Date Formating
                          var printedd = new Date(text.printedDate);
                          var PrintedDate = printedd.getDate() + '-' + (printedd.getMonth()+1) + '-' +  printedd.getFullYear();
                          var SalemanName = text.salesmanName !== null ? (SalemanName = text.salesmanName) : (SalemanName = "N/A");
                        //Invoice Row
                        inner = '';
                        inner += '<tr>';
                        inner += '<td> ' + text.invoiceNumber + ' </td>';   
                        inner += '<td> ' + InvDate + ' </td>';
                        inner += '<td> ' + PrintedDate + ' </td>';
                        inner += '<td> ' + SalemanName + ' </td>';
                        inner += '<td> ' + text.userName + ' </td>';
                        inner += '<td> ' + text.invTotal + ' </td>';
                        inner += '<td> ' + text.totalPaid + ' </td>';
                        inner += '<td> ' + text.invBalance + ' </td>';
                        inner += '</tr>';
                    $('#saleinvoicestable > tbody:last-child').append(inner);

                    }); 
       
       
                 
        },
        error: function (xhr, status, error) {
            var errorMessage = xhr.status + ': ' + xhr.statusText
        },
    });
     }
    });


    function triggerAddCustomer() {


        $("#ListappenedTabs").hide();
        var iconsavehtml = '';
        iconsavehtml += '<img class="hard-refresh" src="../images/reload.png" style="width:50px" title="Reload" onclick="ReloadPage()"/>';
        iconsavehtml += '<img class="saverecord" src="../images/save.png" style="width:50px" title="Save" onclick="SaveCustomer()"/>';
        $("#onsaveicon").append(iconsavehtml);

        $("#onsaveicon").show();
        $("#onlisticon").removeClass('di');
        $("#onlisticon").hide();
        $("#existingitemnumber").hide();

        var newitemnumberhtml = '';
        newitemnumberhtml += '<h3>';
        newitemnumberhtml += '<label id="newitemlabel">Customer Number:</label>';
        newitemnumberhtml += '<span id="newcustomercode" class="itemnumberbox di">' + '@ViewBag.CustomerCode' + '</span></br >';
        newitemnumberhtml += '</h3>';

        $("#newitemnumber").append(newitemnumberhtml);
        $("#addappendTabs").show();
        $("#newitemnumber").show();
        $("#newitems").show();
        $("#exitingitems").hide();
        $("#financial-main").hide();
        $("#supplier-main").hide();
        $("#purchase-main").hide();
        $("#sale-main").hide();
        $("#feature-main").hide();
        $("#tool-main").hide();

    };
    function ReloadPage() {
        location.reload();
    };

    function SaveCustomer() {


        var IsValid = true;
        var companyname = $("#companynameu").val();
        var gender = $("#txtgenderu").val();
        var firstname = $("#txtFirstNameu").val();
        var lastname = $("#txtLastNameu").val();
        var street1number = $("#StretNumberu").val();
        var street2number = $("#streetNumberu").val();
        var suite = $("#suiteu").val();
        var city = $("#txtcityu").val();
        var state = $("#stateu").val();
        var zipcode = $("#txtzipcodeu").val();
        var country = $("#Countryu").val();
        var ischeckedAddress = $("#CheckAdressu").is(':checked');
        var phonenumber = $("#phonenumberu").val();
        var providerid = $("#ProviderIDu").val();//
        var customertype = $("#customertypeu").val();//
        var other = $("#otheru").val();
        var ownerAddress = $("#txtowneraddressu").val();
        var vehiclenumber = $("#txtvehiclenumberu").val();
        var email = $("#emailu").val();
        var website = $("#Websiteu").val();
        var dob = $("#txtdobu").val();
        var taxidfein = $("#Taxidfeinu").val();
        var stateidnumber = $("#Stateidnumberu").val();
        var ssn = $("#Ssnu").val();
        var tobaccolicense = $("#TobaccoLisceneseu").val();
        var vendor = $("#vendoru").val();
        var drivingnumber = $("#txtdrivingnumberu").val();
        var drivingLicenseState = $("#txtdrivinglicensestateu").val();
        var cigrateLicensenumber = $("#txtcigarettelicensenumberu").val();
        var dae = $("#deau").val();
        var authorized = $("#Authorizedu").is(':checked');
        var memo = $("#memou").val();
        var fax = $("#txtfaxu").val();
        var cell = $("#txtcellu").val();
        var customerCode = $("#newcustomercodeu").text();
        ///classification
        var group = $("#Groupu").val();
        var shiptoreference = $("#ShipToReferenceu").val();
        var subgroup = $("#SubGroupu").val();
        var zone = $("#Zoneu").val();
        var bsuinesstype = $("#BusinessTypeu").val();
        var salesman = $("#SalesManu").val();
        var shippedvia = $("#ShippedViau").val();
        var route = $("#Routeu").val();
        var routedelivery = $("#routedeliverydayu").val();
        var driver = $("#Driveru").val();
        var Isoutofstatecustomer = $("#txtOutOfstateCustomeru").is(':checked');
        var Isaddtomailing = $("#txtAddToMailingListu").is(':checked');
        var Isaddtoemailext = $("#txtaddtoemailtextlistu").is(':checked');
        var IsRejectPromotion = $("#txtrejectpromotionu").is(':checked');
        var Isdefault = $("#defaultinvmemou").is(':checked');
        var otherreference = $("#txtOtherReferenceNumberu").val();
        var invoicememo = $("#txtinvoicememou").val();
        var IsviewinvoicepreBalance = $("#txtViewInvoicePrevBalanceu").is(':checked');
        var Isviewretaildiscount = $("#txtViewRetailandDiscountu").is(':checked');
        var barcode = $("#txtbarcodeu").val();
        var defaultinvoicecopies = $("#txtdefaultinvoicecopiesu").val();
        var isspecialinvoicecustomer = $("#txtSpecialInvoiceCustomu").is(':checked');
        //billinginfo
        var IsTaxExempt = $("#txttaxexemptu").is(':checked');
        var PricingId = $("#txtpricingidu").val();
        var RetailPlusPercentage = $("#txtretailpluspercentageu").val();
        var RetailPlus = $("#txtretailplusu").val();
        var IsGetSalesDiscounts = $("#txtisgetsalesdiscountsu").is(':checked');
        var IsOutOfStateCustomer = $("#txtisoutofstatecustomeru").is(':checked');
        var AdditionalInvoiceCharge = $("#txtadditionalinvoicechargeu").val();
        var AdditionalInvoiceDiscount = $("#txtadditionalinvoicediscountu").val();
        var ScheduleMessage = $("#txtschedulemessageu").val();
        var ScheduleMessageFromDate = $("#txtschedulemessagefromdateu").val();
        var ScheduleMessageToDate = $("#txtschedulemessagetodateu").val();
        var PaymentTermsId = $("#paymenttermsidu").val();
        var CreditLimit = $("#creditlimitu").val();
        var IsCreditHold = $("#txtcreditholdu").is(':checked');
        var IsBillToBill = $("#txtbilltobillu").is(':checked');
        var IsNoCheckAccepted = $("#txtnocheckacceptedu").is(':checked');
        var IsExclude = $("#txtexcludeu").is(':checked');
        var ThirdPartyCheckCharge = $("#txtthirdpartycheckchargeu").val();
        var IsCashBackBalance = $("#txtiscashbackbalanceu").is(':checked');
        var CashBackBalance = $("#txtcashbackbalanceu").val();
        var IsPopupMessage = $("#txtispopupmessageu").is(':checked');
        var PopupMessage = $("#txtpopupmessageu").val();

        if (ssn == "" || ssn == "undefined") {
            $("#ssnvalidation").text("Please Enter SSN");
            $("#ssnvalidation").show();
            $("#Ssn").focus();
            IsValid = false;
        } else {
            $("#ssnvalidation").text("").hide();
        }
        if (email == "" || email == "undefined") {
            $("#emailvalidation").text("Please Enter Email");
            $("#emailvalidation").show();
            $("#email").focus();
            IsValid = false;
        } else {
            $("#emailvalidation").text("").hide();
        }
        if (lastname == "" || lastname == "undefined") {
            $("#lastvalidation").text("Please Enter Item Name");
            $("#lastvalidation").show();
            $("#txtLastName").focus();
            IsValid = false;
        } else {
            $("#lastvalidation").text("").hide();
        }
        if (phonenumber == "" || phonenumber == "undefined") {
            $("#phnvalidation").text("Please Enter Phone Number");
            $("#phnvalidation").show();
            $("#phnLastName").focus();
            IsValid = false;
        } else {
            $("#phnvalidation").text("").hide();
        }
        if (firstname == "" || firstname == "undefined") {
            $("#fnamevalidation").text("Please Enter First Name");
            $("#fnamevalidation").show();
            $("#txtFirstName").focus();
            IsValid = false;
        } else {
            $("#fnamevalidation").text("").hide();
        }
        if (lastname == "" || lastname == "undefined") {
            $("#lnamevalidation").text("Please Enter Last Name");
            $("#lnamevalidation").show();
            $("#txtLastName").focus();
            IsValid = false;
        } else {
            $("#lnamevalidation").text("").hide();
        }
        if (companyname == "" || companyname == "undefined") {
            $("#companyvalidation").text("Please Enter Company Name");
            $("#companyvalidation").show();
            $("#companyname").focus();
            IsValid = false;
        } else {
            $("#companyvalidation").text("").hide();
        }
        if (cigrateLicensenumber == "" || cigrateLicensenumber == "undefined") {
            $("#cigrattelisencevalidation").text("Please Enter Cigratte license ID");
            $("#cigrattelisencevalidation").show();
            $("#cigrateLicensenumber").focus();
            IsValid = false;
        } else {
            $("#cigrattelisencevalidation").text("").hide();
        }
        //if (tobaccoLicenseNumber == "" || tobaccoLicenseNumber == "undefined") {
        //    $("#tobaccolisencevalidation").text("Please Enter Tobacco license ID");
        //    $("#tobaccolisencevalidation").show();
        //    $("#tobaccoLicensenumber").focus();
        //    IsValid = false;
        //} else {
        //    $("#tobaccolisencevalidation").text("").hide();
        //}
        //if (taxIdfein == "" || taxIdfein == "undefined") {
        //    $("#taxidfeinvalidation").text("Please Enter Tobacco license ID");
        //    $("#taxidfeinvalidation").show();
        //    $("#taxidfein").focus();
        //    IsValid = false;
        //} else {
        //    $("#taxidfeinvalidation").text("").hide();
        //}
        //if (stateIdnumber == "" || stateIdnumber == "undefined") {
        //    $("#stateidvalidation").text("Please Enter State ID");
        //    $("#stateidvalidation").show();
        //    $("#Stateidnumber").focus();
        //    IsValid = false;
        //} else {
        //    $("#stateidvalidation").text("").hide();
        //}





        var data = {};
        data = new FormData();
        if (IsValid) {
            data.append("Company", companyname);
            data.append("FirstName", firstname);
            data.append("LastName", lastname);
            data.append("Street", street1number);
            data.append("City", city);
            data.append("State", state);
            data.append("Zip", zipcode);
            data.append("Country", country);
            data.append("CheckAddress", ischeckedAddress);
            data.append("Phone", phonenumber);
            data.append("Fax", fax);
            data.append("Cell", cell);
            data.append("Vendor", vendor);
            data.append("ProviderId", providerid);
            //data.append("Provider",);
            data.append("Other", other);
            data.append("Email", email);
            data.append("Website", website);
            data.append("TaxIdfein", taxidfein);
            data.append("StateIdnumber", stateidnumber);
            data.append("TobaccoLicenseNumber", tobaccolicense);
            data.append("CigaretteLicenseNumber", cigrateLicensenumber);
            data.append("Dea", dae);
            data.append("Memo", memo);
            data.append("CustomerTypeId", customertype);
            data.append("Dob", dob);
            data.append("Ssn", ssn);
            data.append("DrivingLicenseNumber", drivingnumber);
            //data.append("DrivingLicenseStateId",);
            data.append("DrivingLicenseStateID", drivingLicenseState);
            data.append("OwnerAddress", ownerAddress);
            data.append("BusinessAddress", street2number);
            data.append("VehicleNumber", vehiclenumber);
            data.append("Authorized", authorized);
            data.append("CustomerCode", customerCode);
            // data.append("Balance",);
            data.append("Gender", gender);
            data.append("StateId", state);
            //data.append("AccountNumber",);
            data.append("CustomerClassification.GroupId", group);
            data.append("CustomerClassification.SubGroupId", subgroup);
            data.append("CustomerClassification.ZoneId", zone);
            data.append("CustomerClassification.BusinessTypeId", bsuinesstype);
            data.append("CustomerClassification.SalesmanId", salesman);
            data.append("CustomerClassification.ShippedViaId", shippedvia);
            data.append("CustomerClassification.RouteId", route);
            data.append("CustomerClassification.RouteDeliveryDay", routedelivery);
            data.append("CustomerClassification.DriverId", driver);
            data.append("CustomerClassification.OtherCustomerReference", otherreference);
            data.append("CustomerClassification.ShiptoReferenceId", shiptoreference);
            data.append("CustomerClassification.OutOfStateCustomer", Isoutofstatecustomer);
            data.append("CustomerClassification.AddtoMaillingList", Isaddtomailing);
            data.append("CustomerClassification.AddtoemailTextList", Isaddtoemailext);
            data.append("CustomerClassification.RejectPromotion", IsRejectPromotion);
            data.append("CustomerClassification.ViewInvoicePrevBalance", IsviewinvoicepreBalance);
            data.append("CustomerClassification.ViewRetailandDiscount", Isviewretaildiscount);
            data.append("CustomerClassification.BarCodeId", barcode);
            data.append("CustomerClassification.DefaultInvoiceCopies", defaultinvoicecopies);
            data.append("CustomerClassification.SpecialInvoiceCustom", isspecialinvoicecustomer);
            data.append("CustomerClassification.InvoiceMemo", invoicememo);
            data.append("CustomerClassification.UseDefaultInvMemo", Isdefault);
            ///billinginfo
            data.append("CustomerBillingInfo.IsTaxExempt", IsTaxExempt);
            data.append("CustomerBillingInfo.PricingId", PricingId);
            data.append("CustomerBillingInfo.RetailPlusPercentage", RetailPlusPercentage);
            data.append("CustomerBillingInfo.RetailPlus", RetailPlus);
            data.append("CustomerBillingInfo.IsGetSalesDiscounts", IsGetSalesDiscounts);
            data.append("CustomerBillingInfo.IsOutOfStateCustomer", IsOutOfStateCustomer);
            data.append("CustomerBillingInfo.AdditionalInvoiceCharge", AdditionalInvoiceCharge);
            data.append("CustomerBillingInfo.AdditionalInvoiceDiscount", AdditionalInvoiceDiscount);
            data.append("CustomerBillingInfo.ScheduleMessage", ScheduleMessage);
            data.append("CustomerBillingInfo.ScheduleMessageFromDate", ScheduleMessageFromDate);
            data.append("CustomerBillingInfo.ScheduleMessageToDate", ScheduleMessageToDate);
            data.append("CustomerBillingInfo.PaymentTermsId", PaymentTermsId);
            data.append("CustomerBillingInfo.CreditLimit", CreditLimit);
            data.append("CustomerBillingInfo.IsCreditHold", IsCreditHold);
            data.append("CustomerBillingInfo.IsBillToBill", IsBillToBill);
            data.append("CustomerBillingInfo.IsNoCheckAccepted", IsNoCheckAccepted);
            data.append("CustomerBillingInfo.IsExclude", IsExclude);
            data.append("CustomerBillingInfo.ThirdPartyCheckCharge", ThirdPartyCheckCharge);
            data.append("CustomerBillingInfo.IsCashBackBalance", IsCashBackBalance);
            data.append("CustomerBillingInfo.CashBackBalance", CashBackBalance);
            data.append("CustomerBillingInfo.IsPopupMessage", IsPopupMessage);
            data.append("CustomerBillingInfo.PopupMessage", PopupMessage);


            $.confirm({
                title: 'Save New Customer!',
                content: 'Are you sure to save new customer?',
                buttons: {
                    confirm: function() {
                        $.ajax({
                            url: '@Url.Action("NewCustomer", "Customer")',
                            type: "POST",
                            data: data,
                            async: false,
                            dataType: "json",
                            processData: false,
                            contentType: false,
                            success: function(data) {
                                //location.Reload();
                                window.location = '@Url.Action("NewCustomer", "Customer")';
                            },
                            error: function() {
                                //window.alert("hi");
                            }
                        });
                    },
                    cancel: function() {
                    },
                }
            });
        }

    }

    function DeleteCustomer() {
        var id = $("#customerinformationid").val();


        $.confirm({
            title: 'Delete Customer!',
            content: 'Are you sure to delete this customer?',
            buttons: {
                confirm: function() {
                    $.ajax({
                        type: "DELETE",
                        url: "@Url.Action("DeleteCustomerInformation", "Customer")",
                        data: {
                            id: id
                        },
                        dataType: "json",
                        success: function(data) {
                            if (data == true) {
                                window.location = '@Url.Action("NewCustomer", "Customer")';
                            }
                        }
                    });
                },
                cancel: function() {
                },
            }
        });
    }


    function GetAllZipCodes() {
        $.ajax({
            type: "GET",
            url: "@Url.ActionLink("GetListZipCode", "Customer")",
            dataType: "json",
            success: function(data) {
                if (data != null) {
                    $.each(data, function(key, value) {
                        var html = "";
                        html += '<tr id="rowid-' + value.id + '" ondblclick="zipcodeiconshow(' + value.id + ',' + (key + 1) + ');">';
                        html += '<td class="w-auto" style="font-size:17px">' + (key + 1) + '</td>';
                        html += '<td class="w-auto" style="font-size:17px">' + value.code + '</td>';
                        html += '<td class="w-auto" style="font-size:17px">' + value.city + '</td>';
                        html += '<td class="w-auto" style="font-size:17px">' + value.stateShortcut + '</td>';
                        html += '<td class="w-auto" style="font-size:17px">' + value.state + '</td>';
                        html += '</tr>';
                        $("#modalzipcodegetlisttable").append(html);
                    });
                }
            },
            error: function() { }
        });
    }
    function Addnewrowforzipcodetable() {
        var index;
        var html = "";
        var newoptionvalue = $("#stateselect").val();
        var newoptiontext = $("#stateselect option:selected").text();
        var mstatesc = newoptiontext.slice(0, 2);
        if (newoptionvalue != "Select" && newoptiontext != "Select") {
            $.ajax({
                type: "GET",
                url: "@Url.ActionLink("GetListZipCode", "Customer")",
                dataType: "json",
                success: function(data) {
                    if (data != null) {
                        index = data.length;
                        html += '<tr>';
                        html += '<td class="w-auto">' + (index + 1) + '</td>';
                        html += '<td class="w-auto" contenteditable="true" id="tablezipcodetd"></td>';
                        html += '<td class="w-auto" contenteditable="true" id="tablecitytd"></td>';
                        html += '<td class="w-auto"  id="tablestateshortcuttd">' + mstatesc + '</td>';
                        html += '<td class="w-auto"  id="tablestatetd">' + newoptiontext + '</td>';
                        html += '</tr>';
                        $("#modalzipcodegetlisttable").append(html);
                        var iconsavehtml = '';
                        iconsavehtml += '<img class="hard-refresh" src="../images/reload.png" style="width:50px" title="Reload" onclick="ReloadPage()"/>';
                        iconsavehtml += '<img class="saverecord" src="../images/save.png" style="width:50px" title="Save" onclick="Addzipcodedata()"/>';
                        $("#onaddiconclick").append(iconsavehtml);
                        $("#onaddiconclick").show();
                        $("#zipcodeonlisticon").removeClass('d-flex');
                        $("#zipcodeonlisticon").hide();
                    }
                },
                error: function() { }
            });
        }
        else {
            //alert("Sorry!. Please Select any state.")
            swal("Error!", "Please Select any state.")
        }


    }
    function Addzipcodedata() {
        var zipcode = $("#tablezipcodetd").text();
        var city = $("#tablecitytd").text();
        var stateshortcut = $("#tablestateshortcuttd").text();
        var state = $("#tablestatetd").text();
        $.confirm({
            title: "Add New ZipCode Data.",
            content: "Are you sure to want to add?",
            buttons: {
                confirm: function() {

                    var zipcodedata = {};
                    zipcodedata = new FormData();
                    zipcodedata.append("Code", zipcode);
                    zipcodedata.append("City", city);
                    zipcodedata.append("State", state);
                    zipcodedata.append("StateShortcut", stateshortcut);
                    $.ajax({
                        type: "POST",
                        url: "@Url.ActionLink("AddZipCode", "Customer")",
                        data: zipcodedata,
                        dataType: "json",
                        async: false,
                        processData: false,
                        contentType: false,
                        success: function(data) {
                            if (data == "true") {
                                $(".modal").each(function() {
                                    $(this).find("#modalzipcodegetlisttable").empty();
                                    $("#onaddiconclick").hide();
                                    $("#onaddiconclick").removeClass('d-flex');
                                    $("#zipcodeonlisticon").show();
                                });
                                $.ajax({
                                    type: "GET",
                                    url: "@Url.ActionLink("GetListZipCode", "Customer")",
                                    dataType: "json",
                                    success: function(data) {
                                        if (data != null) {
                                            $.each(data, function(key, value) {
                                                var html = "";
                                                html += '<tr id="rowid-' + value.id + '" ondblclick="zipcodeiconshow(' + value.id + ');">';
                                                html += '<td class="w-auto">' + (key + 1) + '</td>';
                                                html += '<td class="w-auto">' + value.code + '</td>';
                                                html += '<td class="w-auto">' + value.city + '</td>';
                                                html += '<td class="w-auto">' + value.stateShortcut + '</td>';
                                                html += '<td class="w-auto">' + value.state + '</td>';
                                                html += '</tr>';
                                                $("#modalzipcodegetlisttable").append(html);
                                            });
                                        }
                                    },
                                    error: function() { }
                                });
                            }
                        },
                        error: function() { }

                    });
                },
                cancel: function() { }
            }
        });
    }


    function zipcodeiconshow(id, val) {
        var sr = val;
        $.ajax({
            type: "GET",
            url: '@Url.ActionLink("ZipCodeByID", "Customer")',
            data: {
                id: id
            },
            dataType: "json",
            success: function(data) {
                if (data != null) {
                    $("#modalzipcodegetlisttable").empty();
                    var html = "";
                    html += '<tr id="rowid-' + data.id + '">';
                    html += '<td class="w-auto">' + sr + '</td>';
                    html += '<td class="w-auto" contenteditable="true" id="edittablezipcodetd">' + data.code + '</td>';
                    html += '<td class="w-auto" contenteditable="true" id="edittablecitytd">' + data.city + '</td>';
                    html += '<td class="w-auto" contenteditable="true" id="edittablestateshortcuttd">' + data.stateShortcut + '</td>';
                    html += '<td class="w-auto" contenteditable="true" id="edittablestatetd">' + data.state + '</td>';
                    html += '</tr>';
                    $("#modalzipcodegetlisttable").append(html);
                    $("#onanothericonclick").empty();
                    $("#onanothericonclick").removeClass('d-flex');
                    $("#onanothericonclick").hide();
                    var iconsavehtml = '';
                    iconsavehtml += '<img class="hide-icon" src="../images/refresh.png" style="width:50px" title="Reload" onclick="ReloadPage()"/>';
                    iconsavehtml += '<img class="hide-icon" src="../images/edit.png" style="width:50px" title="Edit" onclick="updatezipcoderow()"/>';
                    iconsavehtml += '<img class="hide-icon" src="../images/delete.png" style="width:50px" title="Delete" onclick="deletezipcoderow()"/>';
                    $("#onanothericonclick").append(iconsavehtml);
                    $("#onanothericonclick").show();
                    $("#zipcodeonlisticon").removeClass('d-flex');
                    $("#onaddiconclick").removeClass('d-flex');
                    $("#zipcodeonlisticon").hide();
                    $("#onaddiconclick").hide();
                    $("#fortablerowid").val(id);
                }
            },
            error: function() { }
        });
    }
    function updatezipcoderow() {
        var id = $("#fortablerowid").val();
        $.confirm({
            title: "Update Zipcode Record ",
            content: "Are you sure to Update this Record!",
            buttons: {
                confirm: function() {
                    var zipcode = $("#edittablezipcodetd").text();
                    var city = $("#edittablecitytd").text();
                    var stateshortcut = $("#edittablestateshortcuttd").text();
                    var state = $("#edittablestatetd").text();
                    var zipcodedata = {};
                    zipcodedata = new FormData();
                    zipcodedata.append("Id", id);
                    zipcodedata.append("Code", zipcode);
                    zipcodedata.append("City", city);
                    zipcodedata.append("State", state);
                    zipcodedata.append("StateShortcut", stateshortcut);
                    $.ajax({
                        type: "POST",
                        url: "@Url.ActionLink("ZipCodeUpdate", "Customer")",
                        data: zipcodedata,
                        dataType: "json",
                        cache: false,
                        processData: false,
                        contentType: false,
                        success: function(data) {
                            if (data == true) {
                                location.reload();
                            }
                        },
                        error: function() { }

                    });
                },
                cancel: function() {

                }
            }
        });
    }
    function deletezipcoderow() {
        var id = $("#fortablerowid").val();
        $.confirm({
            title: "Delete Zipcode Record ",
            content: "Are you sure to delete this Record!",
            buttons: {
                confirm: function() {
                    $.ajax({
                        type: "DELETE",
                        url: "@Url.ActionLink("DeleteZipCode", "Customer")",
                        data: {
                            id: id
                        },
                        dataType: "json",
                        success: function(data) {
                            if (data == true) {
                                location.reload();
                            }
                        },
                        error: function() { }

                    });
                },
                cancel: function() {

                }
            }
        });
    }
    function statelistcallfun() {
        $.ajax({
            type: "GET",
            url: "@Url.ActionLink("showstatelist", "Customer")",
            dataType: "json",
            contentType: false,
            processData: false,
            success: function(data) {
                if (data != null) {
                    $.each(data, function(val, text) {
                        var option = '';
                        option += '<option value=' + val + '>' + text.stateName + '</option>';
                        $("#stateselect").append(option);
                    });

                }
            },
            error: function() { }
        });
    }
    $("#modalzipcodesearch").on('keyup', function() {
        var value = $(this).val().toLowerCase();
        $("#modalzipcodegetlisttable tr").filter(function() {
            $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1);
        });
    });
    function getcheckboxbilltobilllist() {
        $.ajax({
            type: "GET",
            url: "@Url.ActionLink("billtobillchecklist", "Customer")",
            dataType: "json",
            success: function(data) {
                console.log(data);
                $.each(data, function(key, value) {
                    var html = "";
                    html += '<tr>';
                    html += '<td class="w-25 text-center text-primary">' + value.customerCode + '</td>';
                    html += '<td class="w-auto text-center text-primary">' + value.firstName + '&nbsp;' + value.lastName + '</td>';
                    html += '<td class="w-25 text-center"><input type="checkbox" checked="true" disabled="disabled"/></td>';
                    $("#appendbilltobillcheckboxlist").append(html);
                });
            },
            error: function() { }
        });
    }
    $("#forselectrowindex").on('keyup', function() {
        var index = $(this).val();
        var lenght = $("#billtobillcheckboxlisttable tr").index() + 1;
        if (index != null && index != 0 && index != (lenght + 1)) {
            $("#billtobillcheckboxlisttable tr").eq(index).css("background-color", "blue");
            $("#billtobillcheckboxlisttable tr").eq(index).find("td").addClass("text-white");

        }
        else {
            $("#appendbilltobillcheckboxlist").empty();
            $.ajax({
                type: "GET",
                url: "@Url.ActionLink("billtobillchecklist", "Customer")",
                dataType: "json",
                success: function(data) {
                    console.log(data);
                    $.each(data, function(key, value) {
                        var html = "";
                        html += '<tr>';
                        html += '<td class="w-25 text-center">' + value.customerCode + '</td>';
                        html += '<td class="w-auto text-center">' + value.firstName + '&nbsp;' + value.lastName + '</td>';
                        html += '<td class="w-25 text-center"><input type="checkbox" checked="true" disabled="disabled"/></td>';
                        $("#appendbilltobillcheckboxlist").append(html);
                    });
                },
                error: function() { }
            });
        }
    });
    function addbilltobillicon() {
        var html = "";
        $("#billtobillcheckbox").removeClass('col-lg-12 col-md-12 col-sm-12 col-12');
        $("#billtobillcheckbox").addClass('col-lg-10 col-md-10 col-sm-10 col-10');
        $("#forbilltobilllisticon").addClass('col-lg-2 col-md-2 col-sm-2 col-2');
        html += '<i class="mdi mdi-plus text-primary" data-bs-toggle="modal" data-bs-target="#addbilltobillcustomer"></i>';
        $("#forbilltobilllisticon").append(html);
    }
    //function forpaymentrowcolor(val) {
    //    $("#appendnewrowforpayment tr").each(function () {
    //        var rowindex = $(this).index();
    //        if (rowindex == val) {
    //            $("#appendnewrowforpayment tr").eq(val).find("td:first").css("background-color", "yellow");
    //        }
    //        else {
    //            if (rowindex % 2 != 0) {
    //                $("#appendnewrowforpayment tr").eq(rowindex).find("td:first").css("background-color", "skyblue");
    //            }
    //            else {
    //                $("#appendnewrowforpayment tr").eq(rowindex).find("td:first").css("background-color", "white");
    //            }
    //        }
    //    });

    //}
    function triggerkeup() {
        var check = $("#CompanyInput").val();
        if (check == null || check == "") {
            e = $.Event('keyup');
            $("#CompanyInput").val(' ');
            $('input').trigger(e);
        }

    }
    function GetCompaniesList() {
        var check = $("#CompanyInput").val();
        var trimStr = $.trim(check);
        var data_array = [];
        var search = trimStr;
        //var search=$("#CompanyInput").val();
        $("#companylist").empty();
        var dropdown = '';
        $.ajax({
            type: "GET",
            async: false,
            cache: false,
            url: '@Url.Action("AutoCompleteSearchCustomer", "Customer")',
            dataType: 'json',
            success: function(data) {
                $.each(data, function(index, value) {
                    if (search != '') {
                        if (value.company.toLowerCase().indexOf(search.toLowerCase()) >= 0) {
                            dropdown += '<option data-value="' + value.id + '" value="' + value.company + '"></option>';
                            let my_object = {};
                            my_object.title = value.company;
                            my_object.customerCode = value.company;
                            my_object.value = value.id;
                            data_array.push(my_object);
                        }
                    }
                    else {
                        search = ' ';
                        dropdown += '<option data-value="' + value.id + '" value="' + value.company + '"></option>';
                        let my_object = {};
                        my_object.title = value.company;
                        my_object.customerCode = value.company;
                        my_object.value = value.id;
                        data_array.push(my_object);


                    }
                });
            },
            error: function(xhr, status, error) {
                var errorMessage = xhr.status + ': ' + xhr.statusText
            },
        });
        $("#companylist").append(dropdown);

        $.each(data_array, function(index, value) {
            if (data_array[index].title == search) {
                $("#defaultlisticons").empty();
                $("#existingitemnumber").empty();
                $("#companylist").empty();
                GetCustomerByID(data_array[index].value);
            }

        });
    }
     function PrintMe(){
     window.open('@Url.Action("ExistingSaleInvoicePdf", "Customer")', '_blank');
     }
</script>
location