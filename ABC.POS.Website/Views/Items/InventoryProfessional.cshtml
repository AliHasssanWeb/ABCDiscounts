@model ABC.EFCore.Repository.Edmx.Product
@using ABC.EFCore.Repository.Edmx;
@{
    ViewData["Title"] = "InventoryProfessional";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/css/toastr.min.css" />

<script src="~/Scripts/jquery-3.4.1.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/js/toastr.min.js"></script>
<script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>
@if (TempData["Msg"] != null)
{
    <script>toastr.success("@TempData["Msg"].ToString()");</script>

}
<style>
    .bar-style {
        border-radius: 20px;
        height: 40px;
        margin-bottom: 10px;
    }

    .btn-qty {
        margin-top: 25%;
    }

    label {
        color: #00008B;
    }

    .labelred {
        color: red;
    }

    .table th, .table td {
        padding: 13px 5px;
    }

    .padding-lr {
        padding-right: 2px;
        padding-left: 2px;
    }

    .form-control {
        padding: 0;
    }
</style>
<style>
    .form-control {
        color: #00008B;
        font-weight: 500;
    }

    .panel-head {
        padding: 10px 15px;
        border-bottom: 1px solid transparent;
        border-top-left-radius: 3px;
        border-top-right-radius: 3px;
    }

    label {
        color: #00008B;
    }

    .add-style {
        color: red;
    }

    .dropadditemCategory {
        background: #e9ecef;
        opacity: 1;
        border: 0;
        outline: 1px solid #dee2e6;
        font-weight: 400;
        font-size: 0.875rem;
        border-radius: 4px;
        height: 2rem;
    }

    .progress-bar-vertical {
        width: 20px;
        min-height: 200px;
        margin-right: 20px;
        background: #d0cece;
        display: -webkit-box;
        display: -ms-flexbox;
        display: -webkit-flex;
        display: flex;
        align-items: flex-end;
        -webkit-align-items: flex-end
    }

        .progress-bar-vertical .progress-bar {
            width: 100%;
            height: 0;
            -webkit-transition: height 0.6s ease;
            -o-transition: height 0.6s ease;
            transition: height 0.6s ease
        }

    .actionbox {
        background: white;
        box-sizing: border-box;
        margin-bottom: 2%;
        border-radius: 20px;
    }

    .setsearchbox {
        position: relative;
        margin-top: 0%;
        width: auto;
        background-color: antiquewhite;
        border-radius: 0px;
    }

    .searchheader {
        font-size: 16px;
        text-align: center;
        font-weight: bold;
        display: inline-block;
        width: 50%;
        text-align: start;
        border-bottom: 1px solid #dee2e6;
        border-right: 1px solid #dee2e6;
    }

    .di {
        display: inline-block;
    }

    .itemnumberbox {
        border: 1px solid #989a9d;
        background: #80808047;
    }

    .fr {
        float: right !important;
    }

    .mg-t-5 {
        margin-top: 5%;
    }

    .ml-2 {
        margin-left: 2%;
    }

    .mg-t-2 {
        margin-top: 2%;
    }

    .ml-3 {
        margin-left: 3%;
    }

    .mg-t-3 {
        margin-top: 3%;
    }

    .dn {
        display: none;
    }

    .checkcheapitems {
        margin-top: 50%;
        position: relative;
        left: 110%;
        width: 20%;
    }

    .emptygrid {
        height: 300px;
        background-color: antiquewhite;
    }
</style>

@*<div class="w-100 p-3 h-100 d-inline-block">
        <div id="createnew" style="cursor:pointer"><img src="../images/create.png" style="width:50px" /></div>&ensp;&ensp;&ensp;

    </div>*@


<div class="row">
    <div class="col-lg-12 col-sm-12">
        @*<button id="loadbtn" onclick="SaleOrderPModal()" class="btn btn-primary">hi</button>*@
        <div class="tab-content">
            <div class="w-100 p-3 h-100 d-inline-block actionbox" id="listbtns">
                <div id="onlisticon" class="di">
                    <img id="createnew" class="createnew cp" src="../images/add.png" style="width:50px" title="Create" onclick="triggerAddItems()" />&ensp;&ensp;&ensp;
                    <img class="cp" id="refresh-id" src="../images/refresh.png" style="width: 46px; margin-left: -14%" title="Refresh" />&ensp;&ensp;&ensp;
                </div>
                <button class="btn" style="margin-top:10px; float: right; color: white; background: rgb(99, 98, 238); height: 40px; padding: 0px; width: 94px; margin-right: 191px;" id="DataSync"><a href="~/Items/SyncData" style="color:white; text-decoration:none;">Sync Data</a></button>
                <div id="defaultlisticons" class="di" style="margin-left:-2%"></div>
                <div id="onsaveicon">
                </div>

                @*<img class="saverecord hide-icon" src="../images/save1.png" style="width:50px" title="Save" />*@&ensp;&ensp;&ensp;
                <div class="row fr" id="existingitemnumber" style="width:25%">
                    @Html.HiddenFor(model => model.ItemNumber, new { @class = "form-control" })
                    @Html.HiddenFor(model => model.Id, new { @class = "form-control", id = "id" })
                </div>
                <div class="row fr" id="newitemnumber">
                    @Html.HiddenFor(model => model.ItemNumber, new { @class = "form-control" })

                </div>
                <div class="row fr">
                    <div id="cheapmodall" class="checkcheapitems">
                        <div class="form-group">
                            <button class="btn btn-info " style="margin-top:28px;" data-bs-toggle="modal" data-bs-target="#cheapmodal">Cheap Products</button>
                        </div>
                    </div>
                </div>

                <div class="row mg-t-3">
                    <div class="col-lg-10 col-sm-8">
                        <div class="form-group">
                            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control searchname", placeholder = "Search Item", onkeyup = "GetAllMatchedItems(event)", autocomplete="off" } })
                            <div style="background-color: blue !important;cursor:pointer" id="listallmissions"></div>
                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger db" })
                        </div>
                    </div>
                    <div class="col-lg-4">
                    </div>
                </div>
            </div>

            <div id="ListappenedTabs" class="tab-content">
                <div class="tab-pane fade show active" id="details" role="tabpanel" aria-labelledby="Details-tab">
                    <div id="exitingitems">
                        <div class="card">
                            <div class="card-body">
                                <div class="panel panel-primary panel-head ">
                                    <div class="panel-heading" style="">Items</div>
                                    <ul class="nav nav-tabs mt-2" style="border:1px solid #dee2e6 ;" role="tablist">
                                        <li class="nav-item">
                                            <a class="nav-link active Details-tab" data-bs-toggle="tab" href="#details" role="tab" aria-controls="details" aria-selected="true">Details</a>
                                        </li>
                                        <li class="nav-item">
                                            <a class="nav-link Financial-tab" data-bs-toggle="tab" href="#financial" role="tab" aria-controls="financial" aria-selected="false">Financial</a>
                                        </li>
                                        <li class="nav-item">
                                            <a class="nav-link Suppliers-tab" data-bs-toggle="tab" href="#suppliers" role="tab" aria-controls="suppliers" aria-selected="false">Suppliers</a>
                                        </li>
                                        <li class="nav-item">
                                            <a class="nav-link Purchase-tab" data-bs-toggle="tab" href="#purchasetab" role="tab" aria-controls="purchasetab" aria-selected="false">Purchases</a>
                                        </li>
                                        <li class="nav-item">
                                            <a class="nav-link Saless-tab" data-bs-toggle="tab" href="#saless" role="tab" aria-controls="saless" aria-selected="false">Sales</a>
                                        </li>
                                        <li class="nav-item">
                                            <a class="nav-link Features-tab" data-bs-toggle="tab" href="#features" role="tab" aria-controls="features" aria-selected="false">Features</a>
                                        </li>
                                        <li class="nav-item">
                                            <a class="nav-link Tools-tab" data-bs-toggle="tab" href="#tools" role="tab" aria-controls="tools" aria-selected="false">Tools</a>
                                        </li>  
                                            <li class="nav-item">
                                            <a class="nav-link Attachments-tab" data-bs-toggle="tab" href="#attachments" role="tab" aria-controls="attachments" aria-selected="false">Attachments</a>
                                        </li>
                                    </ul>

                                    <div class="panel-body">
                                    </div>


                                    <div class="row">
                                        <div class="col-lg-8 col-md-8 col-sm-8 col-8">
                                            <div class="row">
                                                <div class="col-lg-8 col-sm-8">
                                                    <div class="form-group">
                                                        <label>Image</label>

                                                        <img id="output1" style="width:100px; height:100px; display:none;" />
                                                        <br />
                                                        <input autocomplete="off" class="imginput" id="productImage1" type="file" accept="image/*" onchange="loadFile1(event)" name="ProfileImage">

                                                        <script>
                                                            var loadFile1 = function(event) {
                                                                var output = document.getElementById('output1');
                                                                output.src = URL.createObjectURL(event.target.files[0]);
                                                                output.onload = function() {
                                                                    URL.revokeObjectURL(output.src) // free memory
                                                                }
                                                                output.style.display = "block";
                                                                $("#defaultoutput").hide();
                                                            };
                                                        </script>
                                                    </div>
                                                </div>
                                                <div class="col-lg-4 col-sm-4">
                                                </div>
                                            </div>
                                            <div class="row">
                                                <div class="col-lg-8 col-sm-8">
                                                    <div class="form-group">
                                                        <label class="">Name</label>
                                                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", placeholder = "Name", id = "name" } })
                                                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger db" })
                                                    </div>
                                                </div>
                                                <div class="col-lg-4 col-sm-4">
                                                    <div class="form-group">
                                                        <label class="">Shipment Limit</label>
                                                        @Html.EditorFor(model => model.ShipmentLimit, new { htmlAttributes = new { @type = "Number", @class = "form-control", placeholder = "Shipment Limit", id = "updateonlinelimits" } })
                                                        @Html.ValidationMessageFor(model => model.ShipmentLimit, "", new { @class = "text-danger db" })
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="row">
                                                <div class="col-lg-6 col-sm-6">
                                                    <div class="form-group">
                                                        <label class="fba-r label-max-width" for="exampleFormControlSelect3">
                                                            Category
                                                        </label>
                                                        @Html.DropDownList("ItemCategoryId", (IEnumerable<SelectListItem>)ViewBag.ItemCategory, "--Choose Item Category--", new { @class = "col-md-11 dropadditemCategory", id = "category" })
                                                        @Html.ValidationMessageFor(model => model.ItemCategoryId, "", new { @class = "text-danger db" })
                                                        <i class="mdi mdi-plus text-primary" data-bs-toggle="modal" data-bs-target="#additemcategory"></i>
                                                    </div>
                                                </div>
                                                <div class="col-lg-6 col-sm-6">
                                                    <div class="form-group">
                                                        <label class="col-sm-5">Manufacture</label>
                                                        @Html.DropDownList("BrandId", (IEnumerable<SelectListItem>)ViewBag.BrandGet, "--Choose Manufacture--", new { @class = "col-sm-10 dropadditemCategory ", id = "manufacture" })
                                                        @Html.ValidationMessageFor(model => model.BrandId, "", new { @class = "text-danger db" })
                                                        <i class="mdi mdi-plus text-primary" data-bs-toggle="modal" data-bs-target="#addmanufacture"></i>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="row">
                                                <div class="col-lg-6 col-sm-6">
                                                    <div class="form-group">
                                                        <label class="col-sm-5">Sub Category</label>
                                                        @Html.DropDownList("ItemSubCategoryId", (IEnumerable<SelectListItem>)ViewBag.ItemSubCategory, "--Choose Sub Category--", new { @class = "col-md-11 dropadditemCategory", id = "sub-category" })
                                                        @Html.ValidationMessageFor(model => model.ItemSubCategoryId, "", new { @class = "text-danger db" })
                                                        <i class="mdi mdi-plus text-primary" data-bs-toggle="modal" data-bs-target="#addsubitemcategory"></i>
                                                    </div>
                                                </div>
                                                <div class="col-lg-6 col-sm-6">
                                                    <div class="form-group">
                                                        <label class="col-sm-5">Family</label>
                                                        @Html.DropDownList("FamilyId", (IEnumerable<SelectListItem>)ViewBag.family, "--Choose Family--", new { @class = "col-sm-10 dropadditemCategory", id = "family" })
                                                        @Html.ValidationMessageFor(model => model.FamilyId, "", new { @class = "text-danger db" })
                                                        <i class="mdi mdi-plus text-primary" data-bs-toggle="modal" data-bs-target="#addfamily"></i>
                                                    </div>
                                                </div>
                                            </div>

                                            <div class="row">
                                                <div class="col-lg-3 col-md-3 col-sm-3 col-3">
                                                    <div class="form-group">
                                                        <label class="dim col-sm-5">Retail</label>
                                                        @Html.EditorFor(model => model.Retail, new { htmlAttributes = new { @class = "form-control retail", id = "retail", placeholder = "Retail", type = "number", onkeyup = "calculateupdate()" } })
                                                        @Html.ValidationMessageFor(model => model.Retail, "", new { @class = "text-danger db" })
                                                        <label class="text-danger field-validation-error db" id="ValMsgProductBarCode" style="font-size:12px;"></label>
                                                    </div>
                                                </div>
                                                <div class="col-lg-9 col-md-9 col-sm-9 col-9">
                                                    <div class="row">
                                                        <div class="col-lg-4 col-sm-4">
                                                            <div class="form-group">
                                                                <label class="dim col-sm-12">Units</label>
                                                                <div class="col-lg-12 col-md-12 col-sm-12 col-12">
                                                                    @Html.EditorFor(model => model.Units, new { htmlAttributes = new { @class = "form-control", id = "units", type = "number", onkeyup = "calculateupdate()" } })
                                                                    @Html.ValidationMessageFor(model => model.Units, "", new { @class = "text-danger db" })
                                                                    <label class="text-danger field-validation-error db" id="ValMsgProductBarCode" style="font-size:12px;"></label>
                                                                </div>
                                                            </div>
                                                        </div>
                                                        <div class="col-lg-4 col-sm-4">
                                                            <div class="form-group">
                                                                <label class="dim col-sm-12">Unit Charge</label>
                                                                <div class="col-lg-12 col-md-12 col-sm-12 col-12">
                                                                    @Html.EditorFor(model => model.UnitCharge, new { htmlAttributes = new { @class = "form-control ", id = "unit-charge", type = "number" } })
                                                                    @Html.ValidationMessageFor(model => model.UnitCharge, "", new { @class = "text-danger db" })
                                                                    <label class="text-danger field-validation-error db" id="ValMsgProductBarCode" style="font-size:12px;"></label>
                                                                </div>
                                                            </div>
                                                        </div>
                                                        <div class="col-lg-4 col-sm-4">
                                                            <div class="form-group">
                                                                <label class="dim col-sm-12">Unit Retail</label>
                                                                <div class="col-lg-12 col-md-12 col-sm-12 col-12">
                                                                    @Html.EditorFor(model => model.UnitRetail, new { htmlAttributes = new { @class = "form-control", id = "unit-retail", type = "number" } })
                                                                    @Html.ValidationMessageFor(model => model.UnitRetail, "", new { @class = "text-danger db" })
                                                                    <label class="text-danger field-validation-error db" id="ValMsgProductBarCode" style="font-size:12px;"></label>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>

                                            </div>
                                            <div class="row">
                                                <div class="col-lg-3 col-md-3 col-sm-3 col-3">
                                                    <div class="form-group">
                                                        <label class="dim col-sm-12 col-12">BarCode</label>
                                                        @Html.EditorFor(model => model.BarCode, new { htmlAttributes = new { @class = "form-control ", id = "barcode", placeholder = "BarCode" } })
                                                        @Html.ValidationMessageFor(model => model.BarCode, "", new { @class = "text-danger db" })
                                                        <label class="text-danger field-validation-error db" id="ValidEditMsgProductBarCode" style="font-size:12px;"></label>
                                                    </div>
                                                </div>
                                                <div class="col-lg-9 col-md-9 col-sm-9 col-9">
                                                    <div class="row">
                                                        <div class="col-lg-4 col-sm-4">
                                                            <div class="form-group">
                                                                <label class="dim col-sm-12">QtyCase</label>
                                                                <div class="col-lg-12 col-md-12 col-sm-12 col-12">
                                                                    @Html.EditorFor(model => model.QuantityCase, new { htmlAttributes = new { @class = "form-control ", id = "qtycase", type = "number" } })
                                                                    @Html.ValidationMessageFor(model => model.QuantityCase, "", new { @class = "text-danger db" })
                                                                    <label class="text-danger field-validation-error db" id="ValMsgProductBarCode" style="font-size:12px;"></label>
                                                                </div>
                                                            </div>
                                                        </div>
                                                        <div class="col-lg-4 col-sm-4">
                                                            <div class="form-group">
                                                                <label class="dim col-sm-12">Qty:Pallet</label>
                                                                <div class="col-lg-12 col-md-12 col-sm-12 col-12">
                                                                    @Html.EditorFor(model => model.QuantityPallet, new { htmlAttributes = new { @class = "form-control", id = "qtypallet", type = "number" } })
                                                                    @Html.ValidationMessageFor(model => model.QuantityPallet, "", new { @class = "text-danger db" })
                                                                    <label class="text-danger field-validation-error db" id="ValMsgProductBarCode" style="font-size:12px;"></label>
                                                                </div>
                                                            </div>
                                                        </div>
                                                        <div class="col-lg-4 col-sm-4">
                                                            <div class="form-group">
                                                                <label class="dim col-sm-12">SingleUnitMSA</label>
                                                                <div class="col-lg-12 col-md-12 col-sm-12 col-12">
                                                                    @Html.EditorFor(model => model.SingleUnitMsa, new { htmlAttributes = new { @class = "form-control ", id = "sunitmsa", } })
                                                                    @Html.ValidationMessageFor(model => model.SingleUnitMsa, "", new { @class = "text-danger db" })
                                                                    <label class="text-danger field-validation-error db" id="ValMsgProductBarCode" style="font-size:12px;"></label>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>

                                            </div>

                                            <div class="row mb-0">
                                                <div class="col-lg-6 col-sm-6">
                                                    <div class="form-group">
                                                        <label class="dim col-sm-12">Location(Slot)</label>
                                                        @Html.EditorFor(model => model.Location, new { htmlAttributes = new { @class = "form-control txtinput", placeholder = "Location", id = "locationslot" } })
                                                        @Html.ValidationMessageFor(model => model.Location, "", new { @class = "text-danger db" })
                                                        <label class="text-danger field-validation-error db" id="ValMsgProductBarCode" style="font-size:12px;"></label>
                                                    </div>
                                                </div>
                                                <div class="col-lg-6 col-sm-6">
                                                    <div class="form-group">
                                                        <label class="dim col-sm-12">Group</label>
                                                        @Html.DropDownList("GroupId", (IEnumerable<SelectListItem>)ViewBag.Group, "--Choose Group--", new { @class = "col-md-11 dropadditemCategory", id = "group" })
                                                        <i class="mdi mdi-plus text-primary" data-bs-toggle="modal" data-bs-target="#addgroup"></i>
                                                        @Html.ValidationMessageFor(model => model.GroupId, "", new { @class = "text-danger db" })
                                                        <label class="text-danger field-validation-error db" id="ValMsgProductBarCode" style="font-size:12px;"></label>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="row">
                                                <div class="col-lg-6 col-sm-6">
                                                    <div class="form-group">
                                                        <label class="dim col-sm-12">Location 2</label>
                                                        @Html.EditorFor(model => model.LocationTwo, new { htmlAttributes = new { @class = "form-control txtinput", placeholder = "Location", id = "location2" } })
                                                        @Html.ValidationMessageFor(model => model.LocationTwo, "", new { @class = "text-danger db" })
                                                        <label class="text-danger field-validation-error db" id="ValMsgProductBarCode" style="font-size:12px;"></label>
                                                    </div>
                                                </div>
                                                <div class="col-lg-6 col-sm-6">
                                                    <div class="form-group">
                                                        <label class="dim col-sm-12">Mispick</label>
                                                        @Html.DropDownList("MisPickId", (IEnumerable<SelectListItem>)ViewBag.Mispick, "--Choose Mispick--", new { @class = "col-sm-11 dropadditemCategory", id = "mispick" })
                                                        <i class="mdi mdi-plus text-primary" data-bs-toggle="modal" data-bs-target="#addmispick"></i>
                                                        @Html.ValidationMessageFor(model => model.MisPickId, "", new { @class = "text-danger db" })
                                                        <label class="text-danger field-validation-error db" id="ValMsgProductBarCode" style="font-size:12px;"></label>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="row">
                                                <div class="col-lg-6 col-sm-6">
                                                    <div class="form-group">
                                                        <label class="dim col-sm-12">Location 3</label>
                                                        @Html.EditorFor(model => model.LocationThree, new { htmlAttributes = new { @class = "form-control txtinput", placeholder = "Location", id = "location3" } })
                                                        @Html.ValidationMessageFor(model => model.LocationThree, "", new { @class = "text-danger db" })
                                                        <label class="text-danger field-validation-error db" id="ValMsgProductBarCode" style="font-size:12px;"></label>
                                                    </div>
                                                </div>
                                                <div class="col-lg-6 col-sm-6">
                                                    <div class="form-group">
                                                        <label class="dim col-sm-12">Color</label>
                                                        @Html.DropDownList("ColorId", (IEnumerable<SelectListItem>)ViewBag.Color, "--Choose Color--", new { @class = "col-sm-11 dropadditemCategory", id = "color" })
                                                        <i class="mdi mdi-plus text-primary" data-bs-toggle="modal" data-bs-target="#addcolor"></i>
                                                        @Html.ValidationMessageFor(model => model.ColorId, "", new { @class = "text-danger db" })
                                                        <label class="text-danger field-validation-error db" id="ValMsgProductBarCode" style="font-size:12px;"></label>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="row">
                                                <div class="col-lg-5 col-sm-5">
                                                    <div class="form-group">
                                                        <label class="dim col-sm-12">Location 4</label>
                                                        @Html.EditorFor(model => model.LocationFour, new { htmlAttributes = new { @class = "form-control txtinput", placeholder = "Location", id = "location4" } })
                                                        @Html.ValidationMessageFor(model => model.LocationFour, "", new { @class = "text-danger db" })
                                                        <label class="text-danger field-validation-error db" id="ValMsgProductBarCode" style="font-size:12px;"></label>
                                                    </div>
                                                </div>
                                                <div class="col-lg-7">
                                                    <div class="row">
                                                        <div class="col-lg-4 col-sm-4">
                                                            <div class="form-group">
                                                                <label class="dim col-sm-12">Weight(lb)</label>
                                                                <div class="col-lg-12 col-md-12 col-sm-12 col-12">
                                                                    @Html.EditorFor(model => model.WeightLb, new { htmlAttributes = new { @class = "form-control txtinput", id = "weightlb" } })
                                                                    @Html.ValidationMessageFor(model => model.WeightLb, "", new { @class = "text-danger db" })
                                                                    <label class="text-danger field-validation-error db" id="ValMsgProductBarCode" style="font-size:12px;"></label>
                                                                </div>
                                                            </div>
                                                        </div>
                                                        <div class="col-lg-4 col-sm-4">
                                                            <div class="form-group">
                                                                <label class="dim col-sm-12">Weight(Oz)</label>
                                                                <div class="col-lg-12 col-md-12 col-sm-12 col-12">
                                                                    @Html.EditorFor(model => model.WeightOz, new { htmlAttributes = new { @class = "form-control txtinput", id = "weightoz" } })
                                                                    @Html.ValidationMessageFor(model => model.WeightOz, "", new { @class = "text-danger db" })
                                                                    <label class="text-danger field-validation-error db" id="ValMsgProductBarCode" style="font-size:12px;"></label>
                                                                </div>
                                                            </div>
                                                        </div>

                                                    </div>
                                                </div>

                                            </div>


                                        </div>
                                        <div class="col-lg-3 col-md-3 col-sm-3 col-3">
                                            <div class="row">
                                                <div class="col-lg-12 col-md-12 col-sm-12 col-12">
                                                    <div class="form-group">
                                                        <label class="">SalesLimit</label>
                                                        @*Html.EditorFor(model => model.SalesLimit, new { htmlAttributes = new { @class = "form-control", placeholder = "SalesLimit", id = "saleslimitnew" } })*@
                                                        <input type="text" placeholder="" id="saleslimitnew" class="form-control" readonly>
                                                        @Html.ValidationMessageFor(model => model.SalesLimit, "", new { @class = "text-danger db" })
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="row">
                                                <div class="col-lg-12 col-md-12 col-sm-12 col-12">
                                                    <div class="form-group">
                                                        <label class="col-sm-12">MSAReportAs (00001)</label>
                                                        <select class="form-control">
                                                            <option>----Select----</option>


                                                        </select>
                                                    </div>
                                                    <div class="form-group">
                                                        <label class="col-sm-12">State Report As</label>
                                                        @Html.DropDownList("StateReportAs", (IEnumerable<SelectListItem>)ViewBag.family, "-----Choose State------", new { @class = "col-sm-12 dropadditemCategory" })
                                                        @Html.ValidationMessageFor(model => model.StateReportAs, "", new { @class = "text-danger db" })

                                                    </div>
                                                </div>
                                            </div>
                                            <div class="row">

                                                <div class="col-lg-12 col-md-12 col-sm-12 col-12">
                                                    <br />
                                                    <div class="form-group">
                                                        <label class="dim col-sm-12">Reporting Weight:</label>
                                                        @Html.EditorFor(model => model.ReportingWeight, new { htmlAttributes = new { @class = "form-control", placeholder = "ReportingWeight", } })
                                                        @Html.ValidationMessageFor(model => model.ReportingWeight, "", new { @class = "text-danger db" })
                                                    </div>
                                                    <div class="form-group">
                                                        <label class="dim col-sm-8">Unit:</label>
                                                        <select class="form-control">
                                                            <option>------Select---------</option>
                                                            <option>LB</option>
                                                            <option>OZ</option>


                                                        </select>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="row">
                                                <br /><br /><br /><br />
                                            </div>
                                            <div class="row">
                                                <div class="col-lg-12 col-md-12 col-sm-12 col-12" style=" border: 1px solid; height:50%;">
                                                    <div class="form-group">
                                                        <label class="dim col-sm-12">Order Quantity</label>
                                                        @Html.EditorFor(model => model.OrderQuantity, new { htmlAttributes = new { @class = "form-control txtinput", placeholder = "Order qnty", id = "orderqntynew" } })
                                                        @Html.ValidationMessageFor(model => model.OrderQuantity, "", new { @class = "text-danger db" })
                                                        <label class="text-danger field-validation-error db" id="ValMsgProductBarCode" style="font-size:12px;"></label>
                                                    </div>
                                                    <div class="form-group">
                                                        <label class="dim col-sm-12">Max Quantity</label>
                                                        @Html.EditorFor(model => model.MaxOrderQty, new { htmlAttributes = new { @class = "form-control txtinput", placeholder = "Max Quantity", id = "maxqntynew" } })
                                                        @Html.ValidationMessageFor(model => model.MaxOrderQty, "", new { @class = "text-danger db" })
                                                        <label class="text-danger field-validation-error db" id="ValMsgProductBarCode" style="font-size:12px;"></label>
                                                    </div>
                                                    <div class="form-group">
                                                        <label class="dim col-sm-12">Min Quantity</label>
                                                        @Html.EditorFor(model => model.MinOrderQty, new { htmlAttributes = new { @class = "form-control txtinput", placeholder = "Min Quantity", id = "minqntynew" } })
                                                        @Html.ValidationMessageFor(model => model.MinOrderQty, "", new { @class = "text-danger db" })
                                                        <label class="text-danger field-validation-error db" id="ValMsgProductBarCode" style="font-size:12px;"></label>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-lg-1 col-md-1 col-sm-1 col-1">
                                            <div class="form-group">
                                                <label>
                                                    On/Off
                                                </label>
                                                @Html.CheckBox("IsActive", Model.IsActive)
                                            </div>
                                            <div class="progress progress-bar-vertical" style="height: 40%;width:80%;">
                                                @*<div class="progress-bar" role="progressbar" aria-valuenow="50" aria-valuemin="0" aria-valuemax="100" style="height: @Model.MaxOrderQty%">@Model.MaxOrderQty%</div><div class="progress-bar" role="progressbar" aria-valuenow="50" aria-valuemin="0" aria-valuemax="100" style="height: @Model.MaxOrderQty%">@Model.MaxOrderQty%</div>*@
                                                <div id="progressbarheight" class="progress-bar" role="progressbar" aria-valuenow="50" aria-valuemin="0" aria-valuemax="100"></div>
                                            </div>
                                            <span class="add-style">Stock Level</span>

                                        </div>
                                    </div>
                                    <div class="row" style="margin-bottom:15px">
                                        @*<div class="col-lg-2 col-md-2 col-sm-2 col-2">

                                        </div>*@
                                        <div class="col-lg-4 col-md-4 col-sm-4 col-4">
                                            <label class="dim col-sm-12">SalesLimitAges</label>
                                            @Html.DropDownList("MaintainStockForDays", (IEnumerable<SelectListItem>)ViewBag.NoOfDays, "--Choose Age--", new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.MaintainStockForDays, "", new { @class = "text-danger db" })

                                        </div>
                                        <div class="col-lg-4 col-md-4 col-sm-4 col-4">
                                            <label class="dim col-sm-12">Need High Authorization</label>
                                            @Html.CheckBox("NeedHighAuthorization", Model.NeedHighAuthorization, new { @id = "EditCheckBoxNHA" })
                                        </div>


                                    </div>
                                    <div class="row" id="EditHighlimitOn" style="display:none">
                                        <div class="col-lg-4 col-md-4 col-sm-4 col-4">
                                            <label class="dim col-sm-12">High limit On</label>
                                            @Html.EditorFor(model => model.HighlimitOn, new { htmlAttributes = new { @class = "form-control txtinput", @type = "number", placeholder = "High limit On", id = "edithighlimiton" } })
                                            <label class="text-danger field-validation-error db" id="EditHighlimitOnValidation" style="font-size:12px;"></label>
                                        </div>
                                    </div>
                                </div>
                                @Html.HiddenFor(model => model.Id, new { @class = "form-control" })

                            </div>

                        </div>
                    </div>
                </div>
                <div class="tab-pane fade" id="financial" role="tabpanel" aria-labelledby="Financial-tab">
                    <div id="financial-main">
                        <div class="card">
                            <div class="card-body">
                                <div class="panel panel-primary panel-head ">
                                    <div class="col-lg-12 col-md-12 col-sm-12 col-12">
                                        <div class="panel panel-primary panel-head ">
                                            <div class="panel-heading">Financial</div>

                                            <ul class="nav nav-tabs mt-2" style="border:1px solid #dee2e6;" role="tablist">
                                                <li class="nav-item">
                                                    <a class="nav-link Details-tab" data-bs-toggle="tab" href="#details" role="tab" aria-controls="details" aria-selected="true">Details</a>
                                                </li>
                                                <li class="nav-item">
                                                    <a class="nav-link Financial-tab active" data-bs-toggle="tab" href="#financial" role="tab" aria-controls="financial" aria-selected="false">Financial</a>
                                                </li>
                                                <li class="nav-item">
                                                    <a class="nav-link Suppliers-tab" data-bs-toggle="tab" href="#suppliers" role="tab" aria-controls="suppliers" aria-selected="false">Suppliers</a>
                                                </li>
                                                <li class="nav-item">
                                                    <a class="nav-link Purchase-tab" data-bs-toggle="tab" href="#purchasetab" role="tab" aria-controls="purchasetab" aria-selected="false">Purchases</a>
                                                </li>
                                                <li class="nav-item">
                                                    <a class="nav-link Saless-tab" data-bs-toggle="tab" href="#saless" role="tab" aria-controls="saless" aria-selected="false">Sales</a>
                                                </li>
                                                <li class="nav-item">
                                                    <a class="nav-link Features-tab" data-bs-toggle="tab" href="#features" role="tab" aria-controls="features" aria-selected="false">Features</a>
                                                </li>
                                                <li class="nav-item">
                                                    <a class="nav-link Tools-tab" data-bs-toggle="tab" href="#tools" role="tab" aria-controls="tools" aria-selected="false">Tools</a>
                                                </li>
                                                       <li class="nav-item">
                                            <a class="nav-link Attachments-tab" data-bs-toggle="tab" href="#attachments" role="tab" aria-controls="attachments" aria-selected="false">Attachments</a>
                                        </li>
                                            </ul>




                                            <div class="row">
                                                @*<div class="col-lg-8 col-sm-8">
                                                <div class="form-group">
                                                <label class="">Search Item</label>
                                                @Html.EditorFor(model => model.Financial.ItemName, new { htmlAttributes = new { @class = "form-control", placeholder = "Search Item", id = "searchnamee" } })
                                                @Html.ValidationMessageFor(model => model.Financial.ItemName, "", new { @class = "text-danger db" })
                                                </div>
                                                </div>*@
                                                <div class="col">
                                                    <div class="form-group">
                                                        <label class="">Item No</label>

                                                    </div>
                                                </div>
                                            </div>
                                            <div class="row ">
                                                <div class="col">
                                                    <div class="row">
                                                        <div class="col-md-4 padding-lr">
                                                            <div class="form-group">
                                                                <label class="col-sm-12">Cost</label>
                                                                <div class="col-sm-12">
                                                                    @Html.EditorFor(model => model.Cost, new { htmlAttributes = new { @class = "form-control", id = "cost", type = "number", onkeypress = "calculateupdateF()" } })
                                                                    @Html.ValidationMessageFor(model => model.Financial.Cost, "", new { @class = "text-danger db" })
                                                                </div>
                                                            </div>
                                                        </div>
                                                        <div class="col-md-4 padding-lr">
                                                            <div class="form-group">
                                                                <label class="col-sm-12">Retail</label>
                                                                <div class="col-sm-12">
                                                                    @Html.EditorFor(model => model.Retail, new { htmlAttributes = new { @class = "form-control retail", id = "retail", type = "number" } })
                                                                    @Html.ValidationMessageFor(model => model.Financial.Retail, "", new { @class = "text-danger db" })
                                                                </div>
                                                            </div>
                                                        </div>

                                                        <div class="col-md-4 padding-lr">
                                                            <div class="form-group">
                                                                <label class="col-sm-12">Profit%</label>
                                                                <div class="col-sm-12">
                                                                    @Html.EditorFor(model => model.Financial.Profit, new { htmlAttributes = new { @class = "form-control", id = "profitpercnt", type = "number" } })
                                                                    @Html.ValidationMessageFor(model => model.Financial.Profit, "", new { @class = "text-danger db" })
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="row">

                                                        <div class="col-md-4 padding-lr">
                                                            <div class="form-group">
                                                                <label class="col-sm-12">MfgPromotion</label>
                                                                <div class="col-sm-12">
                                                                    @Html.EditorFor(model => model.Financial.MsgPromotion, new { htmlAttributes = new { @class = "form-control", id = "mfgpromotion" } })
                                                                    @Html.ValidationMessageFor(model => model.Financial.MsgPromotion, "", new { @class = "text-danger db" })
                                                                </div>
                                                            </div>
                                                        </div>
                                                        <div class="col-md-4 padding-lr">
                                                            <div class="form-group">
                                                                <label class="col-sm-12">AddToCost%</label>
                                                                <div class="col-sm-12">
                                                                    @Html.EditorFor(model => model.Financial.AddToCost, new { htmlAttributes = new { @class = "form-control", type = "number", id = "addtocost" } })
                                                                    @Html.ValidationMessageFor(model => model.Financial.AddToCost, "", new { @class = "text-danger db" })
                                                                </div>
                                                            </div>
                                                        </div>

                                                        <div class="col-md-4 padding-lr">
                                                            <div class="form-group">
                                                                <label class="col-sm-12">Unit Charge</label>
                                                                <div class="col-sm-12">
                                                                    @Html.EditorFor(model => model.UnitCharge, new { htmlAttributes = new { @class = "form-control", type = "number", id = "unitcharge" } })
                                                                    @Html.ValidationMessageFor(model => model.Financial.UnitCharge, "", new { @class = "text-danger db" })
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="row">
                                                        <div class="col-md-5 padding-lr">
                                                            <div class="form-group">
                                                                <label class="col-sm-12">OutofstateCost</label>
                                                                <div class="col-sm-12">
                                                                    @Html.EditorFor(model => model.Financial.OutOfStateCost, new { htmlAttributes = new { @class = "form-control", id = "outofstatecost", type = "number" } })
                                                                    @Html.ValidationMessageFor(model => model.Financial.OutOfStateCost, "", new { @class = "text-danger db" })
                                                                </div>
                                                            </div>
                                                        </div>
                                                        <div class="col-md-5 padding-lr">
                                                            <div class="form-group">
                                                                <label class="col-sm-12">OutOfStateRetail</label>
                                                                <div class="col-sm-12">
                                                                    @Html.EditorFor(model => model.Financial.OutOfStateRetail, new { htmlAttributes = new { @class = "form-control", id = "outofstateretail", type = "number" } })
                                                                    @Html.ValidationMessageFor(model => model.Financial.OutOfStateRetail, "", new { @class = "text-danger db" })
                                                                </div>
                                                            </div>
                                                        </div>
                                                        <div class="col-md-3 padding-lr">
                                                            <div class="form-group">
                                                                <label>.</label>
                                                                <div class="col-sm-12">
                                                                    @*@Html.EditorFor(model => model.OutofstateRetail, new { htmlAttributes = new { @class = "form-control", type = "number", id = "dotfield" } })
                                                                    @Html.ValidationMessageFor(model => model.OutofstateRetail, "", new { @class = "text-danger db" })*@
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="col">
                                                    <table class="table table-bordered">
                                                        <thead>
                                                            <tr>
                                                                <th scope="col">Code</th>
                                                                <th scope="col">Price</th>
                                                                <th scope="col">Qty</th>
                                                                <th scope="col">Qty Price</th>
                                                            </tr>
                                                        </thead>
                                                        <tbody>
                                                            <tr>
                                                                <th scope="row">A</th>
                                                                <td>Mark</td>
                                                                <td>Otto</td>
                                                                <td>mdo</td>
                                                            </tr>
                                                            <tr>
                                                                <th scope="row">B</th>
                                                                <td>Jacob</td>
                                                                <td>Thornton</td>
                                                                <td>fat</td>
                                                            </tr>
                                                            <tr>
                                                                <th scope="row">C</th>
                                                                <td>Larry</td>
                                                                <td>the Bird</td>
                                                                <td>twitter</td>
                                                            </tr>
                                                            <tr>
                                                                <th scope="row">D</th>
                                                                <td>Larry</td>
                                                                <td>the Bird</td>
                                                                <td>twitter</td>
                                                            </tr>
                                                            <tr>
                                                                <th scope="row">Out of State</th>
                                                                <td>Larry</td>
                                                                <td>the Bird</td>
                                                                <td>twitter</td>
                                                            </tr>
                                                        </tbody>
                                                    </table>
                                                </div>
                                                <div class="col">
                                                    <div style="border:1px solid">
                                                        <div class="form-group mb-0 ms-2">
                                                            @Html.CheckBox("Financial.AskForPricing", false, new { id = "askforpricing", })
                                                            @Html.ValidationMessageFor(model => model.Financial.AskForPricing, "", new { @class = "text-danger db" })
                                                            <label class="form-check-label">
                                                                AskForPricing
                                                            </label>
                                                        </div>
                                                        <div class="form-group mb-0 ms-2">
                                                            @Html.CheckBox("Financial.AskForDescrip", false, new { id = "askfordesc", })
                                                            @Html.ValidationMessageFor(model => model.Financial.AskForDescrip, "", new { @class = "text-danger db" })
                                                            <label class="form-check-label">
                                                                AskForDesc
                                                            </label>
                                                        </div>
                                                        <div class="form-group mb-0 ms-2">
                                                            @Html.CheckBox("Financial.Serialized", false, new { id = "serialized", })
                                                            @Html.ValidationMessageFor(model => model.Financial.Serialized, "", new { @class = "text-danger db" })
                                                            <label class="form-check-label">
                                                                Serialized
                                                            </label>
                                                        </div>
                                                        <div class="form-group mb-0 ms-2">
                                                            @Html.CheckBox("Financial.TaxOnSales", false, new { id = "taxonsales", })
                                                            @Html.ValidationMessageFor(model => model.Financial.TaxOnSales, "", new { @class = "text-danger db" })
                                                            <label class="form-check-label">
                                                                TaxOnSales
                                                            </label>
                                                        </div>
                                                        <div class="form-group mb-0 ms-2">
                                                            @Html.CheckBox("Financial.Purchase", false, new { id = "purchase", })
                                                            @Html.ValidationMessageFor(model => model.Financial.Purchase, "", new { @class = "text-danger db" })
                                                            <label class="form-check-label">
                                                                Purchase
                                                            </label>
                                                        </div>
                                                        <div class="form-group mb-0 ms-2">
                                                            @Html.CheckBox("Financial.NoSuchDiscount", false, new { id = "nosuchdiscount", })
                                                            @Html.ValidationMessageFor(model => model.Financial.NoSuchDiscount, "", new { @class = "text-danger db" })
                                                            <label class="form-check-label">
                                                                NoSuchDiscount
                                                            </label>
                                                        </div>
                                                        <div class="form-group mb-0 ms-2">
                                                            @Html.CheckBox("Financial.NoReturns", false, new { id = "noreturns", })
                                                            @Html.ValidationMessageFor(model => model.Financial.NoReturns, "", new { @class = "text-danger db" })
                                                            <label class="form-check-label labelred">
                                                                NoReturns
                                                            </label>
                                                        </div>
                                                        <div class="form-group ms-2">
                                                            @Html.CheckBox("Financial.SellBelowCost", false, new { id = "sellbelowcost", })
                                                            @Html.ValidationMessageFor(model => model.Financial.SellBelowCost, "", new { @class = "text-danger db" })
                                                            <label class="form-check-label labelred">
                                                                SellBelowCost
                                                            </label>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="row">
                                                <div class="col-lg-4 col-md-4 col-sm-4 col-4">
                                                    <table class="table table-borderless" style="border:1px solid;">
                                                        <thead class="thead-light">
                                                            <tr>
                                                                <th scope="col">ST</th>
                                                                <th scope="col">Tax</th>
                                                                <th scope="col">Cost</th>
                                                                <th scope="col">Retail</th>
                                                            </tr>
                                                        </thead>
                                                        <tbody>
                                                            <tr>
                                                                <td>Larry</td>
                                                            </tr>
                                                            <tr>
                                                                <td>Larry</td>
                                                            </tr>
                                                            <tr>
                                                                <td>Larry</td>
                                                            </tr>
                                                        </tbody>
                                                    </table>
                                                    <button class="btn btn-lg mt-2" style="width:17.5rem;" type="button"><span style="color:red;">Special Customer Price</span></button>
                                                    <div class="row ms-1" style="border: 1px solid; width: 100%;">
                                                        <div class="col-lg-6">
                                                            <div class="form-group">
                                                                <label class="col-sm-12">SgstdRetailPrice</label>
                                                                <div class="col-sm-12">
                                                                    @Html.EditorFor(model => model.Financial.SuggestedRetailPrice, new { htmlAttributes = new { @class = "form-control", type = "number", id = "sgtdretailprice" } })
                                                                    @Html.ValidationMessageFor(model => model.Financial.SuggestedRetailPrice, "", new { @class = "text-danger db" })
                                                                </div>
                                                            </div>
                                                        </div>
                                                        <div class="col-lg-6">
                                                            <div class="form-group " style="margin-top:30%;">
                                                                @Html.CheckBox("Financial.AutoSetSrp", false, new { id = "autosetsrp" })

                                                                <label class="form-check-label">
                                                                    Auto Set SRP
                                                                </label>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="col-lg-7 col-md-7 col-sm-7 col-7">
                                                    <div class="row" style="border:1px solid">
                                                        <div class="row">
                                                            <div class="col">

                                                                <button class="btn-info btn-qty">Qty Price</button>

                                                            </div>
                                                            <div class="col">

                                                                <label>Price</label>
                                                                <input type="number" class="form-control">
                                                            </div>
                                                            <div class="col">
                                                                <label>Quantity</label>
                                                                <input type="text" class="form-control" placeholder="Quantity">
                                                            </div>
                                                            <div class="col">
                                                                <label>Qty Price</label>
                                                                <input type="text" class="form-control" placeholder="Qty Price">
                                                            </div>

                                                        </div>
                                                        <div class="row mt-3">
                                                            <div class="col">

                                                                <label class="mt-2">Out of State Sale</label>

                                                            </div>
                                                            <div class="col">

                                                                <input type="number" class="form-control">
                                                            </div>
                                                            <div class="col">

                                                                <input type="text" class="form-control" placeholder="">
                                                            </div>
                                                            <div class="col">
                                                                <input type="text" class="form-control" placeholder="">
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="row mb-2 mt-2" style="border:1px solid;" >
                                                        <div class="row pt-1">
                                                            <div class="col-lg-3 col-md-3 col-sm-3 col-3" style="display:inline-flex">
                                                                <label class="me-1"> Discount</label>
                                                                <div class="col-lg-7 col-md-7 col-sm-7 col-7">
                                                                    @*@Html.EditorFor(model => model., new { htmlAttributes = new { @class = "form-control", type = "number", id = "discount" } })*@
                                                                </div>
                                                            </div>
                                                            <div class="col-lg-3 col-md-3 col-sm-3 col-3" style="display:inline-flex">
                                                                <div class="">
                                                                    @Html.EditorFor(model => model.Financial.Cost, new { htmlAttributes = new { @class = "form-control", type = "number", id = "percnt" } })
                                                                </div>
                                                                <label class="me-1">%</label>
                                                            </div>
                                                            <div class="col-lg-3 col-md-3 col-sm-3 col-3" style="display:inline-flex">
                                                                <label class="me-1"> From</label>
                                                                <div class="">
                                                                    @*@Html.EditorFor(model => model.From, new { htmlAttributes = new { @class = "form-control", type = "number", id = "from" } })*@
                                                                </div>
                                                            </div>
                                                            <div class="col-lg-3 col-md-3 col-sm-3 col-3" style="display:inline-flex">
                                                                <label class="me-1"> To</label>
                                                                <div class="">
                                                                    @*@Html.EditorFor(model => model., new { htmlAttributes = new { @class = "form-control", type = "number", id = "to" } })*@
                                                                </div>
                                                            </div>
                                                        </div>
                                                        <div class="row">
                                                            <div class="form-group mb-0 mt-1 ms-2" style=" text-align-last: justify;">
                                                                <label class="form-check-label me-1">
                                                                    Apply to All
                                                                </label>
                                                                @*@Html.EditorFor(model => model.Aa, new { @class = "form-check-input", type = "checkbox", id = "applytoall" })*@
                                                                @Html.CheckBox("Financial.Retail", false, new { id = "purchase", })
                                                                <label class="form-check-label">
                                                                    Retail
                                                                </label>

                                                                @Html.CheckBox("Financial.CodeA", false, new { id = "codea", })
                                                                <label class="form-check-label">
                                                                    Code A
                                                                </label>

                                                                @Html.CheckBox("Financial.CodeB", false, new { id = "codeb", })
                                                                <label class="form-check-label">
                                                                    Code B
                                                                </label>

                                                                @Html.CheckBox("Financial.CodeC", false, new { id = "codec", })
                                                                <label class="form-check-label">
                                                                    Code C
                                                                </label>

                                                                @Html.CheckBox("Financial.CodeD", false, new { id = "coded", })
                                                                <label class="form-check-label">
                                                                    Code D
                                                                </label>
                                                            </div>
                                                            <div class="form-group mb-0 mt-1 ms-2">
                                                                @Html.CheckBox("Financial.AddCustomersDiscount", false, new { id = "addcustomersdiscount", })

                                                                <label class="form-check-label">
                                                                    Add Customer's Discount
                                                                </label>
                                                            </div>
                                                        </div>

                                                    </div>
                                                    <div style="padding-top:20px"> 
                                                    <div class="row pt-2 " style="border:1px solid; ">
                                                        <div class="col-lg-2 col-md-2 col-sm-2 col-2" style="display:inline-flex">
                                                            <label class="me-1"> Buy</label>
                                                            <div class="col-lg-12 col-md-12 col-sm-12 col-12">
                                                                @*@Html.EditorFor(model => model.Buy, new { htmlAttributes = new { @class = "form-control", type = "number", id = "buy" } })*@
                                                            </div>
                                                        </div>
                                                        <div class="col-lg-2 col-md-2 col-sm-2 col-2" style="display:inline-flex">
                                                            <label class="me-1 ms-1"> Get</label>
                                                            <div class="col-lg-12 col-md-12 col-sm-12 col-12">
                                                                @*@Html.EditorFor(model => model.Get, new { htmlAttributes = new { @class = "form-control", type = "number", id = "get" } })*@
                                                            </div>
                                                        </div>
                                                        <div class="col-lg-2 col-md-2 col-sm-2 col-2" style="display:inline-flex">
                                                            <label class="me-1 ms-1"> @@</label>
                                                            <div class="col-lg-12 col-md-12 col-sm-12 col-12">
                                                                @Html.EditorFor(model => model.Cost, new { htmlAttributes = new { @class = "form-control", type = "number", id = "attsign" } })
                                                            </div>
                                                            <label> %</label>
                                                        </div>
                                                        <div class="col-lg-3 col-md-3 col-sm-3 col-3" style="display:inline-flex">
                                                            <label class="me-1 ms-2"> From</label>
                                                            <div class="">
                                                                @*@Html.EditorFor(model => model.From, new { htmlAttributes = new { @class = "form-control", type = "number", id = "fromm" } })*@
                                                            </div>
                                                        </div>
                                                        <div class="col-lg-3 col-md-3 col-sm-3 col-3" style="display:inline-flex">
                                                            <label class="me-1"> To</label>
                                                            <div class="">
                                                                @*@Html.EditorFor(model => model.To, new { htmlAttributes = new { @class = "form-control", type = "number", id = "too" } })*@
                                                            </div>
                                                        </div>
                                                    </div>
                                                    </div>
                                                  
                                                </div>
                                            </div>


                                            @*<div class="col-lg-4 col-sm-4 fr" style="margin-right:-17%">
                                            <button type="submit" class="btn btn-lg btn-dark me-3 wd-50"><p style="color:white">Save</p></button>
                                            </div>*@

                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="tab-pane fade" id="suppliers" role="tabpanel" aria-labelledby="Suppliers-tab">
                    <div id="supplier-main">
                        <div class="card">
                            <div class="card-body" style="width:100%;height:100%;">
                                <div class="panel panel-primary panel-head ">
                                    <div class="panel-heading bar-style">Supplier</div>
                                      <ul class="nav nav-tabs mt-2" style="border:1px solid #dee2e6;" role="tablist">
                                                <li class="nav-item">
                                                    <a class="nav-link Details-tab" data-bs-toggle="tab" href="#details" role="tab" aria-controls="details" aria-selected="true">Details</a>
                                                </li>
                                                <li class="nav-item">
                                                    <a class="nav-link Financial-tab" data-bs-toggle="tab" href="#financial" role="tab" aria-controls="financial" aria-selected="false">Financial</a>
                                                </li>
                                                <li class="nav-item">
                                                    <a class="nav-link Suppliers-tab active" data-bs-toggle="tab" href="#suppliers" role="tab" aria-controls="suppliers" aria-selected="false">Suppliers</a>
                                                </li>
                                                <li class="nav-item">
                                                    <a class="nav-link Purchase-tab" data-bs-toggle="tab" href="#purchasetab" role="tab" aria-controls="purchasetab" aria-selected="false">Purchases</a>
                                                </li>
                                                <li class="nav-item">
                                                    <a class="nav-link Saless-tab" data-bs-toggle="tab" href="#saless" role="tab" aria-controls="saless" aria-selected="false">Sales</a>
                                                </li>
                                                <li class="nav-item">
                                                    <a class="nav-link Features-tab" data-bs-toggle="tab" href="#features" role="tab" aria-controls="features" aria-selected="false">Features</a>
                                                </li>
                                                <li class="nav-item">
                                                    <a class="nav-link Tools-tab" data-bs-toggle="tab" href="#tools" role="tab" aria-controls="tools" aria-selected="false">Tools</a>
                                                </li>
                                                       <li class="nav-item">
                                            <a class="nav-link Attachments-tab" data-bs-toggle="tab" href="#attachments" role="tab" aria-controls="attachments" aria-selected="false">Attachments</a>
                                        </li>
                                            </ul>

                                    <div class="row mt-3">
                                        <div class="col-lg-12 col-md-12 col-sm-12 col-12 table-responsive" id="supplierTable">
                                            <table class="table table-bordered table-condensed" id="supplierTable" style="border:0.7px solid;">
                                                <thead>
                                                    <tr style="border-bottom:1.4px solid" class="grids-head">
                                                        <th style="width: 10px">Supplier</th>
                                                        <th>Supplier Item #</th>
                                                        <th>Case Qty</th>
                                                        <th>Cost</th>
                                                        <th>Discount</th>
                                                        <th>Single Cost</th>
                                                        <th>Net Cost</th>

                                                    </tr>
                                                </thead>
                                                <tbody id="appendsuppliersmain">
                                                </tbody>
                                            </table>

                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="tab-pane fade" id="purchasetab" role="tabpanel" aria-labelledby="Purchase-tab">
                    <div id="purchase-main">
                        <div class="card">
                            <div class="card-body" style="width:100%;height:100%;">
                                <div class="panel panel-primary panel-head ">
                                    <div class="panel-heading bar-style">Purchase</div>
                                     <ul class="nav nav-tabs mt-2" style="border:1px solid #dee2e6;" role="tablist">
                                                <li class="nav-item">
                                                    <a class="nav-link Details-tab" data-bs-toggle="tab" href="#details" role="tab" aria-controls="details" aria-selected="true">Details</a>
                                                </li>
                                                <li class="nav-item">
                                                    <a class="nav-link Financial-tab" data-bs-toggle="tab" href="#financial" role="tab" aria-controls="financial" aria-selected="false">Financial</a>
                                                </li>
                                                <li class="nav-item">
                                                    <a class="nav-link Suppliers-tab" data-bs-toggle="tab" href="#suppliers" role="tab" aria-controls="suppliers" aria-selected="false">Suppliers</a>
                                                </li>
                                                <li class="nav-item">
                                                    <a class="nav-link Purchase-tab active" data-bs-toggle="tab" href="#purchasetab" role="tab" aria-controls="purchasetab" aria-selected="false">Purchases</a>
                                                </li>
                                                <li class="nav-item">
                                                    <a class="nav-link Saless-tab" data-bs-toggle="tab" href="#saless" role="tab" aria-controls="saless" aria-selected="false">Sales</a>
                                                </li>
                                                <li class="nav-item">
                                                    <a class="nav-link Features-tab" data-bs-toggle="tab" href="#features" role="tab" aria-controls="features" aria-selected="false">Features</a>
                                                </li>
                                                <li class="nav-item">
                                                    <a class="nav-link Tools-tab" data-bs-toggle="tab" href="#tools" role="tab" aria-controls="tools" aria-selected="false">Tools</a>
                                                </li>
                                                       <li class="nav-item">
                                            <a class="nav-link Attachments-tab" data-bs-toggle="tab" href="#attachments" role="tab" aria-controls="attachments" aria-selected="false">Attachments</a>
                                        </li>
                                            </ul>

                                    <div class="row mt-3">
                                        <div class="col-lg-12 col-md-12 col-sm-12 col-12 table-responsive" id="">
                                            <table class="table table-bordered table-condensed" id="saletable" style="border:0.7px solid;">
                                                <thead>
                                                    <tr style="border-bottom:1.4px solid" class="grids-head">
                                                        <th style="width: 10px">Sr#</th>
                                                        <th>P.O. Number</th>
                                                        <th>Supplier Name</th>
                                                        <th>Date Received</th>
                                                        <th>Quantity</th>
                                                        <th>Case Qty</th>
                                                        <th>Cost</th>
                                                        <th>Total</th>
                                                    </tr>
                                                </thead>
                                                <tbody id="appendpurchaseordersmain">
                                                </tbody>
                                            </table>

                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="tab-pane fade" id="saless" role="tabpanel" aria-labelledby="Saless-tab">
                    <div id="sale-main">
                        <div class="card">
                            <div class="card-body" style="width:100%;height:100%;">
                                <div class="panel panel-primary panel-head ">
                                    <div class="panel-heading bar-style">Sales</div>
                                    <ul class="nav nav-tabs mt-2" style="border:1px solid #dee2e6;" role="tablist">
                                                <li class="nav-item">
                                                    <a class="nav-link Details-tab" data-bs-toggle="tab" href="#details" role="tab" aria-controls="details" aria-selected="true">Details</a>
                                                </li>
                                                <li class="nav-item">
                                                    <a class="nav-link Financial-tab" data-bs-toggle="tab" href="#financial" role="tab" aria-controls="financial" aria-selected="false">Financial</a>
                                                </li>
                                                <li class="nav-item">
                                                    <a class="nav-link Suppliers-tab" data-bs-toggle="tab" href="#suppliers" role="tab" aria-controls="suppliers" aria-selected="false">Suppliers</a>
                                                </li>
                                                <li class="nav-item">
                                                    <a class="nav-link Purchase-tab" data-bs-toggle="tab" href="#purchasetab" role="tab" aria-controls="purchasetab" aria-selected="false">Purchases</a>
                                                </li>
                                                <li class="nav-item" onclick="SaleItemsGet()">
                                                    <a class="nav-link Saless-tab active" data-bs-toggle="tab" href="#saless" role="tab" aria-controls="saless" aria-selected="false">Sales</a>
                                                </li>
                                                <li class="nav-item">
                                                    <a class="nav-link Features-tab" data-bs-toggle="tab" href="#features" role="tab" aria-controls="features" aria-selected="false">Features</a>
                                                </li>
                                                <li class="nav-item">
                                                    <a class="nav-link Tools-tab" data-bs-toggle="tab" href="#tools" role="tab" aria-controls="tools" aria-selected="false">Tools</a>
                                                </li>
                                                       <li class="nav-item">
                                            <a class="nav-link Attachments-tab" data-bs-toggle="tab" href="#attachments" role="tab" aria-controls="attachments" aria-selected="false">Attachments</a>
                                        </li>
                                            </ul>
                                    <div class="row mt-3">
                                        <div class="col-lg-12 col-md-12 col-sm-12 col-12 table-responsive" id="">
                                            <table class="table table-bordered table-condensed" id="itemsaletable" style="border:0.7px solid;">
                                                <thead>
                                                    <tr style="border-bottom:1.4px solid" class="grids-head">
                                                        @* <th style="width: 10px">Sr#</th> *@
                                                        <th>Invoice #</th>
                                                        <th>Date</th>
                                                        <th>Customer Name</th>
                                                        <th>Sales</th>
                                                        <th style="color:red">Return</th>
                                                        <th style="color:saddlebrown">Damage</th>
                                                        <th style="color:darkred">Cost</th>
                                                        <th style="color:darkred">Price</th>
                                                        <th style="color:darkred">Total</th>
                                                    </tr>
                                                </thead>
                                                <tbody id="appendsaleorders">
                                                </tbody>
                                            </table>

                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="tab-pane fade" id="features" role="tabpanel" aria-labelledby="Features-tab">
                    <div id="feature-main">
                        <div class="card">
                            <div class="card-body" style="width:100%;height:100%;">
                                <div class="panel panel-primary panel-head ">
                                    <div class="panel-heading bar-style">Features</div>
                                     <ul class="nav nav-tabs mt-2" style="border:1px solid #dee2e6;" role="tablist">
                                                <li class="nav-item">
                                                    <a class="nav-link Details-tab" data-bs-toggle="tab" href="#details" role="tab" aria-controls="details" aria-selected="true">Details</a>
                                                </li>
                                                <li class="nav-item">
                                                    <a class="nav-link Financial-tab" data-bs-toggle="tab" href="#financial" role="tab" aria-controls="financial" aria-selected="false">Financial</a>
                                                </li>
                                                <li class="nav-item">
                                                    <a class="nav-link Suppliers-tab" data-bs-toggle="tab" href="#suppliers" role="tab" aria-controls="suppliers" aria-selected="false">Suppliers</a>
                                                </li>
                                                <li class="nav-item">
                                                    <a class="nav-link Purchase-tab" data-bs-toggle="tab" href="#purchasetab" role="tab" aria-controls="purchasetab" aria-selected="false">Purchases</a>
                                                </li>
                                                <li class="nav-item">
                                                    <a class="nav-link Saless-tab" data-bs-toggle="tab" href="#saless" role="tab" aria-controls="saless" aria-selected="false">Sales</a>
                                                </li>
                                                <li class="nav-item">
                                                    <a class="nav-link Features-tab active" data-bs-toggle="tab" href="#features" role="tab" aria-controls="features" aria-selected="false">Features</a>
                                                </li>
                                                <li class="nav-item">
                                                    <a class="nav-link Tools-tab" data-bs-toggle="tab" href="#tools" role="tab" aria-controls="tools" aria-selected="false">Tools</a>
                                                </li>
                                                       <li class="nav-item">
                                            <a class="nav-link Attachments-tab" data-bs-toggle="tab" href="#attachments" role="tab" aria-controls="attachments" aria-selected="false">Attachments</a>
                                        </li>
                                            </ul>
                                    <h1>Features</h1>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="tab-pane fade" id="tools" role="tabpanel" aria-labelledby="Tools-tab">
                    <div id="tool-main">
                        <div class="card">
                            <div class="card-body" style="width:100%;height:100%;">
                                <div class="panel panel-primary panel-head ">
                                    <div class="panel-heading bar-style">Tools</div>
                                      <ul class="nav nav-tabs mt-2" style="border:1px solid #dee2e6;" role="tablist">
                                                <li class="nav-item">
                                                    <a class="nav-link Details-tab" data-bs-toggle="tab" href="#details" role="tab" aria-controls="details" aria-selected="true">Details</a>
                                                </li>
                                                <li class="nav-item">
                                                    <a class="nav-link Financial-tab" data-bs-toggle="tab" href="#financial" role="tab" aria-controls="financial" aria-selected="false">Financial</a>
                                                </li>
                                                <li class="nav-item">
                                                    <a class="nav-link Suppliers-tab" data-bs-toggle="tab" href="#suppliers" role="tab" aria-controls="suppliers" aria-selected="false">Suppliers</a>
                                                </li>
                                                <li class="nav-item">
                                                    <a class="nav-link Purchase-tab" data-bs-toggle="tab" href="#purchasetab" role="tab" aria-controls="purchasetab" aria-selected="false">Purchases</a>
                                                </li>
                                                <li class="nav-item">
                                                    <a class="nav-link Saless-tab" data-bs-toggle="tab" href="#saless" role="tab" aria-controls="saless" aria-selected="false">Sales</a>
                                                </li>
                                                <li class="nav-item">
                                                    <a class="nav-link Features-tab" data-bs-toggle="tab" href="#features" role="tab" aria-controls="features" aria-selected="false">Features</a>
                                                </li>
                                                <li class="nav-item">
                                                    <a class="nav-link Tools-tab active" data-bs-toggle="tab" href="#tools" role="tab" aria-controls="tools" aria-selected="false">Tools</a>
                                                </li>
                                                       <li class="nav-item">
                                            <a class="nav-link Attachments-tab" data-bs-toggle="tab" href="#attachments" role="tab" aria-controls="attachments" aria-selected="false">Attachments</a>
                                        </li>
                                            </ul>
                                    <h1>Tools</h1>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>  
                
                <div class="tab-pane fade" id="attachments" role="tabpanel" aria-labelledby="Attachments-tab">
                    <div id="tool-main">
                        <div class="card">
                            <div class="card-body" style="width:100%;height:100%;">
                                <div class="panel panel-primary panel-head ">
                                    <div class="panel-heading bar-style">Attachments</div>
                                     <ul class="nav nav-tabs mt-2" style="border:1px solid #dee2e6;" role="tablist">
                                                <li class="nav-item">
                                                    <a class="nav-link Details-tab" data-bs-toggle="tab" href="#details" role="tab" aria-controls="details" aria-selected="true">Details</a>
                                                </li>
                                                <li class="nav-item">
                                                    <a class="nav-link Financial-tab" data-bs-toggle="tab" href="#financial" role="tab" aria-controls="financial" aria-selected="false">Financial</a>
                                                </li>
                                                <li class="nav-item">
                                                    <a class="nav-link Suppliers-tab" data-bs-toggle="tab" href="#suppliers" role="tab" aria-controls="suppliers" aria-selected="false">Suppliers</a>
                                                </li>
                                                <li class="nav-item">
                                                    <a class="nav-link Purchase-tab" data-bs-toggle="tab" href="#purchasetab" role="tab" aria-controls="purchasetab" aria-selected="false">Purchases</a>
                                                </li>
                                                <li class="nav-item">
                                                    <a class="nav-link Saless-tab" data-bs-toggle="tab" href="#saless" role="tab" aria-controls="saless" aria-selected="false">Sales</a>
                                                </li>
                                                <li class="nav-item">
                                                    <a class="nav-link Features-tab" data-bs-toggle="tab" href="#features" role="tab" aria-controls="features" aria-selected="false">Features</a>
                                                </li>
                                                <li class="nav-item">
                                                    <a class="nav-link Tools-tab" data-bs-toggle="tab" href="#tools" role="tab" aria-controls="tools" aria-selected="false">Tools</a>
                                                </li>
                                                       <li class="nav-item">
                                            <a class="nav-link Attachments-tab active" data-bs-toggle="tab" href="#attachments" role="tab" aria-controls="attachments" aria-selected="false">Attachments</a>
                                        </li>
                                            </ul>
                                    <div class="row mt-3">
                                        <div class="col-lg-12 col-md-12 col-sm-12 col-12 table-responsive" id="">
                                            <table class="table table-bordered table-condensed" id="attachmenttable" style="border:0.7px solid;">
                                                <thead>
                                                    <tr style="border-bottom:1.4px solid" class="grids-head">
                                                        <th style="width: 10px">Sr#</th>
                                                        <th>Document Type</th>
                                                        <th>Name</th>
                                                        <th>Download</th>
                                                    </tr>
                                                </thead>
                                                <tbody id="appenditemdocumentsorders">
                                                </tbody>
                                            </table>

                                        </div>
                                    </div>
                                </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                </div>

            </div>

            <div id="addappendTabs" class="tab-content">
                <div id="newitemstab" class="tab-pane fade show active" role="tabpanel" aria-labelledby="Details-tab">
                    <div class="card">
                        <div class="card-body">

                            <div class="panel panel-primary panel-head ">
                                <div class="panel-heading">Items</div>
                                <ul class="nav nav-tabs mt-2" style="border:1px solid #dee2e6;" role="tablist">
                                    <li class="nav-item">
                                        <a class="nav-link Details-tab" data-bs-toggle="tab" href="#newitemstab" role="tab" aria-controls="newitemstab" aria-selected="true">Details</a>
                                    </li>
                                    <li class="nav-item">
                                        <a class="nav-link Financial-tab" data-bs-toggle="tab" href="#financial-newtab" role="tab" aria-controls="financial-newtab" aria-selected="false">Financial</a>
                                    </li>
                                    <li class="nav-item">
                                        <a class="nav-link Suppliers-tab" data-bs-toggle="tab" href="#supplierstab" role="tab" aria-controls="supplierstab" aria-selected="false">Suppliers</a>
                                    </li>
                                    <li class="nav-item">
                                        <a class="nav-link Purchase-tab" data-bs-toggle="tab" href="#purchasenewtab" role="tab" aria-controls="purchasenewtab" aria-selected="false">Purchases</a>
                                    </li>
                                    <li class="nav-item">
                                        <a class="nav-link Saless-tab" data-bs-toggle="tab" href="#salesstab" role="tab" aria-controls="salesstab" aria-selected="false">Sales</a>
                                    </li>
                                    <li class="nav-item">
                                        <a class="nav-link Features-tab" data-bs-toggle="tab" href="#featurestab" role="tab" aria-controls="featurestab" aria-selected="false">Features</a>
                                    </li>
                                    <li class="nav-item">
                                        <a class="nav-link Tools-tab" data-bs-toggle="tab" href="#toolstab" role="tab" aria-controls="toolstab" aria-selected="false">Tools</a>
                                    </li>
                                    
                                </ul>
                                <div class="row">
                                    <div class="col-lg-8 col-md-8 col-sm-8 col-8">
                                        <div class="row">
                                            <div class="col-lg-8 col-sm-8">
                                                <div class="form-group">
                                                    <label>Image</label>
                                                    <img id="output" style="width:100px; height:100px; display:none;" />
                                                    <br />
                                                    <input autocomplete="off" class="imginput" id="productImage" type="file" accept="image/*" onchange="loadFile(event)" name="ProfileImage">

                                                    <script>
                                                        var loadFile = function(event) {
                                                            var output = document.getElementById('output');
                                                            output.src = URL.createObjectURL(event.target.files[0]);
                                                            output.onload = function() {
                                                                URL.revokeObjectURL(output.src) // free memory
                                                            }
                                                            output.style.display = "block";
                                                            $("#defaultoutput").hide();
                                                        };
                                                    </script>
                                                </div>
                                            </div>
                                            <div class="col-lg-4 col-sm-4">
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-lg-8 col-sm-8">
                                                <div class="form-group">
                                                    <label class="">Name</label>
                                                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", placeholder = "Name", id = "nameu" } })
                                                    <label class="text-danger db" id="namevalidation"></label>
                                                </div>
                                            </div>
                                            <div class="col-lg-4 col-sm-4">
                                                <div class="form-group">
                                                    <label class="">Shipment Limit</label>
                                                    @Html.EditorFor(model => model.ShipmentLimit, new { htmlAttributes = new { @type = "Number", @class = "form-control", placeholder = "Shipment Limit", id = "onlinelimit" } })
                                                    <label class="text-danger db" id="onlinelimitvalidation"></label>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row" style=" margin-top: 2%;">
                                            <div class="col-lg-6 col-sm-6">
                                                <div class="form-group">
                                                    <label class="fba-r label-max-width" for="exampleFormControlSelect3">
                                                        Category
                                                    </label>
                                                    @Html.DropDownList("ItemCategoryId", (IEnumerable<SelectListItem>)ViewBag.ItemCategory, "--Choose Item Category--", new { @class = "col-md-11 dropadditemCategory", id = "categoryu" })
                                                    <label class="text-danger db" id="categoryvalidation" style="width:83%"></label>
                                                    <i class="mdi mdi-plus text-primary" data-bs-toggle="modal" data-bs-target="#additemcategory"></i>
                                                </div>
                                            </div>
                                            <div class="col-lg-6 col-sm-6">
                                                <div class="form-group">
                                                    <label class="col-sm-5">Manufacture</label>
                                                    @Html.DropDownList("BrandId", (IEnumerable<SelectListItem>)ViewBag.BrandGet, "--Choose Manufacture--", new { @class = "col-sm-10 dropadditemCategory ", id = "manufactureu" })
                                                    @Html.ValidationMessageFor(model => model.BrandId, "", new { @class = "text-danger db" })
                                                    <i class="mdi mdi-plus text-primary" data-bs-toggle="modal" data-bs-target="#addmanufacture"></i>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-lg-6 col-sm-6">
                                                <div class="form-group">
                                                    <label class="col-sm-5">Sub Category</label>
                                                    @Html.DropDownList("ItemSubCategoryId", (IEnumerable<SelectListItem>)ViewBag.ItemSubCategory, "--Choose Sub Category--", new { @class = "col-md-11 dropadditemCategory", id = "sub-categoryu" })
                                                    @Html.ValidationMessageFor(model => model.ItemSubCategoryId, "", new { @class = "text-danger db" })
                                                    <i class="mdi mdi-plus text-primary" data-bs-toggle="modal" data-bs-target="#addsubitemcategory"></i>
                                                </div>
                                            </div>
                                            <div class="col-lg-6 col-sm-6">
                                                <div class="form-group">
                                                    <label class="col-sm-5">Family</label>
                                                    @Html.DropDownList("FamilyId", (IEnumerable<SelectListItem>)ViewBag.family, "--Choose Family--", new { @class = "col-sm-10 dropadditemCategory", id = "familyu" })
                                                    @Html.ValidationMessageFor(model => model.FamilyId, "", new { @class = "text-danger db" })
                                                    <i class="mdi mdi-plus text-primary" data-bs-toggle="modal" data-bs-target="#addfamily"></i>
                                                </div>
                                            </div>
                                        </div>

                                        <div class="row">
                                            <div class="col-lg-3 col-md-3 col-sm-3 col-3">
                                                <div class="form-group">
                                                    <label class="dim col-sm-5">Retail</label>
                                                    @Html.EditorFor(model => model.Retail, new { htmlAttributes = new { @class = "form-control ", id = "retailu", placeholder = "Retail", type = "number", onkeyup = "calculate()" } })
                                                    <label class="text-danger db" id="retailvalidation" style="width:83%"></label>
                                                </div>
                                            </div>
                                            <div class="col-lg-9 col-md-9 col-sm-9 col-9">
                                                <div class="row">
                                                    <div class="col-lg-4 col-sm-4">
                                                        <div class="form-group">
                                                            <label class="dim col-sm-12">Units</label>
                                                            <div class="col-lg-12 col-md-12 col-sm-12 col-12">
                                                                @Html.EditorFor(model => model.Units, new { htmlAttributes = new { @class = "form-control", id = "unitsval", type = "number", onkeyup = "calculate()" } })
                                                                @Html.ValidationMessageFor(model => model.Units, "", new { @class = "text-danger db" })
                                                                <label class="text-danger field-validation-error db" id="ValMsgProductBarCode" style="font-size:12px;"></label>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="col-lg-4 col-sm-4">
                                                        <div class="form-group">
                                                            <label class="dim col-sm-12">Unit Charge</label>
                                                            <div class="col-lg-12 col-md-12 col-sm-12 col-12">
                                                                @Html.EditorFor(model => model.UnitCharge, new { htmlAttributes = new { @class = "form-control ", id = "unit-chargeu", type = "number", onkeydown = "calculate()" } })
                                                                @Html.ValidationMessageFor(model => model.UnitCharge, "", new { @class = "text-danger db" })
                                                                <label class="text-danger field-validation-error db" id="ValMsgProductBarCode" style="font-size:12px;"></label>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="col-lg-4 col-sm-4">
                                                        <div class="form-group">
                                                            <label class="dim col-sm-12">Unit Retail</label>
                                                            <div class="col-lg-12 col-md-12 col-sm-12 col-12">
                                                                @Html.EditorFor(model => model.UnitRetail, new { htmlAttributes = new { @class = "form-control", id = "unit-retailu", type = "number" } })
                                                                @Html.ValidationMessageFor(model => model.UnitRetail, "", new { @class = "text-danger db" })
                                                                <label class="text-danger field-validation-error db" id="ValMsgProductBarCode" style="font-size:12px;"></label>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>

                                        </div>
                                        <div class="row">
                                            <div class="col-lg-3 col-md-3 col-sm-3 col-3">
                                                <div class="form-group">
                                                    <label class="dim col-sm-12 col-12">BarCode</label>
                                                    @Html.EditorFor(model => model.BarCode, new { htmlAttributes = new { @class = "form-control ", id = "barcodeu", placeholder = "BarCode" } })
                                                    @Html.ValidationMessageFor(model => model.BarCode, "", new { @class = "text-danger db" })
                                                    <label class="text-danger field-validation-error db" id="ValidMsgProductBarCode" style="font-size:12px;"></label>
                                                </div>
                                            </div>
                                            <div class="col-lg-9 col-md-9 col-sm-9 col-9">
                                                <div class="row">
                                                    <div class="col-lg-4 col-sm-4">
                                                        <div class="form-group">
                                                            <label class="dim col-sm-12">QtyCase</label>
                                                            <div class="col-lg-12 col-md-12 col-sm-12 col-12">
                                                                @Html.EditorFor(model => model.QuantityCase, new { htmlAttributes = new { @class = "form-control ", id = "qtycaseu", type = "number" } })
                                                                @Html.ValidationMessageFor(model => model.QuantityCase, "", new { @class = "text-danger db" })
                                                                <label class="text-danger field-validation-error db" id="ValMsgProductBarCode" style="font-size:12px;"></label>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="col-lg-4 col-sm-4">
                                                        <div class="form-group">
                                                            <label class="dim col-sm-12">Qty:Pallet</label>
                                                            <div class="col-lg-12 col-md-12 col-sm-12 col-12">
                                                                @Html.EditorFor(model => model.QuantityPallet, new { htmlAttributes = new { @class = "form-control", id = "qtypalletu", type = "number" } })
                                                                @Html.ValidationMessageFor(model => model.QuantityPallet, "", new { @class = "text-danger db" })
                                                                <label class="text-danger field-validation-error db" id="ValMsgProductBarCode" style="font-size:12px;"></label>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="col-lg-4 col-sm-4">
                                                        <div class="form-group">
                                                            <label class="dim col-sm-12">SingleUnitMSA</label>
                                                            <div class="col-lg-12 col-md-12 col-sm-12 col-12">
                                                                @Html.EditorFor(model => model.SingleUnitMsa, new { htmlAttributes = new { @class = "form-control ", id = "sunitmsau", } })
                                                                @Html.ValidationMessageFor(model => model.SingleUnitMsa, "", new { @class = "text-danger db" })
                                                                <label class="text-danger field-validation-error db" id="ValMsgProductBarCode" style="font-size:12px;"></label>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>

                                        </div>

                                        <div class="row mb-0">
                                            <div class="col-lg-6 col-sm-6">
                                                <div class="form-group">
                                                    <label class="dim col-sm-12">Location(Slot)</label>
                                                    @Html.EditorFor(model => model.Location, new { htmlAttributes = new { @class = "form-control txtinput", placeholder = "Location", id = "locationslotu" } })
                                                    @Html.ValidationMessageFor(model => model.Location, "", new { @class = "text-danger db" })
                                                    <label class="text-danger field-validation-error db" id="ValMsgProductBarCode" style="font-size:12px;"></label>
                                                </div>
                                            </div>
                                            <div class="col-lg-6 col-sm-6">
                                                <div class="form-group">
                                                    <label class="dim col-sm-12">Group</label>
                                                    @Html.DropDownList("GroupId", (IEnumerable<SelectListItem>)ViewBag.Group, "--Choose Group--", new { @class = "col-md-11 dropadditemCategory", id = "groupu" })
                                                    <i class="mdi mdi-plus text-primary" data-bs-toggle="modal" data-bs-target="#addgroup"></i>
                                                    @Html.ValidationMessageFor(model => model.GroupId, "", new { @class = "text-danger db" })
                                                    <label class="text-danger field-validation-error db" id="ValMsgProductBarCode" style="font-size:12px;"></label>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-lg-6 col-sm-6">
                                                <div class="form-group">
                                                    <label class="dim col-sm-12">Location 2</label>
                                                    @Html.EditorFor(model => model.LocationTwo, new { htmlAttributes = new { @class = "form-control txtinput", placeholder = "Location", id = "location2u" } })
                                                    @Html.ValidationMessageFor(model => model.LocationTwo, "", new { @class = "text-danger db" })
                                                    <label class="text-danger field-validation-error db" id="ValMsgProductBarCode" style="font-size:12px;"></label>
                                                </div>
                                            </div>
                                            <div class="col-lg-6 col-sm-6">
                                                <div class="form-group">
                                                    <label class="dim col-sm-12">Mispick</label>
                                                    @Html.DropDownList("MisPickId", (IEnumerable<SelectListItem>)ViewBag.family, "--Choose Mispick--", new { @class = "col-sm-11 dropadditemCategory", id = "mispicku" })
                                                    <i class="mdi mdi-plus text-primary" data-bs-toggle="modal" data-bs-target="#addmispick"></i>
                                                    @Html.ValidationMessageFor(model => model.MisPickId, "", new { @class = "text-danger db" })
                                                    <label class="text-danger field-validation-error db" id="ValMsgProductBarCode" style="font-size:12px;"></label>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-lg-6 col-sm-6">
                                                <div class="form-group">
                                                    <label class="dim col-sm-12">Location 3</label>
                                                    @Html.EditorFor(model => model.LocationThree, new { htmlAttributes = new { @class = "form-control txtinput", placeholder = "Location", id = "location3u" } })
                                                    @Html.ValidationMessageFor(model => model.LocationThree, "", new { @class = "text-danger db" })
                                                    <label class="text-danger field-validation-error db" id="ValMsgProductBarCode" style="font-size:12px;"></label>
                                                </div>
                                            </div>
                                            <div class="col-lg-6 col-sm-6">
                                                <div class="form-group">
                                                    <label class="dim col-sm-12">Color</label>
                                                    @Html.DropDownList("ColorId", (IEnumerable<SelectListItem>)ViewBag.Color, "--Choose Color--", new { @class = "col-sm-11 dropadditemCategory", id = "coloru" })
                                                    <i class="mdi mdi-plus text-primary" data-bs-toggle="modal" data-bs-target="#addcolor"></i>
                                                    @Html.ValidationMessageFor(model => model.ColorId, "", new { @class = "text-danger db" })
                                                    <label class="text-danger field-validation-error db" id="ValMsgProductBarCode" style="font-size:12px;"></label>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-lg-5 col-sm-5">
                                                <div class="form-group">
                                                    <label class="dim col-sm-12">Location 4</label>
                                                    @Html.EditorFor(model => model.LocationFour, new { htmlAttributes = new { @class = "form-control txtinput", placeholder = "Location", id = "location4u" } })
                                                    @Html.ValidationMessageFor(model => model.LocationFour, "", new { @class = "text-danger db" })
                                                    <label class="text-danger field-validation-error db" id="ValMsgProductBarCode" style="font-size:12px;"></label>
                                                </div>
                                            </div>
                                            <div class="col-lg-7">
                                                <div class="row">
                                                    <div class="col-lg-4 col-sm-4">
                                                        <div class="form-group">
                                                            <label class="dim col-sm-12">Weight(lb)</label>
                                                            <div class="col-lg-12 col-md-12 col-sm-12 col-12">
                                                                @Html.EditorFor(model => model.WeightLb, new { htmlAttributes = new { @class = "form-control txtinput", id = "weightlbu" } })
                                                                @Html.ValidationMessageFor(model => model.WeightLb, "", new { @class = "text-danger db" })
                                                                <label class="text-danger field-validation-error db" id="ValMsgProductBarCode" style="font-size:12px;"></label>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="col-lg-4 col-sm-4">
                                                        <div class="form-group">
                                                            <label class="dim col-sm-12">Weight(Oz)</label>
                                                            <div class="col-lg-12 col-md-12 col-sm-12 col-12">
                                                                @Html.EditorFor(model => model.WeightOz, new { htmlAttributes = new { @class = "form-control txtinput", id = "weightozu" } })
                                                                @Html.ValidationMessageFor(model => model.WeightOz, "", new { @class = "text-danger db" })
                                                                <label class="text-danger field-validation-error db" id="ValMsgProductBarCode" style="font-size:12px;"></label>
                                                            </div>
                                                        </div>
                                                    </div>
                                                   
                                                </div>
                                            </div>

                                        </div>


                                    </div>
                                    <div class="col-lg-3 col-md-3 col-sm-3 col-3">
                                        <div class="row">
                                            <div class="col-lg-12 col-md-12 col-sm-12 col-12">
                                                <div class="form-group">
                                                    <label class=""></label>

                                                    <input style="visibility:hidden" />
                                                    <input style="visibility:hidden" />
                                                </div>
                                            </div>
                                            <div class="col-lg-12 col-md-12 col-sm-12 col-12">
                                                <div class="form-group">
                                                    <label class="">SalesLimit</label>
                                                    @Html.EditorFor(model => model.SalesLimit, new { htmlAttributes = new { @class = "form-control", placeholder = "SalesLimit", type = "number", id = "saleslimitu", @readonly = true } })
                                                    @Html.ValidationMessageFor(model => model.SalesLimit, "", new { @class = "text-danger db" })
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-lg-12 col-md-12 col-sm-12 col-12">
                                                <div class="form-group">
                                                    <label class="col-sm-12">MSAReportAs (00001)</label>
                                                    <select class="form-control">
                                                        <option>----Select----</option>


                                                    </select>
                                                </div>
                                                <div class="form-group">
                                                    <label class="col-sm-12">State Report As</label>
                                                    @Html.DropDownList("StateReportAs", (IEnumerable<SelectListItem>)ViewBag.family, "-----Choose State------", new { @class = "col-sm-12 dropadditemCategory" })
                                                    @Html.ValidationMessageFor(model => model.StateReportAs, "", new { @class = "text-danger db" })

                                                </div>
                                            </div>
                                        </div>
                                        <div class="row">

                                            <div class="col-lg-12 col-md-12 col-sm-12 col-12">
                                                <br />
                                                <div class="form-group">
                                                    <label class="dim col-sm-12">Reporting Weight:</label>
                                                    @Html.EditorFor(model => model.ReportingWeight, new { htmlAttributes = new { @class = "form-control", placeholder = "ReportingWeightu", } })
                                                    @Html.ValidationMessageFor(model => model.ReportingWeight, "", new { @class = "text-danger db" })
                                                </div>
                                                <div class="form-group">
                                                    <label class="dim col-sm-8">Unit:</label>
                                                    <select class="form-control">
                                                        <option>------Select---------</option>
                                                        <option>LB</option>
                                                        <option>OZ</option>


                                                    </select>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <br /><br /><br /><br />
                                        </div>
                                        <div class="row">
                                            <div class="col-lg-12 col-md-12 col-sm-12 col-12" style=" border: 1px solid; height:50%;">
                                                <div class="form-group">
                                                    <label class="dim col-sm-12">Order Quantity</label>
                                                    @Html.EditorFor(model => model.OrderQuantity, new { htmlAttributes = new { @class = "form-control txtinput", placeholder = "Order qnty", id = "orderqntyu" } })
                                                    @Html.ValidationMessageFor(model => model.OrderQuantity, "", new { @class = "text-danger db" })
                                                    <label class="text-danger field-validation-error db" id="ValMsgProductBarCode" style="font-size:12px;"></label>
                                                </div>
                                                <div class="form-group">
                                                    <label class="dim col-sm-12">Max Quantity</label>
                                                    @Html.EditorFor(model => model.MaxOrderQty, new { htmlAttributes = new { @class = "form-control txtinput", placeholder = "Max Quantity", id = "maxqntyu", onkeypress = "ManageRatio()" } })
                                                    @Html.ValidationMessageFor(model => model.MaxOrderQty, "", new { @class = "text-danger db" })
                                                    <label class="text-danger field-validation-error db" id="ValMsgProductBarCode" style="font-size:12px;"></label>
                                                </div>
                                                <div class="form-group">
                                                    <label class="dim col-sm-12">Min Quantity</label>
                                                    @Html.EditorFor(model => model.MinOrderQty, new { htmlAttributes = new { @class = "form-control txtinput", placeholder = "Min Quantity", id = "minqntyu" } })
                                                    @Html.ValidationMessageFor(model => model.MinOrderQty, "", new { @class = "text-danger db" })
                                                    <label class="text-danger field-validation-error db" id="ValMsgProductBarCode" style="font-size:12px;"></label>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-lg-1 col-md-1 col-sm-1 col-1">
                                        <div class="form-group">
                                            <label>
                                                On/Off
                                            </label>
                                            @*@Html.CheckBox("Financial.SellBelowCost", false)*@
                                            @Html.CheckBox("IsActive", true)
                                        </div>
                                        <div class="progress progress-bar-vertical" style="height: 40%;width:80%;">
                                            <div id="setprogresslevel" class="progress-bar" role="progressbar" aria-valuenow="50" aria-valuemin="0" aria-valuemax="100" style="height: 60%;">50%</div>
                                        </div>
                                        <span class="add-style">Stock Level</span>

                                    </div>
                                </div>
                                <div class="row">
                                    @*<div class="col-lg-2 col-md-2 col-sm-2 col-2">

                                    </div>*@
                                    <div class="col-lg-4 col-md-4 col-sm-4 col-4">
                                        <label class="dim col-sm-12">SalesLimitAges</label>
                                        @Html.DropDownList("MaintainStockForDays", (IEnumerable<SelectListItem>)ViewBag.NoOfDays, "--Choose Age--", new { @style = "color: black", @class = "form-control", id = "MaintainStockForDaysu" })
                                        @Html.ValidationMessageFor(model => model.MaintainStockForDays, "", new { @class = "text-danger db" })

                                    </div>

                                    <div class="col-lg-4 col-md-4 col-sm-4 col-4">
                                        <label class="col-sm-12">Need High Authorization</label>
                                        @Html.CheckBox("NeedHighAuthorization", Model.NeedHighAuthorization, new { @id = "CheckBoxNHA" })
                                    </div>


                                </div>
                                <div class="row" id="HighlimitOn" style="display:none">
                                    <div class="col-lg-4 col-md-4 col-sm-4 col-4">
                                        <label class="dim col-sm-12">High limit On</label>
                                        @Html.EditorFor(model => model.HighlimitOn, new { htmlAttributes = new { @class = "form-control txtinput", placeholder = "High limit On", id = "highlimiton" } })
                                        <label class="text-danger field-validation-error db" id="HighlimitOnValidation" style="font-size:12px;"></label>
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-4 col-sm-4"></div>

                        </div>

                    </div>
                </div>

                <div id="financial-newtab" class="tab-pane fade" role="tabpanel" aria-labelledby="Financial-tab">
                    <div class="card">
                        <div class="card-body">

                            <div class="container-fluid" style="margin:0px;padding:0px;">
                                <div class="row">
                                    <div class="col-lg-12 col-md-12 col-sm-12 col-12">
                                        <div class="panel panel-primary panel-head ">
                                            <div class="panel-heading">Financial</div>

                                            <ul class="nav nav-tabs mt-2" style="border:1px solid #dee2e6;" role="tablist">
                                                <li class="nav-item">
                                                    <a class="nav-link Details-tab" data-bs-toggle="tab" href="#newitemstab" role="tab" aria-controls="newitemstab" aria-selected="true">Details</a>
                                                </li>
                                                <li class="nav-item">
                                                    <a class="nav-link Financial-tab active" data-bs-toggle="tab" href="#financial-newtab" role="tab" aria-controls="financial-newtab" aria-selected="false">Financial</a>
                                                </li>
                                                <li class="nav-item">
                                                    <a class="nav-link Suppliers-tab" data-bs-toggle="tab" href="#supplierstab" role="tab" aria-controls="supplierstab" aria-selected="false">Suppliers</a>
                                                </li>
                                                <li class="nav-item">
                                                    <a class="nav-link Purchase-tab" data-bs-toggle="tab" href="#purchasenewtab" role="tab" aria-controls="purchasenewtab" aria-selected="false">Purchases</a>
                                                </li>
                                                <li class="nav-item">
                                                    <a class="nav-link Saless-tab" data-bs-toggle="tab" href="#salesstab" role="tab" aria-controls="salesstab" aria-selected="false">Sales</a>
                                                </li>
                                                <li class="nav-item">
                                                    <a class="nav-link Features-tab" data-bs-toggle="tab" href="#featurestab" role="tab" aria-controls="featurestab" aria-selected="false">Features</a>
                                                </li>
                                                <li class="nav-item">
                                                    <a class="nav-link Tools-tab" data-bs-toggle="tab" href="#toolstab" role="tab" aria-controls="toolstab" aria-selected="false">Tools</a>
                                                </li>
                                             
                                            </ul>
                                            <div class="row">
                                            </div>
                                            <div class="row ">
                                                <div class="col">
                                                    <div class="row">
                                                        <div class="col-md-4 padding-lr">
                                                            <div class="form-group">
                                                                <label class="col-sm-12">Cost</label>
                                                                <div class="col-sm-12">
                                                                    @Html.EditorFor(model => model.Cost, new { htmlAttributes = new { @class = "form-control", id = "costN", type = "number", onkeyup = "calculateF()" } })
                                                                    <label class="text-danger db" id="costvalidation"></label>
                                                                </div>
                                                            </div>
                                                        </div>
                                                        <div class="col-md-4 padding-lr">
                                                            <div class="form-group">
                                                                <label class="col-sm-12">Retail</label>
                                                                <div class="col-sm-12">
                                                                    @Html.EditorFor(model => model.Retail, new { htmlAttributes = new { @class = "form-control", id = "retailN", type = "number" } })
                                                                    @Html.ValidationMessageFor(model => model.Retail, "", new { @class = "text-danger db" })
                                                                </div>
                                                            </div>
                                                        </div>

                                                        <div class="col-md-4 padding-lr">
                                                            <div class="form-group">
                                                                <label class="col-sm-12">Profit%</label>
                                                                <div class="col-sm-12">
                                                                    @Html.EditorFor(model => model.Financial.Profit, new { htmlAttributes = new { @class = "form-control", id = "profitpercntN", type = "number" } })
                                                                    @Html.ValidationMessageFor(model => model.Financial.Profit, "", new { @class = "text-danger db" })
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="row">

                                                        <div class="col-md-4 padding-lr">
                                                            <div class="form-group">
                                                                <label class="col-sm-12">MfgPromotion</label>
                                                                <div class="col-sm-12">
                                                                    @Html.EditorFor(model => model.Financial.MsgPromotion, new { htmlAttributes = new { @class = "form-control", id = "mfgpromotionN" } })
                                                                    @Html.ValidationMessageFor(model => model.Financial.MsgPromotion, "", new { @class = "text-danger db" })
                                                                </div>
                                                            </div>
                                                        </div>
                                                        <div class="col-md-4 padding-lr">
                                                            <div class="form-group">
                                                                <label class="col-sm-12">AddToCost%</label>
                                                                <div class="col-sm-12">
                                                                    @Html.EditorFor(model => model.Financial.AddToCost, new { htmlAttributes = new { @class = "form-control", type = "number", id = "addtocostN" } })
                                                                    @Html.ValidationMessageFor(model => model.Financial.AddToCost, "", new { @class = "text-danger db" })
                                                                </div>
                                                            </div>
                                                        </div>

                                                        <div class="col-md-4 padding-lr">
                                                            <div class="form-group">
                                                                <label class="col-sm-12">Unit Charge</label>
                                                                <div class="col-sm-12">
                                                                    @Html.EditorFor(model => model.UnitCharge, new { htmlAttributes = new { @class = "form-control", type = "number", id = "unitchargeN" } })
                                                                    @Html.ValidationMessageFor(model => model.UnitCharge, "", new { @class = "text-danger db" })
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="row">
                                                        <div class="col-md-5 padding-lr">
                                                            <div class="form-group">
                                                                <label class="col-sm-12">OutofstateCost</label>
                                                                <div class="col-sm-12">
                                                                    @Html.EditorFor(model => model.Financial.OutOfStateCost, new { htmlAttributes = new { @class = "form-control", id = "outofstatecostN", type = "number" } })
                                                                    @Html.ValidationMessageFor(model => model.Financial.OutOfStateCost, "", new { @class = "text-danger db" })
                                                                </div>
                                                            </div>
                                                        </div>
                                                        <div class="col-md-5 padding-lr">
                                                            <div class="form-group">
                                                                <label class="col-sm-12">OutOfStateRetail</label>
                                                                <div class="col-sm-12">
                                                                    @Html.EditorFor(model => model.Financial.OutOfStateRetail, new { htmlAttributes = new { @class = "form-control", id = "outofstateretailN", type = "number" } })
                                                                    @Html.ValidationMessageFor(model => model.Financial.OutOfStateRetail, "", new { @class = "text-danger db" })
                                                                </div>
                                                            </div>
                                                        </div>
                                                        <div class="col-md-3 padding-lr">
                                                            <div class="form-group">
                                                                <label>.</label>
                                                                <div class="col-sm-12">
                                                                    @*@Html.EditorFor(model => model.OutofstateRetail, new { htmlAttributes = new { @class = "form-control", type = "number", id = "dotfield" } })
                                                                    @Html.ValidationMessageFor(model => model.OutofstateRetail, "", new { @class = "text-danger db" })*@
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="col">
                                                    <table class="table table-bordered">
                                                        <thead>
                                                            <tr>
                                                                <th scope="col">Code</th>
                                                                <th scope="col">Price</th>
                                                                <th scope="col">Qty</th>
                                                                <th scope="col">Qty Price</th>
                                                            </tr>
                                                        </thead>
                                                        <tbody>
                                                            <tr>
                                                                <th scope="row">A</th>
                                                                <td>Mark</td>
                                                                <td>Otto</td>
                                                                <td>mdo</td>
                                                            </tr>
                                                            <tr>
                                                                <th scope="row">B</th>
                                                                <td>Jacob</td>
                                                                <td>Thornton</td>
                                                                <td>fat</td>
                                                            </tr>
                                                            <tr>
                                                                <th scope="row">C</th>
                                                                <td>Larry</td>
                                                                <td>the Bird</td>
                                                                <td>twitter</td>
                                                            </tr>
                                                            <tr>
                                                                <th scope="row">D</th>
                                                                <td>Larry</td>
                                                                <td>the Bird</td>
                                                                <td>twitter</td>
                                                            </tr>
                                                            <tr>
                                                                <th scope="row">Out of State</th>
                                                                <td>Larry</td>
                                                                <td>the Bird</td>
                                                                <td>twitter</td>
                                                            </tr>
                                                        </tbody>
                                                    </table>
                                                </div>
                                                <div class="col">
                                                    <div style="border:1px solid">
                                                        <div class="form-group mb-0 ms-2">
                                                            @Html.CheckBox("Financial.AskForPricing", false, new { id = "askforpricingN", })
                                                            @Html.ValidationMessageFor(model => model.Financial.AskForPricing, "", new { @class = "text-danger db" })
                                                            <label class="form-check-label">
                                                                AskForPricing
                                                            </label>
                                                        </div>
                                                        <div class="form-group mb-0 ms-2">
                                                            @Html.CheckBox("Financial.AskForDescrip", false, new { id = "askfordescN", })
                                                            @Html.ValidationMessageFor(model => model.Financial.AskForDescrip, "", new { @class = "text-danger db" })
                                                            <label class="form-check-label">
                                                                AskForDesc
                                                            </label>
                                                        </div>
                                                        <div class="form-group mb-0 ms-2">
                                                            @Html.CheckBox("Financial.Serialized", false, new { id = "serializedN", })
                                                            @Html.ValidationMessageFor(model => model.Financial.Serialized, "", new { @class = "text-danger db" })
                                                            <label class="form-check-label">
                                                                Serialized
                                                            </label>
                                                        </div>
                                                        <div class="form-group mb-0 ms-2">
                                                            @Html.CheckBox("Financial.TaxOnSales", false, new { id = "taxonsalesN", })
                                                            @Html.ValidationMessageFor(model => model.Financial.TaxOnSales, "", new { @class = "text-danger db" })
                                                            <label class="form-check-label">
                                                                TaxOnSales
                                                            </label>
                                                        </div>
                                                        <div class="form-group mb-0 ms-2">
                                                            @Html.CheckBox("Financial.Purchase", false, new { id = "purchaseN", })
                                                            @Html.ValidationMessageFor(model => model.Financial.Purchase, "", new { @class = "text-danger db" })
                                                            <label class="form-check-label">
                                                                Purchase
                                                            </label>
                                                        </div>
                                                        <div class="form-group mb-0 ms-2">
                                                            @Html.CheckBox("Financial.NoSuchDiscount", false, new { id = "nosuchdiscountN", })
                                                            @Html.ValidationMessageFor(model => model.Financial.NoSuchDiscount, "", new { @class = "text-danger db" })
                                                            <label class="form-check-label">
                                                                NoSuchDiscount
                                                            </label>
                                                        </div>
                                                        <div class="form-group mb-0 ms-2">
                                                            @Html.CheckBox("Financial.NoReturns", false, new { id = "noreturnsN", })
                                                            @Html.ValidationMessageFor(model => model.Financial.NoReturns, "", new { @class = "text-danger db" })
                                                            <label class="form-check-label labelred">
                                                                NoReturns
                                                            </label>
                                                        </div>
                                                        <div class="form-group ms-2">
                                                            @Html.CheckBox("Financial.SellBelowCost", false, new { id = "sellbelowcostN", })
                                                            @Html.ValidationMessageFor(model => model.Financial.SellBelowCost, "", new { @class = "text-danger db" })
                                                            <label class="form-check-label labelred">
                                                                SellBelowCost
                                                            </label>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="row">
                                                <div class="col-lg-4 col-md-4 col-sm-4 col-4">
                                                    <table class="table table-borderless" style="border:1px solid;">
                                                        <thead class="thead-light">
                                                            <tr>
                                                                <th scope="col">ST</th>
                                                                <th scope="col">Tax</th>
                                                                <th scope="col">Cost</th>
                                                                <th scope="col">Retail</th>
                                                            </tr>
                                                        </thead>
                                                        <tbody>
                                                            <tr>
                                                                <td>Larry</td>
                                                            </tr>
                                                            <tr>
                                                                <td>Larry</td>
                                                            </tr>
                                                            <tr>
                                                                <td>Larry</td>
                                                            </tr>
                                                        </tbody>
                                                    </table>
                                                    <button class="btn btn-lg mt-2" style="width:17.5rem;" type="button"><span style="color:red;">Special Customer Price</span></button>
                                                    <div class="row ms-1" style="border: 1px solid; width: 100%;">
                                                        <div class="col-lg-6">
                                                            <div class="form-group">
                                                                <label class="col-sm-12">SgstdRetailPrice</label>
                                                                <div class="col-sm-12">
                                                                    @Html.EditorFor(model => model.Financial.SuggestedRetailPrice, new { htmlAttributes = new { @class = "form-control", type = "number", id = "sgtdretailpriceN" } })
                                                                    @Html.ValidationMessageFor(model => model.Financial.SuggestedRetailPrice, "", new { @class = "text-danger db" })
                                                                </div>
                                                            </div>
                                                        </div>
                                                        <div class="col-lg-6">
                                                            <div class="form-group " style="margin-top:30%;">
                                                                @Html.CheckBox("Financial.AutoSetSrp", false, new { id = "autosetsrp", })

                                                                <label class="form-check-label">
                                                                    Auto Set SRP
                                                                </label>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="col-lg-7 col-md-7 col-sm-7 col-7">
                                                    <div class="row" style="border:1px solid">
                                                        <div class="row">
                                                            <div class="col">

                                                                <button class="btn-info btn-qty">Qty Price</button>

                                                            </div>
                                                            <div class="col">

                                                                <label>Price</label>
                                                                <input type="number" class="form-control">
                                                            </div>
                                                            <div class="col">
                                                                <label>Quantity</label>
                                                                <input type="text" class="form-control" placeholder="Quantity">
                                                            </div>
                                                            <div class="col">
                                                                <label>Qty Price</label>
                                                                <input type="text" class="form-control" placeholder="Qty Price">
                                                            </div>

                                                        </div>
                                                        <div class="row mt-3">
                                                            <div class="col">

                                                                <label class="mt-2">Out of State Sale</label>

                                                            </div>
                                                            <div class="col">

                                                                <input type="number" class="form-control">
                                                            </div>
                                                            <div class="col">

                                                                <input type="text" class="form-control" placeholder="">
                                                            </div>
                                                            <div class="col">
                                                                <input type="text" class="form-control" placeholder="">
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="row mb-2 mt-2" style="border:1px solid">
                                                        <div class="row pt-1">
                                                            <div class="col-lg-3 col-md-3 col-sm-3 col-3" style="display:inline-flex">
                                                                <label class="me-1"> Discount</label>
                                                                <div class="col-lg-7 col-md-7 col-sm-7 col-7">
                                                                    @*@Html.EditorFor(model => model., new { htmlAttributes = new { @class = "form-control", type = "number", id = "discount" } })*@
                                                                </div>
                                                            </div>
                                                            <div class="col-lg-3 col-md-3 col-sm-3 col-3" style="display:inline-flex">
                                                                <div class="">
                                                                    @Html.EditorFor(model => model.Cost, new { htmlAttributes = new { @class = "form-control", type = "number", id = "percntN" } })
                                                                </div>
                                                                <label class="me-1">%</label>
                                                            </div>
                                                            <div class="col-lg-3 col-md-3 col-sm-3 col-3" style="display:inline-flex">
                                                                <label class="me-1"> From</label>
                                                                <div class="">
                                                                    @*@Html.EditorFor(model => model.From, new { htmlAttributes = new { @class = "form-control", type = "number", id = "from" } })*@
                                                                </div>
                                                            </div>
                                                            <div class="col-lg-3 col-md-3 col-sm-3 col-3" style="display:inline-flex">
                                                                <label class="me-1"> To</label>
                                                                <div class="">
                                                                    @*@Html.EditorFor(model => model., new { htmlAttributes = new { @class = "form-control", type = "number", id = "to" } })*@
                                                                </div>
                                                            </div>
                                                        </div>
                                                        <div class="row">
                                                            <div class="form-group mb-0 mt-1 ms-2" style=" text-align-last: justify;">
                                                                <label class="form-check-label me-1">
                                                                    Apply to All
                                                                </label>
                                                                @*@Html.EditorFor(model => model.Aa, new { @class = "form-check-input", type = "checkbox", id = "applytoall" })*@
                                                                @Html.CheckBox("Financial.Retail", false, new { id = "retailN", })
                                                                <label class="form-check-label">
                                                                    Retail
                                                                </label>

                                                                @Html.CheckBox("Financial.CodeA", false, new { id = "codeaN", })
                                                                <label class="form-check-label">
                                                                    Code A
                                                                </label>

                                                                @Html.CheckBox("Financial.CodeB", false, new { id = "codebN", })
                                                                <label class="form-check-label">
                                                                    Code B
                                                                </label>

                                                                @Html.CheckBox("Financial.CodeC", false, new { id = "codecN", })
                                                                <label class="form-check-label">
                                                                    Code C
                                                                </label>

                                                                @Html.CheckBox("Financial.CodeD", false, new { id = "codedN", })
                                                                <label class="form-check-label">
                                                                    Code D
                                                                </label>
                                                            </div>
                                                            <div class="form-group mb-0 mt-1 ms-2">
                                                                @Html.CheckBox("Financial.AddCustomersDiscount", false, new { id = "addcustomersdiscountN", })

                                                                <label class="form-check-label">
                                                                    Add Customer's Discount
                                                                </label>
                                                            </div>
                                                        </div>

                                                    </div>
                                                    <div class="row pt-1 pb-1" style="border:1px solid">
                                                        <div class="col-lg-2 col-md-2 col-sm-2 col-2" style="display:inline-flex">
                                                            <label class="me-1"> Buy</label>
                                                            <div class="col-lg-12 col-md-12 col-sm-12 col-12">
                                                                @*@Html.EditorFor(model => model.Buy, new { htmlAttributes = new { @class = "form-control", type = "number", id = "buy" } })*@
                                                            </div>
                                                        </div>
                                                        <div class="col-lg-2 col-md-2 col-sm-2 col-2" style="display:inline-flex">
                                                            <label class="me-1 ms-1"> Get</label>
                                                            <div class="col-lg-12 col-md-12 col-sm-12 col-12">
                                                                @*@Html.EditorFor(model => model.Get, new { htmlAttributes = new { @class = "form-control", type = "number", id = "get" } })*@
                                                            </div>
                                                        </div>
                                                        <div class="col-lg-2 col-md-2 col-sm-2 col-2" style="display:inline-flex">
                                                            <label class="me-1 ms-1"> @@</label>
                                                            <div class="col-lg-12 col-md-12 col-sm-12 col-12">
                                                                @Html.EditorFor(model => model.Cost, new { htmlAttributes = new { @class = "form-control", type = "number", id = "attsignN" } })
                                                            </div>
                                                            <label> %</label>
                                                        </div>
                                                        <div class="col-lg-3 col-md-3 col-sm-3 col-3" style="display:inline-flex">
                                                            <label class="me-1 ms-2"> From</label>
                                                            <div class="">
                                                                @*@Html.EditorFor(model => model.From, new { htmlAttributes = new { @class = "form-control", type = "number", id = "fromm" } })*@
                                                            </div>
                                                        </div>
                                                        <div class="col-lg-3 col-md-3 col-sm-3 col-3" style="display:inline-flex">
                                                            <label class="me-1"> To</label>
                                                            <div class="">
                                                                @*@Html.EditorFor(model => model.To, new { htmlAttributes = new { @class = "form-control", type = "number", id = "too" } })*@
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>


                                            @*<div class="col-lg-4 col-sm-4 fr" style="margin-right:-17%">
                                            <button type="submit" class="btn btn-lg btn-dark me-3 wd-50"><p style="color:white">Save</p></button>
                                            </div>*@

                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="tab-pane fade" id="supplierstab" role="tabpanel" aria-labelledby="Suppliers-tab">
                    <div id="supplier-main">
                        <div class="card">
                            <div class="card-body" style="width:100%;height:100%;">
                                <div class="panel panel-primary panel-head ">
                                    <div class="panel-heading bar-style">Supplier</div>
                                    <ul class="nav nav-tabs mt-2" style="border:1px solid #dee2e6;" role="tablist">
                                        <li class="nav-item">
                                            <a class="nav-link Details-tab" data-bs-toggle="tab" href="#newitemstab" role="tab" aria-controls="newitemstab" aria-selected="true">Details</a>
                                        </li>
                                        <li class="nav-item">
                                            <a class="nav-link Financial-tab" data-bs-toggle="tab" href="#financial-newtab" role="tab" aria-controls="financial-newtab" aria-selected="false">Financial</a>
                                        </li>
                                        <li class="nav-item">
                                            <a class="nav-link Suppliers-tab active" data-bs-toggle="tab" href="#supplierstab" role="tab" aria-controls="supplierstab" aria-selected="false">Suppliers</a>
                                        </li>
                                        <li class="nav-item">
                                            <a class="nav-link Purchase-tab" data-bs-toggle="tab" href="#purchasenewtab" role="tab" aria-controls="purchasenewtab" aria-selected="false">Purchases</a>
                                        </li>
                                        <li class="nav-item">
                                            <a class="nav-link Saless-tab" data-bs-toggle="tab" href="#salesstab" role="tab" aria-controls="salesstab" aria-selected="false">Sales</a>
                                        </li>
                                        <li class="nav-item">
                                            <a class="nav-link Features-tab" data-bs-toggle="tab" href="#featurestab" role="tab" aria-controls="featurestab" aria-selected="false">Features</a>
                                        </li>
                                        <li class="nav-item">
                                            <a class="nav-link Tools-tab" data-bs-toggle="tab" href="#toolstab" role="tab" aria-controls="toolstab" aria-selected="false">Tools</a>
                                        </li>
                                       
                                    </ul>
                                    <div class="emptygrid"></div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="tab-pane fade" id="purchasenewtab" role="tabpanel" aria-labelledby="Purchase-tab">
                    <div id="purchase-main">
                        <div class="card">
                            <div class="card-body" style="width:100%;height:100%;">
                                <div class="panel panel-primary panel-head ">
                                    <div class="panel-heading bar-style">Purchase</div>
                                    <ul class="nav nav-tabs mt-2" style="border:1px solid #dee2e6;" role="tablist">
                                        <li class="nav-item">
                                            <a class="nav-link Details-tab" data-bs-toggle="tab" href="#newitemstab" role="tab" aria-controls="newitemstab" aria-selected="true">Details</a>
                                        </li>
                                        <li class="nav-item">
                                            <a class="nav-link Financial-tab" data-bs-toggle="tab" href="#financial-newtab" role="tab" aria-controls="financial-newtab" aria-selected="false">Financial</a>
                                        </li>
                                        <li class="nav-item">
                                            <a class="nav-link Suppliers-tab" data-bs-toggle="tab" href="#supplierstab" role="tab" aria-controls="supplierstab" aria-selected="false">Suppliers</a>
                                        </li>
                                        <li class="nav-item">
                                            <a class="nav-link Purchase-tab active" data-bs-toggle="tab" href="#purchasenewtab" role="tab" aria-controls="purchasenewtab" aria-selected="false">Purchases</a>
                                        </li>
                                        <li class="nav-item">
                                            <a class="nav-link Saless-tab" data-bs-toggle="tab" href="#salesstab" role="tab" aria-controls="salesstab" aria-selected="false">Sales</a>
                                        </li>
                                        <li class="nav-item">
                                            <a class="nav-link Features-tab" data-bs-toggle="tab" href="#featurestab" role="tab" aria-controls="featurestab" aria-selected="false">Features</a>
                                        </li>
                                        <li class="nav-item">
                                            <a class="nav-link Tools-tab" data-bs-toggle="tab" href="#toolstab" role="tab" aria-controls="toolstab" aria-selected="false">Tools</a>
                                        </li>
                                       
                                    </ul>
                                    <h1>Purchase</h1>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="tab-pane fade" id="salesstab" role="tabpanel" aria-labelledby="Saless-tab">
                    <div id="sale-main">
                        <div class="card">
                            <div class="card-body" style="width:100%;height:100%;">
                                <div class="panel panel-primary panel-head ">
                                    <div class="panel-heading bar-style">Sales</div>
                                    <ul class="nav nav-tabs mt-2" style="border:1px solid #dee2e6;" role="tablist">
                                        <li class="nav-item">
                                            <a class="nav-link Details-tab" data-bs-toggle="tab" href="#newitemstab" role="tab" aria-controls="newitemstab" aria-selected="true">Details</a>
                                        </li>
                                        <li class="nav-item">
                                            <a class="nav-link Financial-tab" data-bs-toggle="tab" href="#financial-newtab" role="tab" aria-controls="financial-newtab" aria-selected="false">Financial</a>
                                        </li>
                                        <li class="nav-item">
                                            <a class="nav-link Suppliers-tab" data-bs-toggle="tab" href="#supplierstab" role="tab" aria-controls="supplierstab" aria-selected="false">Suppliers</a>
                                        </li>
                                        <li class="nav-item">
                                            <a class="nav-link Purchase-tab" data-bs-toggle="tab" href="#purchasenewtab" role="tab" aria-controls="purchasenewtab" aria-selected="false">Purchases</a>
                                        </li>
                                        <li class="nav-item">
                                            <a class="nav-link Saless-tab active" data-bs-toggle="tab" href="#salesstab" role="tab" aria-controls="salesstab" aria-selected="false">Sales</a>
                                        </li>
                                        <li class="nav-item">
                                            <a class="nav-link Features-tab" data-bs-toggle="tab" href="#featurestab" role="tab" aria-controls="featurestab" aria-selected="false">Features</a>
                                        </li>
                                        <li class="nav-item">
                                            <a class="nav-link Tools-tab" data-bs-toggle="tab" href="#toolstab" role="tab" aria-controls="toolstab" aria-selected="false">Tools</a>
                                        </li>
                                        
                                    </ul>
                                    <div class="emptygrid"></div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="tab-pane fade" id="featurestab" role="tabpanel" aria-labelledby="Features-tab">
                    <div id="feature-main">
                        <div class="card">
                            <div class="card-body" style="width:100%;height:100%;">
                                <div class="panel panel-primary panel-head ">
                                    <div class="panel-heading bar-style">Features</div>
                                    <ul class="nav nav-tabs mt-2" style="border:1px solid #dee2e6;" role="tablist">
                                        <li class="nav-item">
                                            <a class="nav-link Details-tab" data-bs-toggle="tab" href="#newitemstab" role="tab" aria-controls="newitemstab" aria-selected="true">Details</a>
                                        </li>
                                        <li class="nav-item">
                                            <a class="nav-link Financial-tab" data-bs-toggle="tab" href="#financial-newtab" role="tab" aria-controls="financial-newtab" aria-selected="false">Financial</a>
                                        </li>
                                        <li class="nav-item">
                                            <a class="nav-link Suppliers-tab" data-bs-toggle="tab" href="#supplierstab" role="tab" aria-controls="supplierstab" aria-selected="false">Suppliers</a>
                                        </li>
                                        <li class="nav-item">
                                            <a class="nav-link Purchase-tab" data-bs-toggle="tab" href="#purchasenewtab" role="tab" aria-controls="purchasenewtab" aria-selected="false">Purchases</a>
                                        </li>
                                        <li class="nav-item">
                                            <a class="nav-link Saless-tab" data-bs-toggle="tab" href="#salesstab" role="tab" aria-controls="salesstab" aria-selected="false">Sales</a>
                                        </li>
                                        <li class="nav-item">
                                            <a class="nav-link Features-tab active" data-bs-toggle="tab" href="#featurestab" role="tab" aria-controls="featurestab" aria-selected="false">Features</a>
                                        </li>
                                        <li class="nav-item">
                                            <a class="nav-link Tools-tab" data-bs-toggle="tab" href="#toolstab" role="tab" aria-controls="toolstab" aria-selected="false">Tools</a>
                                        </li>
                                        
                                    </ul>
                                    <div class="emptygrid"></div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="tab-pane fade" id="toolstab" role="tabpanel" aria-labelledby="Tools-tab">
                    <div id="tool-main">
                        <div class="card">
                            <div class="card-body" style="width:100%;height:100%;">
                                <div class="panel panel-primary panel-head ">
                                    <div class="panel-heading bar-style">Tools</div>
                                    <ul class="nav nav-tabs mt-2" style="border:1px solid #dee2e6;" role="tablist">
                                        <li class="nav-item">
                                            <a class="nav-link Details-tab" data-bs-toggle="tab" href="#newitemstab" role="tab" aria-controls="newitemstab" aria-selected="true">Details</a>
                                        </li>
                                        <li class="nav-item">
                                            <a class="nav-link Financial-tab" data-bs-toggle="tab" href="#financial-newtab" role="tab" aria-controls="financial-newtab" aria-selected="false">Financial</a>
                                        </li>
                                        <li class="nav-item">
                                            <a class="nav-link Suppliers-tab" data-bs-toggle="tab" href="#supplierstab" role="tab" aria-controls="supplierstab" aria-selected="false">Suppliers</a>
                                        </li>
                                        <li class="nav-item">
                                            <a class="nav-link Purchase-tab" data-bs-toggle="tab" href="#purchasenewtab" role="tab" aria-controls="purchasenewtab" aria-selected="false">Purchases</a>
                                        </li>
                                        <li class="nav-item">
                                            <a class="nav-link Saless-tab" data-bs-toggle="tab" href="#salesstab" role="tab" aria-controls="salesstab" aria-selected="false">Sales</a>
                                        </li>
                                        <li class="nav-item">
                                            <a class="nav-link Features-tab" data-bs-toggle="tab" href="#featurestab" role="tab" aria-controls="featurestab" aria-selected="false">Features</a>
                                        </li>
                                        <li class="nav-item">
                                            <a class="nav-link Tools-tab active" data-bs-toggle="tab" href="#toolstab" role="tab" aria-controls="toolstab" aria-selected="false">Tools</a>
                                        </li>
                                      
                                    </ul>
                                    <h1>Tools</h1>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>


                 
            </div>
        </div>

    </div>
</div>


@*-----------------------Modals--------------------*@
<div id="additemcategory" class="modal fade" role="dialog">
    <div class="modal-dialog">


        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title mx-auto" id="ModalLabel">Add Item Category</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close" onclick="closemodal()">
                    <span aria-hidden="true">×</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="form-group">
                        <label for="itemcategory">Item Category</label>
                        <input class="form-control" type="text" placeholder="Item Category" id="itemcategorymodel" />
                        <label class="text-danger db" style="display:none" id="msgitemcategory">Enter Item Category</label>
                    </div>
                    <button type="button" class="btn btn-dark text-white mx-auto col-md-3" id="itemcategorysubmit"><p style="color:white">Submit</p></button>
                </div>

            </div>

        </div>
    </div>
</div>

<!-- Modal Cheap Products-->



<div id="cheapmodal" class="modal fade" role="dialog">
    <div class="modal-dialog">


        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title mx-auto" id="ModalLabel">Cheap Items</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close" onclick="closemodal()">
                    <span aria-hidden="true">×</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="col-lg-12 col-md-12 col-sm-12 col-12">
                    <div class="table-responsive-lg ">
                        <table class="table" id="cheapestrecord">
                            <tr>
                                <th style="font-size: 13px; color: #7318a9;">Name</th>
                                <th style="font-size: 13px; color: #7318a9;">Category</th>
                                <th style="font-size: 13px; color: #7318a9;">Retail</th>
                            </tr>
                        </table>
                    </div>
                </div>
            </div>

        </div>
    </div>
</div>

<div id="addsubitemcategory" class="modal fade" role="dialog">
    <div class="modal-dialog">


        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title mx-auto" id="ModalLabel">Add Sub Item Category</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close" onclick="closemodal()">
                    <span aria-hidden="true">×</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="form-group">
                        <label for="subitemcategory">Sub Item Category</label>
                        <input class="form-control" type="text" placeholder="Sub Item Category" id="subitemcategorymodel" />
                        <label class="text-danger db" style="display:none" id="msgsubitemcategory">Enter Sub Item Category</label>
                    </div>
                    @*<div class="form-group">
                    <label class="">
                    Category
                    </label>
                    @Html.DropDownList("ItemCategoryId", (IEnumerable<SelectListItem>)ViewBag.ItemCategory, "--Choose Item Category--", new { @class = "col-md-11 dropadditemCategory", id = "itemcategoryidmodel" })
                    <input type="hidden" class="form-control" id="itemcategorynamemodel" value="" />
                    <label class="text-danger db" style="display:none" id="msgitemcategoryname">Select Category Name</label>
                    </div>*@
                    <button type="button" class="btn btn-dark text-white mx-auto col-md-3" id="subitemcategorysubmit"><p style="color:white">Submit</p></button>
                </div>

            </div>

        </div>
    </div>
</div>

<div id="addmanufacture" class="modal fade" role="dialog">
    <div class="modal-dialog">


        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title mx-auto" id="ModalLabel">Add Manufacture</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close" onclick="closemodal()">
                    <span aria-hidden="true">×</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="form-group">
                        <label for="itemcategory">Manufacture</label>
                        <input class="form-control" type="text" placeholder="Manufacture" id="manufacturemodel" />
                        <label class="text-danger db" style="display:none" id="msgbrand">Enter Manufacture</label>
                    </div>
                    <button type="button" class="btn btn-dark text-white mx-auto col-md-3" id="manufacturesubmit"><p style="color:white">Submit</p></button>
                </div>

            </div>

        </div>
    </div>
</div>

<div id="addfamily" class="modal fade" role="dialog">
    <div class="modal-dialog">


        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title mx-auto" id="ModalLabel">Add Family</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close" onclick="closemodal()">
                    <span aria-hidden="true">×</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="form-group">
                        <label for="itemcategory">Family</label>
                        <input class="form-control" type="text" placeholder="Family" id="familymodel" />
                        <label class="text-danger db" style="display:none" id="msgfamily">Enter Family</label>
                    </div>
                    <button type="button" class="btn btn-dark text-white mx-auto col-md-3" id="familysubmit"><p style="color:white">Submit</p></button>
                </div>

            </div>

        </div>
    </div>
</div>

<div id="addgroup" class="modal fade" role="dialog">
    <div class="modal-dialog">


        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title mx-auto" id="ModalLabel">Add Group</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close" onclick="closemodal()">
                    <span aria-hidden="true">×</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="form-group">
                        <label for="itemcategory">Group</label>
                        <input class="form-control" type="text" placeholder="Group" id="groupmodel" />
                        <label class="text-danger db" style="display:none" id="msggroup">Enter Group</label>
                    </div>
                    <button type="button" class="btn btn-dark text-white mx-auto col-md-3" id="groupsubmit"><p style="color:white">Submit</p></button>
                </div>

            </div>

        </div>
    </div>
</div>

<div id="addcolor" class="modal fade" role="dialog">
    <div class="modal-dialog">


        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title mx-auto" id="ModalLabel">Add Color</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close" onclick="closemodal()">
                    <span aria-hidden="true">×</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="form-group">
                        <label for="itemcategory">Color</label>
                        <input class="form-control" type="text" placeholder="Color" id="colormodel" />
                        <label class="text-danger db" style="display:none" id="msggroup">Enter Color</label>
                    </div>
                    <button type="button" class="btn btn-dark text-white mx-auto col-md-3" id="colorsubmit"><p style="color:white">Submit</p></button>
                </div>

            </div>

        </div>
    </div>
</div>

<div id="addmispick" class="modal fade" role="dialog">
    <div class="modal-dialog">


        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title mx-auto" id="ModalLabel">Add Mispick</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close" onclick="closemodal()">
                    <span aria-hidden="true">×</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="form-group">
                        <label for="itemcategory">Mispick</label>
                        <input class="form-control" type="text" placeholder="Mispick" id="mispickidmodel" />
                        <label class="text-danger db" style="display:none" id="MsgMispick">Enter Mispick</label>
                    </div>
                    <button type="button" class="btn btn-dark text-white mx-auto col-md-3" id="mispicksubmit"><p style="color:white">Submit</p></button>
                </div>

            </div>

        </div>
    </div>
</div>


<script>
    $(document).ready(function() {
    @*$("#barcodeu").val(@ViewBag.BarCode);*@

            $("#addappendTabs").hide();
        $("#itemlabel").hide();
        $("#qtylabel").hide();
        $("#adjusmentlabel").hide();
        $("#itemqtyadjusment").hide();
        $("#itemqtyadjusment").removeClass("di");
        $("#itemqtyadjusment").addClass("dn");
        $("#onsaveicon").hide();
        $("#newitemnumber").hide();
        //  $("#newitems").hide();
        /// $("#financial-new").hide();
        $("#classificationdata").hide();
        $("#cheapmodall").hide();
        $(".hide-icon").hide();
        $("#namevalidation").text("").hide();
        $("#onlinelimitvalidation").text("").hide();
        $("#HighlimitOnValidation").text("").hide();
        $("#retailvalidation").text("").hide();
        $("#costvalidation").text("").hide();
        $("#categoryvalidation").text("").hide();
        $("#subcategoryvalidation").text("").hide();
        $("#ValidEditMsgProductBarCode").text("").hide();
        $("#ListappenedTabs :input").attr("disabled", true);
        $("#documentuploadresponse").text("");
        $("#documentuploadresponse").hide();
        AppendAllMissions(event);
        var some_id = $('.searchname');
        some_id.prop('type', 'text');
        some_id.removeAttr('autocomplete');
        $("input").attr("autocomplete", "off");
        $.ajax({
            url: '@Url.Action("GetItemList", "Items")',
            async: false,
            dataType: "json",
            processData: false,
            contentType: false,
            success: function(data) {
                if (data.length > 0) {
                    $('#itemcategoryid').html('');
                    var options = '';
                    options += '<option>------Select---------</option>';
                    for (var i = 0; i < data.length; i++) {
                        options += '<option value="' + data[i].id + '">' + data[i].name + '</option>';
                    }
                    $('#itemcategoryid').append(options);
                }
            },
            error: function() {

            }
        });
    });

    function calculate() {

        var myBox1 = $('#retailu').val();
        var myBox2 = $('#unitsval').val();
        console.log(myBox1);
        console.log(myBox2);
        if (myBox1 == "" || myBox1 == "undefined") {

            myBox1 = 0;
        }
        if (myBox2 == "" || myBox2 == "undefined") {

            myBox2 = 1;
        }
        var myResult = myBox1 / myBox2;
        console.log(myResult);
        $('#retailN').val(myBox1);
        /* var ceilingvalue  = Math.ceil(myResult);*/
        var ceilingvalue = myResult;
        /*  ceilingvalue  = ceilingvalue.toFixed(ceilingvalue);*/
        ceilingvalue = ceilingvalue.toFixed(2);
        console.log(ceilingvalue);
        /*    Retail - Cost = answer / Retail * 100(profit %)*/

        $('#unit-retailu').val(ceilingvalue);
    }


    function calculateupdate() {

        var myBox1 = $('.retail').val();
        var myBox2 = $('#units').val();
        console.log(myBox1);
        console.log(myBox2);
        if (myBox1 == "" || myBox1 == "undefined") {

            myBox1 = 0;
        } else {
            $('#retail').text(myBox1);
        }
        if (myBox2 == "" || myBox2 == "undefined") {

            myBox2 = 1;
        }

        $("#unit-charge").val(myBox1 / myBox2);
        var myResult = myBox1 / myBox2;
        console.log(myResult);
        //$('#retail').val(myBox1);
        /* var ceilingvalue  = Math.ceil(myResult);*/
        var ceilingvalue = myResult;
        /*  ceilingvalue  = ceilingvalue.toFixed(ceilingvalue);*/
        ceilingvalue = ceilingvalue.toFixed(2);
        console.log(ceilingvalue);
        /*    Retail - Cost = answer / Retail * 100(profit %)*/

        $('#unit-retail').val(ceilingvalue);
    }
    function calculateupdateF() {

        var retailf = $('#retail').val();
        var costf = $('#cost').val();
        console.log(retailf);
        console.log(costf);

        var difference = retailf - costf;
        var profit = (difference * 100) / retailf;
        profit = profit.toFixed(2);

        $('#profitpercnt').val(profit);
    }
    function calculateF() {

        var retailf = $('#retailN').val();
        var costf = $('#costN').val();
        console.log(retailf);
        console.log(costf);

        var difference = retailf - costf;
        var profit = (difference * 100) / retailf;
        profit = profit.toFixed(2);

        $('#profitpercntN').val(profit);
    }
    $("#itemcategorysubmit").on('click', function() {
        var ItemCategory = $("#itemcategorymodel").val();

        var record = {};
        record = new FormData();
        if (ItemCategory != null && ItemCategory != "" && ItemCategory != "undefined") {
            $("#msgitemcategory").hide();
            record.append("Name", ItemCategory);
            $.ajax({
                url: '@Url.Action("AddItemCategory", "Items")',
                type: "POST",
                data: record,
                async: false,
                dataType: "json",
                processData: false,
                contentType: false,
                success: function(data) {
                    console.log(data);
                    if (data == "Add Successfully") {
                        $("#additemcategory").modal('hide');
                        window.location = '@Url.Action("InventoryProfessional", "Items")';
                    }
                    else if (data == "Category Already Added") {
                        toastr.success("Category Already Added");
                        $("#additemcategory").modal('hide');
                        window.location = '@Url.Action("InventoryProfessional", "Items")';
                    }
                },
                error: function() {

                }
            });
        }
        else {
            $("#msgitemcategory").show();
        }
    });
    @*SubItemCategory*@
        $("#subitemcategorysubmit").on('click', function() {
            var SubItemCategory = $("#subitemcategorymodel").val();
            var ItemCategoryId = $("#itemcategoryidmodel").val();
            var ItemCategoryName = $("#itemcategorynamemodel").val();

            var record = {};
            record = new FormData();

            $("#msgsubitemcategory").hide();
            record.append("SubCategory", SubItemCategory);
            record.append("CategoryID", ItemCategoryId);
            record.append("ParentCategoryName", ItemCategoryName);
            $.ajax({
                url: '@Url.Action("AddSubItemCategory", "Items")',
                type: "POST",
                data: record,
                async: false,
                dataType: "json",
                processData: false,
                contentType: false,
                success: function(data) {
                    console.log(data);
                    if (data == "Add Successfully") {
                        $("#addsubitemcategory").modal('hide');
                        window.location = '@Url.Action("InventoryProfessional", "Items")';
                    }
                    else if (data == "SubCategory Already Added") {
                        toastr.success("SubCategory Already Added");
                        $("#additemcategory").modal('hide');
                        window.location = '@Url.Action("InventoryProfessional", "Items")';
                    }
                },
                error: function() {

                }
            });


        });
    @* Manufacture *@
        $("#manufacturesubmit").on('click', function() {
            var Brand = $("#manufacturemodel").val();
            var record = {};
            record = new FormData();
            if (Brand != null && Brand != "" && Brand != "undefined") {
                $("#msgbrand").hide();
                record.append("Name", Brand);
                $.ajax({
                    url: '@Url.Action("AddBrand", "Items")',
                    type: "POST",
                    data: record,
                    async: false,
                    dataType: "json",
                    processData: false,
                    contentType: false,
                    success: function(data) {
                        console.log(data);
                        if (data == "Add Successfully") {
                            $("#addbrand").modal('hide');
                            window.location = '@Url.Action("InventoryProfessional", "Items")';
                        }
                    },
                    error: function() {

                    }
                });
            }
            else {
                $("#msgbrand").show();
            }
        });
    @* Family *@
        $("#familysubmit").on('click', function() {
            var ArticleType = $("#familymodel").val();
            var record = {};
            record = new FormData();
            if (ArticleType != null && ArticleType != "" && ArticleType != "undefined") {
                $("#msgarticletype").hide();
                record.append("ArticleTypeName", ArticleType);
                $.ajax({
                    url: '@Url.Action("AddArticle", "Items")',
                    type: "POST",
                    data: record,
                    async: false,
                    dataType: "json",
                    processData: false,
                    contentType: false,
                    success: function(data) {
                        console.log(data);
                        if (data == "Add Successfully") {
                            $("#addarticletype").modal('hide');
                            window.location = '@Url.Action("InventoryProfessional", "Items")';
                        }
                    },
                    error: function() {

                    }
                });
            }
            else {
                $("#msgarticletype").show();
            }
        });
    @* Group *@
        $("#groupsubmit").on('click', function() {
            var Group = $("#groupmodel").val();

            var record = {};
            record = new FormData();
            if (Group != null && Group != "" && Group != "undefined") {
                $("#msggroup").hide();
                record.append("Name", Group);
                $.ajax({
                    url: '@Url.Action("AddGroupJson", "Items")',
                    type: "POST",
                    data: record,
                    async: false,
                    dataType: "json",
                    processData: false,
                    contentType: false,
                    success: function(data) {
                        console.log(data);
                        if (data == "Add Successfully") {
                            $("#addgroup").modal('hide');
                            window.location = '@Url.Action("InventoryProfessional", "Items")';
                        }
                    },
                    error: function() {

                    }
                });
            }
            else {
                $("#msggroup").show();
            }
        });
    @* Mispick *@
        $("#mispicksubmit").on('click', function() {
            var Model = $("#model").val();

            var record = {};
            record = new FormData();
            if (Model != null && Model != "" && Model != "undefined") {
                $("#msgmodel").hide();
                record.append("Name", Model);
                $.ajax({
                    url: '@Url.Action("AddModelJson", "Items")',
                    type: "POST",
                    data: record,
                    async: false,
                    dataType: "json",
                    processData: false,
                    contentType: false,
                    success: function(data) {
                        console.log(data);
                        if (data == "Add Successfully") {
                            $("#addmodel").modal('hide');
                            window.location = '@Url.Action("InventoryProfessional", "Items")';
                        }
                    },
                    error: function() {

                    }
                });
            }
            else {
                $("#msgmodel").show();
            }
        });
    @* Color *@
        $("#colorsubmit").on('click', function() {
            var Color = $("#colormodel").val();

            var record = {};
            record = new FormData();
            if (Color != null && Color != "" && Color != "undefined") {
                $("#msgcolor").hide();
                record.append("Name", Color);
                $.ajax({
                    url: '@Url.Action("AddColorJson", "Items")',
                    type: "POST",
                    data: record,
                    async: false,
                    dataType: "json",
                    processData: false,
                    contentType: false,
                    success: function(data) {
                        console.log(data);
                        if (data == "Add Successfully") {
                            $("#addcolor").modal('hide');
                            window.location = '@Url.Action("InventoryProfessional", "Items")';
                        }
                    },
                    error: function() {

                    }
                });
            }
            else {
                $("#msgcolor").show();
            }
        });
    function closemodal() {
        $("#additemcategory").modal('hide');
    @* SubItemCategory *@
            $("#addsubitemcategory").modal('hide');
    @* Manufacture *@
            $("#addmanufacture").modal('hide');
    @* Family *@
            $("#addfamily").modal('hide');
    @* Group *@
            $("#addgroup").modal('hide');
    @* Mispick *@
            $("#addmispick").modal('hide');
    @* Color *@
            $("#addcolor").modal('hide');
            $("#cheapmodal").modal('hide');
    }


    var searchname = $(".searchname").val();
    var name = $("#name").val();
    var onlinelimit = $("#onlinelimits").val();
    var Manufacture = $("#manufacture").val();
    var Category = $("#category").val();
    var subcategory = $("#sub-category").val();
    var family = $("#family").val();
    var retail = $("#retail").val();
    var units = $("#unitsval").val();
    var unitcharge = $("#unit-charge").val();
    var unitretail = $("#unit-retail").val();
    var barcode = $("#barcode").val();
    var qtycase = $("#qtycase").val();
    var qtypallet = $("#qtypallet").val();
    var singleUnitMsa = $("#sunitmsa").val();
    var locationSlot = $("#locationslot").val();
    var group = $("#group").val();
    var location2 = $("#location2").val();
    var Mispick = $("#mispick").val();
    var location3 = $("#location3").val();
    var color = $("#color").val();
    var location4 = $("#location4").val();
    var weightlb = $("#weightlb").val();
    var weightoz = $("#weightoz").val();
    var weightunit = $("#weightunit").val();
    var orderqty = $("#orderqnty").val();
    var minquantity = $("#minqty").val();

    // var maxquantity = $("#minqnty").val();
    var MaintainStockForDays = $("#MaintainStockForDays").val();
    var saleslimit = $("#saleslimitu").val();

    function AppendAllMissions(event) {
        $.blockUI({ message: '<h3 class="blockui-txt"><img src="../images/busy.gif" style="width:15%"/> Loading Products ...</h1>' });
        $.ajax({
            type: "GET",
            url: '@Url.Action("AutoCompleteSearchItem", "Items")',
            async: false,
            dataType: 'json',
            cache: false,
            success: function(data) {
                var inner = '';
                var opts = jQuery.parseJSON(JSON.stringify(data));
                console.log("21" + opts);
                //if (opts.length > 0) {
                //    //$("#matchedCharityTemplate").show();
                //}
                $("#listallmissions").empty();
                if(opts != null){
                     $.each(opts, function(i, d) {
                    inner = '';
                    inner += '<div class="setsearchbox anitem dropdown-menu searchitem cp" onclick="GetItemByID(' + d.id + ')";>';
                    if (i == 0) {
                        inner += '<div class="searchheader">Description</div><div class="searchheader">Qty</div></br>';
                    }
                    if (d.stock != null) {
                        inner += '<div class="item_name di w-50" data-rel="' + d.id + '">' + d.name + '</div><div class="di">' + d.stock.quantity + '</div></br>';

                    } else {
                        inner += '<div class="item_name di w-50" data-rel="' + d.id + '">' + d.name + '</div><div class="di">' + 0 + '</div></br>';
                    }
                    inner += '</div>';


                    // $("#listallmissions").modal('show');
                    $("#listallmissions").append(inner);


                });
                }
                setTimeout(function() {
                    $.unblockUI();
                }, 2500);
            },



            error: function(xhr, status, error) {
                var errorMessage = xhr.status + ': ' + xhr.statusText
            },
        });
    };
    var Increament = 0;
    function GetAllMatchedItems(event) {

        var naming = $(".searchname").val();
        if (naming == "") {
            $(".item_name").parent().hide();
        }
        else {
            var text = naming.toLowerCase();
            var items = $(".item_name");
            //first, hide all:
            items.parent().hide();

            //show only those matching user input:
            items.filter(function() {
                return $(this).text().toLowerCase().indexOf(text) == 0;
            }).parent().show();
        }
        Increament++;
    };
    function GetItemByID(val) {

        var id = val;
        $.ajax({
            type: "GET",
            url: '@Url.Action("GetItemStockFinancialByID", "Items")',

            data: {
                id: id
            },
            dataType: 'json',
            success: function(data) {
                console.log(data);
                $.blockUI({ message: '<h3 class="blockui-txt"><img src="../images/busy.gif" style="width:15%"/> Loading ...</h1>' });
                $("#existingitemnumber").empty();
                $("#defaultlisticons").empty();

                $("#ListappenedTabs :input").attr("disabled", false);
                var iconhtml = '';
                iconhtml += '<a href="#" id="Attachmentbtn"><i data-bs-toggle="modal" data-bs-target="#attach"><img onclick="" class="hide-icon cp" src="../images/attach.png" style="width:50px" title="Attachments" /></i></a>';
                iconhtml += '<img class="hide-icon cp" src="../images/delete.png" style="width:50px" title="Delete" onclick="DeleteItem()"/>';
                iconhtml += '<img class="hide-icon saveexisting cp" src="../images/edit.png" style="width:50px" title="Edit" onclick="UpdateExistingItems()" />';
                iconhtml += '<img onclick="MoveToReport()" class="hide-icon cp" src="../images/printer.png" style="width:50px" title="Print" />';
                $("#defaultlisticons").append(iconhtml);

                var itennumberhtml = '';
                itennumberhtml += '<h3>';
                itennumberhtml += '<label id="itemlabel">ItemNumber:</label><span id="itemnumberfound" class="itemnumberbox di"></span></br>';
                itennumberhtml += '<label id="qtylabel" class="mg-t-2">Qty In Stock:</label><span id="itemqty" class="itemnumberbox di ml-2"></span></br>';
                itennumberhtml += '<label id="adjusmentlabel" class="mg-t-3">Adjustment:</label><span id="itemqtyadjusment" class="itemnumberbox ml-3">0.00</span>';
                itennumberhtml += '<span style="display:none" id="productid"></span>';
                itennumberhtml += ' </h3>';
                $("#existingitemnumber").append(itennumberhtml);

                $("#onelisticon").hide();
                $("#onsaveicon").hide();
                $(".hide-icon").show();
                if (data != null && data != "undefined") {
                    GetStockLevelListItems(id);
                    if (data.itemImageByPath != null && data.itemImageByPath != "undefined") {
                        $("#output1").attr("src", data.itemImageByPath);
                        $("#output1").css("display", "block");
                    }
                    if (data.name != null && data.name != "undefined") {
                        $("#name").val(data.name);
                        $("#Name").val(data.name);
                    }
                    if (data.shipmentLimit != null && data.shipmentLimit != "undefined") {
                        $("#updateonlinelimits").val(data.shipmentLimit);
                    }
                    if (data.needHighAuthorization != null && data.needHighAuthorization != "undefined") {
                        if (data.needHighAuthorization == true) {
                            $('#EditCheckBoxNHA').prop('checked', true);
                            $("#EditHighlimitOn").css("display", "block")
                        }
                        else {
                            $('#EditCheckBoxNHA').prop('checked', false);
                        }
                    }
                    else {
                        $('#EditCheckBoxNHA').prop('checked', false);
                    }
                    if (data.highlimitOn != null && data.highlimitOn != "undefined") {
                        $("#edithighlimiton").val(data.highlimitOn);
                    }
                    else {
                        $("#edithighlimiton").val("");
                    }

                    if ($('#EditCheckBoxNHA').is(":checked")) {
                        $("#EditHighlimitOn").css("display", "block");
                    }
                    else {
                        $("#EditHighlimitOn").css("display", "none");
                    }

                    if (data.itemCategoryId != null && data.itemCategoryId != "undefined") {
                        $("#category").val(data.itemCategoryId);
                    }
                    if (data.brandId != null && data.brandId != "undefined") {
                        $("#manufacture").val(data.brandId);
                    }
                    if (data.groupId != null && data.groupId != "undefined") {
                        $("#group").val(data.groupId);
                    }
                    if (data.colorId != null && data.colorId != "undefined") {
                        $("#color").val(data.colorId);
                    }
                    if (data.groupId != null && data.groupId != "undefined") {
                        $("#group").val(data.groupId);
                    }
                    if (data.misPickId != null && data.misPickId != "undefined") {
                        $("#mispick").val(data.misPickId);
                    }
                    if (data.familyId != null && data.familyId != "undefined") {
                        $("#family").val(data.familyId);
                    }
                    if (data.itemSubCategoryId != null && data.itemSubCategoryId != "undefined") {
                        $("#sub-category").val(data.itemSubCategoryId);
                    }
                    if (data.salesLimit != null && data.salesLimit != "undefined") {
                        $("#saleslimitnew").val(data.salesLimit);
                    }
                    if (data.maintainStockForDays != null && data.maintainStockForDays != "undefined") {
                        $("#MaintainStockForDays").val(data.maintainStockForDays);
                        $("#MaintainStockForDays").css("color", "black");
                    }
                    if (data.itemSubCategoryId != null && data.itemSubCategoryId != "undefined") {
                        $("#sub-category").val(data.itemSubCategoryId);
                    }
                    if (data.units != null && data.units != "undefined") {
                        $("#units").val(data.units);
                    }
                    if (data.retail != null && data.retail != "undefined") {
                        $(".retail").val(data.retail);
                    }
                    if (data.unitCharge != null && data.unitCharge != "undefined") {
                        $("#unit-charge").val(data.unitCharge);
                    }
                    if (data.unitRetail != null && data.unitRetail != "undefined") {
                        $("#unit-retail").val(data.unitRetail);
                    }
                    if (data.barCode != null && data.barCode != "undefined") {
                        $("#barcode").val(data.barCode);
                    }
                    if (data.quantityCase != null && data.quantityCase != "undefined") {
                        $("#qtycase").val(data.quantityCase);
                    }
                    if (data.quantityPallet != null && data.quantityPallet != "undefined") {
                        $("#qtypallet").val(data.quantityPallet);
                    }
                    if (data.singleUnitMsa != null && data.singleUnitMsa != "undefined") {
                        $("#sunitmsa").val(data.singleUnitMsa);
                    }
                    if (data.location != null && data.location != "undefined") {
                        $("#locationslot").val(data.location);
                    }
                    if (data.groupName != null && data.groupName != "undefined") {
                        $("#group").val(data.groupName);
                    }
                    if (data.locationTwo != null && data.locationTwo != "undefined") {
                        $("#location2").val(data.locationTwo);
                    }
                    if (data.misPickName != null && data.misPickName != "undefined") {
                        $("#mispick").val(data.misPickid);
                    }
                    if (data.locationTwo != null && data.locationTwo != "undefined") {
                        $("#location3").val(data.locationTwo);
                    } if (data.colorid != null && data.colorid != "undefined") {
                        $("#color").val(data.colorid);
                    }
                    if (data.locationFour != null && data.locationFour != "undefined") {
                        $("#location4").val(data.locationFour);
                    }
                    if (data.weightLb != null && data.weightLb != "undefined") {
                        $("#weightlb").val(data.weightLb);
                    }
                    if (data.weightOz != null && data.weightOz != "undefined") {
                        $("#weightoz").val(data.weightOz);
                    }
                    if (data.orderQuantity != null && data.orderQuantity != "undefined") {
                        $("#orderqty").val(data.orderQuantity)
                    }
                    if (data.minOrderQty != null && data.minOrderQty != "undefined") {
                        $("#minqty").val(data.minOrderQty);
                    } if (data.maxOrderQty != null && data.maxOrderQty != "undefined") {
                        $("#maxqty").val(data.maxOrderQty);
                    } if (data.itemNumber != null && data.itemNumber != "undefined") {
                        $("#itemnumberfound").text(data.itemNumber);
                    }
                    if (data.id != null && data.id != "undefined") {
                        $("#id").val(data.id);
                    }
                    if (data.id != null && data.id != "undefined") {
                        $("#productid").text(data.id);
                    }
                    if (data.isActive != null && data.id != false) {
                        $("#IsActive").prop("Checked", true);
                    } else {
                        $("#IsActive").prop("Checked", false);
                    }

                    if (data.stock != null) {
                        if (data.stock.quantity != null && data.stock.quantity != "undefined") {
                            $("#itemqty").text(data.stock.quantity);
                            //$('#progressbarheight').css("height", data.stock.quantity+'%');
                            //$('#progressbarheight').text(data.stock.quantity+"%");
                        }
                        else {
                            $("#itemqty").text(0);
                        }
                    } else {
                        $("#itemqty").text(0);
                    }

                    //financial
                    if (data.financial != null) {
                        if (data.financial.cost != null && data.financial.cost != "undefined") {
                            $("#cost").val(data.financial.cost);
                        }
                        if (data.financial.retail != null && data.financial.retail != "undefined") {
                            $(".retail").val(data.financial.retail);
                        }
                        if (data.financial.profit != null && data.financial.profit != "undefined") {
                            $("#profitpercnt").val(data.financial.profit);
                        }
                        if (data.financial.msgPromotion != null && data.financial.msgPromotion != "undefined") {
                            $("#mfgpromotion").val(data.financial.msgPromotion);
                        }

                        if (data.financial.addToCost != null && data.financial.addToCost != "undefined") {
                            $("#addtocost").val(data.financial.addToCost);
                        } if (data.financial.unitCharge != null && data.financial.unitCharge != "undefined") {
                            $("#unitcharge").val(data.financial.unitCharge);
                        }
                        if (data.financial.outOfStateCost != null && data.financial.outOfStateCost != "undefined") {
                            $("#outofstatecost").val(data.financial.outOfStateCost);
                        } if (data.financial.outOfStateRetail != null && data.financial.outOfStateRetail != "undefined") {
                            $("#outofstateretail").val(data.financial.outOfStateRetail);
                        }


                        if (data.financial.askForPricing == true) {
                            $("#askforpricing").prop('checked', true);
                        } else {
                            $("#askforpricing").prop('checked', false);
                        }
                        if (data.financial.askForDescrip == true) {
                            $("#askfordesc").prop('checked', true);
                        } else {
                            $("#askfordesc").prop('checked', false);
                        }
                        if (data.financial.serialized == true) {
                            $("#serialized").prop('checked', true);
                        } else {
                            $("#serialized").prop('checked', false);
                        }
                        if (data.financial.taxOnSales == true) {
                            $("#taxonsales").prop('checked', true);
                        } else {
                            $("#taxonsales").prop('checked', false);
                        }
                        if (data.financial.purchase == true) {
                            $("#purchase").prop('checked', true);
                        } else {
                            $("#purchase").prop('checked', false);
                        }
                        if (data.financial.noSuchDiscount == true) {
                            $("#nosuchdiscount").prop('checked', true);
                        } else {
                            $("#nosuchdiscount").prop('checked', false);
                        }
                        if (data.financial.noReturns == true) {
                            $("#noreturns").prop('checked', true);
                        } else {
                            $("#noreturns").prop('checked', false);
                        }
                        if (data.financial.sellBelowCost == true) {
                            $("#sellbelowcost").prop('checked', true);
                        } else {
                            $("#sellbelowcost").prop('checked', false);
                        }
                        $("#sgtdretailprice").val();

                        if (data.financial.autoSetSrp == true) {
                            $("#autosetsrp").prop('checked', true);
                        } else {
                            $("#autosetsrp").prop('checked', false);
                        }
                        // $("#percntN").val();
                        $(".retail").val(data.financial.retail);
                        if (data.financial.codeA == true) {
                            $("#codea").prop('checked', true);
                        } else {
                            $("#codea").prop('checked', false);
                        }
                        if (data.financial.codeB == true) {
                            $("#codeb").prop('checked', true);
                        } else {
                            $("#codeb").prop('checked', false);
                        }
                        if (data.financial.codeC == true) {
                            $("#codec").prop('checked', true);
                        } else {
                            $("#codec").prop('checked', false);
                        }
                        if (data.financial.codeD == true) {
                            $("#coded").prop('checked', true);
                        } else {
                            $("#coded").prop('checked', false);
                        }
                        if (data.financial.addCustomersDiscount == true) {
                            $("#addcustomersdiscount").prop('checked', true);
                        } else {
                            $("#addcustomersdiscount").prop('checked', false);
                        }
                    }

                    if (data.vendors != null && data.vendors.length > 0) {
                        $("#appendsuppliersmain").empty();
                        $.each(data.vendors, function(index, item) {

                            // var myitem = item.invoiceNumber.toString();

                            // console.log(myitem);
                            var html = '';
                            html += '<tr onclick="SupplierPartialModalP(' + item.id + ')">';
                            //html += '<td id="num' + index + '" ondblclick="PurchaseOrderPModal(' + index + ')" class="grids-td">' + item.supplierItemNumber.supplierItemNum + '</td>';
                            html += '<td style="" id="" class="grids-td">' + item.company + '</td>';
                            if (item.supplierItemNumber != null && item.supplierItemNumber != "undefined") {
                                html += '<td style="" id="" class="grids-td">' + item.supplierItemNumber.supplierItemNum + '</td>';

                            } else {
                                html += '<td style="" id="" class="grids-td">' + "N/A" + '</td>';
                            }
                            if (item.purchaseOrder != null && item.purchaseOrder != "undefined") {
                                html += '<td style="" id="" class="grids-td">' + item.purchaseOrder.caseQty + '</td>';

                            } else {
                                html += '<td style="" id="" class="grids-td">' + "N/A" + '</td>';
                            }
                            if (item.purchaseOrder != null && item.purchaseOrder != "undefined") {
                                html += '<td style="" id="" class="grids-td">' + item.purchaseOrder.price + '</td>';

                            } else {
                                html += '<td style="" id="" class="grids-td">' + "N/A" + '</td>';
                            }
                            if (item.purchaseOrder != null && item.purchaseOrder != "undefined") {
                                html += '<td style="" id="" class="grids-td">' + item.purchaseOrder.discount + '</td>';

                            } else {
                                html += '<td style="" id="" class="grids-td">' + "N/A" + '</td>';
                            }
                            if (item.purchaseOrder != null && item.purchaseOrder != "undefined") {
                                html += '<td style="" id="" class="grids-td">' + item.purchaseOrder.price + '</td>';

                            } else {
                                html += '<td style="" id="" class="grids-td">' + "N/A" + '</td>';
                            }
                            if (item.purchaseOrder != null && item.purchaseOrder != "undefined") {
                                html += '<td style="" id="" class="grids-td">' + item.purchaseOrder.price + '</td>';

                            } else {
                                html += '<td style="" id="" class="grids-td">' + "N/A" + '</td>';
                            }
                            html += '</tr > ';


                            $("#appendsuppliersmain").append(html);

                        });
                    }

                    if (data.vendors != null && data.vendors.length > 0) {
                        $("#appendsuppliersmain").empty();
                        $.each(data.vendors, function(index, item) {

                            // var myitem = item.invoiceNumber.toString();

                            console.log("this");
                            console.log(item);
                            console.log(item.vendorId);
                            var html = '';
                            html += '<tr ondblclick="SupplierPartialModalPar(' + item.vendorId + ')">';
                            //html += '<td id="num' + index + '" ondblclick="PurchaseOrderPModal(' + index + ')" class="grids-td">' + item.supplierItemNumber.supplierItemNum + '</td>';
                            html += '<td style="" id="" class="grids-td">' + item.company + '</td>';
                            if (item.supplierItemNumber != null && item.supplierItemNumber != "undefined") {
                                html += '<td style="" id="" class="grids-td">' + item.supplierItemNumber.supplierItemNum + '</td>';

                            } else {
                                html += '<td style="" id="" class="grids-td">' + "N/A" + '</td>';
                            }
                            if (item.purchaseOrder != null && item.purchaseOrder != "undefined") {
                                html += '<td style="" id="" class="grids-td">' + item.purchaseOrder.caseQty + '</td>';

                            } else {
                                html += '<td style="" id="" class="grids-td">' + "N/A" + '</td>';
                            }
                            if (item.purchaseOrder != null && item.purchaseOrder != "undefined") {
                                html += '<td style="" id="" class="grids-td">' + item.purchaseOrder.price + '</td>';

                            } else {
                                html += '<td style="" id="" class="grids-td">' + "N/A" + '</td>';
                            }
                            if (item.purchaseOrder != null && item.purchaseOrder != "undefined") {
                                html += '<td style="" id="" class="grids-td">' + item.purchaseOrder.discount + '</td>';

                            } else {
                                html += '<td style="" id="" class="grids-td">' + "N/A" + '</td>';
                            }
                            if (item.purchaseOrder != null && item.purchaseOrder != "undefined") {
                                html += '<td style="" id="" class="grids-td">' + item.purchaseOrder.price + '</td>';

                            } else {
                                html += '<td style="" id="" class="grids-td">' + "N/A" + '</td>';
                            }
                            if (item.purchaseOrder != null && item.purchaseOrder != "undefined") {
                                html += '<td style="" id="" class="grids-td">' + item.purchaseOrder.price + '</td>';

                            } else {
                                html += '<td style="" id="" class="grids-td">' + "N/A" + '</td>';
                            }
                            html += '</tr > ';


                            $("#appendsuppliersmain").append(html);

                        });
                    }
                    if (data.purchaseOrders != null && data.purchaseOrders.length > 0) {
                        $("#appendpurchaseordersmain").empty();
                        $.each(data.purchaseOrders, function(index, item) {

                            // var myitem = item.invoiceNumber.toString();

                            // console.log(myitem);
                            var html = '';
                            html += '<tr>';
                            html += '<td style="width: 10px" id="" class="grids-td">' + (index + 1) + '</td>';
                            html += '<td id="num' + index + '" ondblclick="PurchaseOrderPModal(' + index + ')" class="grids-td">' + item.invoiceNumber + '</td>';
                            html += '<td class="grids-td">' + item.supplierName + '</td>';
                            if (item.receivedDate == null) {
                                html += '<td class="grids-td">Not Received</td>';
                            } else {
                                html += '<td class="grids-td">' + item.receivedDate + '</td>';
                            }
                            html += '<td class="grids-td">' + item.qty + '</td>';
                            html += '<td class="grids-td">' + item.caseQty + '</td>';
                            html += '<td class="grids-td">' + item.price + '</td>';
                            html += '<td class="grids-td">' + item.amount + '</td>';
                            html += '</tr > ';


                            $("#appendpurchaseordersmain").append(html);

                        });
                    }


                    if (data.saleOrders != null && data.saleOrders.length > 0) {

                        $('#appendsaleorders').empty();
                        $.each(data.saleOrders, function(index, item) {
                            console.log(item.invoiceNumber);
                            var html = '';
                            html += '<tr>';
                            html += '<td style="width: 10px" id="" class="grids-td">' + (index + 1) + '</td>';
                            html += '<td id="abcdef' + index + '" ondblclick="SalesPartialModal(' + index + ')" class="grids-td">' + item.invoiceNumber + '</td>';
                            /*html += '<td class="grids-td">' + item.invoiceNumber + '</td>';*/
                            if (item.invoiceDate == null) {
                                html += '<td class="grids-td">N/A</td>';
                            } else {
                                html += '<td class="grids-td">' + item.invDate + '</td>';
                            }
                            html += '<td class="grids-td">' + item.customerName + '</td>';
                            html += '<td class="grids-td">' + item.quantity + '</td>';
                            html += '<td></td>';
                            html += '<td></td>';
                            html += '<td style="color:darkred">' + item.cost + '</td>';
                            html += '<td style="color:darkred">' + item.price + '</td>';
                            html += '<td style="color:darkred">' + item.total + '</td>';
                            html += '</tr > ';
                            $("#appendsaleorders").append(html);
                        });
                    }

                     if (data.itemDocuments != null && data.itemDocuments.length > 0) {

                        $('#appenditemdocumentsorders').empty();
                        $.each(data.itemDocuments, function(index, item) {
                            console.log(item.invoiceNumber);
                            var html = '';
                            html += '<tr>';
                            html += '<td style="width: 10px" id="" class="grids-td">' + (index + 1) + '</td>';
                            html += '<td id="doctype' + index + '" class="grids-td">' + item.documentType + '</td>';
                            /*html += '<td class="grids-td">' + item.invoiceNumber + '</td>';*/
                            html += '<td class="grids-td">' + item.documentName + '</td>';
                            html += '<td class="grids-td"><a class="btn btn-success" href="' + item.imageByPath + '" target="_blank" download>Download</a></td>';
                            html += '<td class="grids-td"><a onclick="DeleteAttachement(' + item.documentId + ')" class="btn btn-danger">Delete</a></td>';
                            html += '</tr > ';
                            $("#appenditemdocumentsorders").append(html);
                        });
                    }
                }

                $("#itemlabel").show();
                $("#createnew").hide();
                $("#qtylabel").show();
                $("#adjusmentlabel").show();
                $("#itemqtyadjusment").addClass("di");
                $("#itemqtyadjusment").show();
                $("#listallmissions").empty();

                GetCheapestValue(id);
                setTimeout(function() {
                    $.unblockUI();
                }, 2500);

            },
            error: function(xhr, status, error) {
                var errorMessage = xhr.status + ': ' + xhr.statusText
            },
        });


    }

    function DeleteAttachement(id) {
        $.ajax({
            type: "POST",
            url: '@Url.Action("DeleteAttachement", "Items")',
            data: {
                id: id
            },
            dataType: "json",
            success: function(data) {
                toastr.success("Deleted Sucessfully");
                setTimeout(function() {
                    location.reload();
                }, 2500);
            },
            error: function(xhr, status, error) {
                var errorMessage = xhr.status + ': ' + xhr.statusText
            },
        });

    }
    function GetCheapestValue(val) {
        var id = val;
        $.ajax({
            type: "GET",
            url: '@Url.Action("CheapestValueFind", "Items")',

            data: {
                id: id
            },
            dataType: 'json',
            success: function(data) {

                if (data != null) {
                    $("#cheapmodall").show();
                } else {
                    $("#cheapmodall").hide();
                }
                console.log(data);
                var trHTML = '';
                $.each(data, function(i, item) {
                    trHTML += '<tr><td>' + item.name + '</td><td>' + item.categoryName + '</td><td>' + item.retail + '</td></tr>';
                });
                $('#cheapestrecord').append(trHTML);

            },
            error: function(xhr, status, error) {
                var errorMessage = xhr.status + ': ' + xhr.statusText
            },
        });
    }

    function triggerAddItems() {


        $("#ListappenedTabs").hide();
        var iconsavehtml = '';
        iconsavehtml += '<img class="hard-refresh" src="../images/reload.png" style="width:50px" title="Reload" onclick="ReloadPage()"/>';
        iconsavehtml += '<img class="saverecord" src="../images/save.png" style="width:50px" title="Save" onclick="SaveItems()"/>';
        iconsavehtml += '<img id="back" src="../images/back.png" style="width:50px" title="Back" onclick="movebacktoAdd()" />';
        iconsavehtml += '<img class="disable-click" id="next" src="../images/next.png" style="width:50px" title="Next" onclick="movetoFinancial()" />';
        $("#onsaveicon").append(iconsavehtml);

        $("#onsaveicon").show();
        $("#onlisticon").removeClass('di');
        $("#onlisticon").hide();
        $("#existingitemnumber").hide();

        var newitemnumberhtml = '';
        newitemnumberhtml += '<h3 style="margin-right:190px;">';
        newitemnumberhtml += '<label id="newitemlabel">ItemNumber:</label>';
        newitemnumberhtml += '<span id="" class="itemnumberbox di">' + '@ViewBag.ItemNumber' + '</span></br >';
        newitemnumberhtml += '</h3>';

        $("#newitemnumber").append(newitemnumberhtml);
        $("#addappendTabs").show();
        $("#newitemnumber").show();
        $("#newitems").show();
        $("#exitingitems").hide();
        $("#financial-main").hide();
        $("#supplier-main").hide();
        $("#purchase-main").hide();
        $("#sale-main").hide();
        $("#feature-main").hide();
        $("#tool-main").hide();

    };
     function MoveToReport(){
     window.location.href = '@Url.Action("MSAReport", "Reporting")';
    }
    function ReloadPage() {
        location.reload();
    };
    $(".saveexisting").on('click', function() {

        UpdateExistingItems();
    });

    function movebacktoAdd() {
        $("#newitems").show();
        $("#financial-new").hide();
    };
    function movetoFinancial() {
        $("#financial-new").show();
        $("#newitems").hide();
    };

    function ManageRatio() {
        var qty = $("#maxqntyu").val();
        if (qty > 0) {
            $("#setprogresslevel").text(qty);
        }
    }
    function SaveItems() {
        var NeedHighAuthorization = true;
        if ($('#CheckBoxNHA').is(":checked")) {
            NeedHighAuthorization = true;
            var HighlimitOn = $("#highlimiton").val();
        }
        else {
            NeedHighAuthorization = false;
            var HighlimitOn = "";
        }
        var IsValid = true;
        var Image = document.getElementById("productImage");
        var productimage = Image.files;
        var searchname = $(".searchname").val();
        var name = $("#nameu").val();
        var onlinelimit = $("#onlinelimit").val();
        var Manufacture = $("#manufactureu").val();
        var Category = $("#categoryu").val();
        var subcategory = $("#sub-categoryu").val();
        var family = $("#familyu").val();
        var retail = $("#retailu").val();
        var units = $("#unitsu").val();
        var unitcharge = $("#unit-chargeu").val();
        var unitretail = $("#unit-retailu").val();
        var barcode = $("#barcodeu").val();
        var qtycase = $("#qtycaseu").val();
        var qtypallet = $("#qtypalletu").val();
        var singleUnitMsa = $("#sunitmsau").val();
        var locationSlot = $("#locationslotu").val();
        var group = $("#groupu").val();
        var location2 = $("#location2u").val();
        var Mispick = $("#mispicku").val();
        var location3 = $("#location3u").val();
        var color = $("#coloru").val();
        var location4 = $("#location4u").val();
        var weightlb = $("#weightlbu").val();
        var weightoz = $("#weightozu").val();
        var weightunit = $("#weightunitu").val();
        var orderqty = $("#orderqntyu").val();
        var minquantity = $("#minqtyu").val();
        var maxquantity = $("#maxqntyu").val();
        var MaintainStockForDays = $("#MaintainStockForDaysu").val();
        //var saleslimit = $("#saleslimitu").val();
        //values get for financial

        var searchnamee = $("#searchnamee").val();
        var Cost = $("#costN").val();
        var Retail = $("#retailN").val();
        var Profitpercnt = $("#profitpercntN").val();
        var mfgPromotion = $("#mfgpromotionN").val();
        var AddtoCost = $("#addtocostN").val();
        var UnitCharge = $("#unitchargeN").val();
        var OutofStateCost = $("#outofstatecostN").val();
        var OutofStateRetail = $("#outofstateretailN").val();
        var AskforPricing = $("#askforpricingN").is(':checked');
        var AskforDesc = $("#askfordescN").is(':checked');
        var Serialized = $("#serializedN").is(':checked');
        var TaxonSales = $("#taxonsalesN").is(':checked');
        var Purchase = $("#purchaseN").is(':checked');
        var NosuchDiscount = $("#nosuchdiscountN").is(':checked');
        var Noreturns = $("#noreturnsN").is(':checked');
        var SellbelowCost = $("#sellbelowcostN").is(':checked');
        var SgtdRetailPrice = $("#sgtdretailpriceN").val();
        var AutosetSRP = $("#autosetsrpN").is(':checked');
        var Percentsign = $("#percntN").val();
        var Retail = $("#retailN").val();
        var CodeA = $("#codeaN").is(':checked');
        var CodeB = $("#codebN").is(':checked');
        var CodeC = $("#codecN").is(':checked');
        var CodeD = $("#codedN").is(':checked');
        var CustomerDiscount = $("#addcustomersdiscountN").is(':checked');
        var AttSign = $("#attsignN").val();


        // $("#itemnumber").text(data.itemNumber);
        /* var id = $("#productid").text();*/

        var record = {};
        record = new FormData();

        if (name == "" || name == "undefined") {
            $("#newitemstab").addClass('active');
            $("#financial-newtab").removeClass('active');
            $("#newitemstab").addClass('fade');
            $("#financial-newtab").removeClass('fade');
            $("#namevalidation").text("Please Enter Item Name");
            $("#namevalidation").show();
            $("#nameu").focus();
            IsValid = false;
        } else {
            $("#namevalidation").text("").hide();
        }


        if (onlinelimit == "" || onlinelimit == "undefined") {
            //$("#newitemstab").addClass('active');
            //$("#financial-newtab").removeClass('active');
            //$("#newitemstab").addClass('fade');
            //$("#financial-newtab").removeClass('fade');
            //$("#onlinelimitvalidation").text("Please Enter Shipment Limit");
            //$("#onlinelimitvalidation").show();
            //$("#onlinelimit").focus();
            //IsValid = false;\
            onlinelimit = "0";
        } else {
            $("#onlinelimitvalidation").text("").hide();
        }

        if (barcode == "" || barcode == "undefined") {
            $("#newitemstab").addClass('active');
            $("#financial-newtab").removeClass('active');
            $("#newitemstab").addClass('fade');
            $("#financial-newtab").removeClass('fade');
            $("#ValidMsgProductBarCode").text("Please Enter barcode");
            $("#ValidMsgProductBarCode").show();
            $("#barcodeu").focus();
            IsValid = false;
        }
        else {
            $("#ValidMsgProductBarCode").text("").hide();
            if (/^[0-9]+$/.test(barcode) && barcode.length == 12) {

            }
            else {

                $("#newitemstab").addClass('active');
                $("#financial-newtab").removeClass('active');
                $("#newitemstab").addClass('fade');
                $("#financial-newtab").removeClass('fade');
                $("#ValidMsgProductBarCode").text("Barcode should contain number only with the length of 12");
                $("#ValidMsgProductBarCode").show();
                $("#barcodeu").focus();
                IsValid = false;
            }
        }


        if (NeedHighAuthorization == true) {
            if (HighlimitOn == "" || HighlimitOn == "undefined") {
                $("#newitemstab").addClass('active');
                $("#financial-newtab").removeClass('active');
                $("#newitemstab").addClass('fade');
                $("#financial-newtab").removeClass('fade');
                $("#HighlimitOnValidation").text("Please Enter High Limit On");
                $("#HighlimitOnValidation").show();
                $("#highlimiton").focus();
                IsValid = false;
            } else {
                $("#HighlimitOnValidation").text("").hide();
            }
        }
        if (Retail == "" || Retail == "undefined") {
            $("#newitemstab").addClass('active');
            $("#financial-newtab").removeClass('active');
            $("#newitemstab").addClass('fade');
            $("#financial-newtab").removeClass('fade');
            $("#retailvalidation").text("Please Enter Retail Price");
            $("#retailvalidation").show();
            $("#retailN").focus();
            IsValid = false;

        } else {
            if (Retail == 0 || Retail < 0) {
                $("#newitemstab").addClass('active');
                $("#financial-newtab").removeClass('active');
                $("#newitemstab").addClass('fade');
                $("#financial-newtab").removeClass('fade');
                $("#retailvalidation").text("Retail Price Should Be Greater Than 0");
                $("#retailvalidation").show();
                $("#retailN").focus();
                IsValid = false;
            }
            $("#retailvalidation").text("").hide();
        }

        if (Cost == "" || Cost == "undefined") {

            $("#newitemstab").removeClass('active');
            $("#financial-newtab").addClass('active');
            $("#newitemstab").addClass('fade');
            $("#financial-newtab").removeClass('fade');
            $("#costvalidation").text("Please Enter Cost Price");
            $("#costvalidation").show();
            $("#costN").focus();
            IsValid = false;

        } else {
            if (Cost == 0 || Cost < 0) {
                $("#newitemstab").removeClass('active');
                $("#financial-newtab").addClass('active');
                $("#newitemstab").addClass('fade');
                $("#financial-newtab").removeClass('fade');
                $("#costvalidation").text("Cost Price Should Be Greater Than 0");
                $("#costvalidation").show();
                $("#costN").focus();
                IsValid = false;
            }
            $("#costvalidation").text("").hide();
        }
        console.log($("#categoryu option:selected")[0].value);
        if ($("#categoryu option:selected")[0].value == "--Choose Item Category--" || $("#categoryu option:selected")[0].value == "") {
            $("#newitemstab").addClass('active');
            $("#financial-newtab").removeClass('active');
            $("#newitemstab").removeClass('fade');
            $("#financial-newtab").addClass('fade');
            $("#categoryvalidation").text("Please Select Item Category");
            $("#categoryvalidation").show();
            $("#categoryu").focus();
            IsValid = false;
        } else {
            $("#categoryvalidation").text("").hide();
        }



        if (minquantity == "undefined" || minquantity == "") {
            minquantity = "0";
        }
        if (units == "undefined" || units == "") {
            units = "none";
        }

        if (IsValid) {
            record.append("NeedHighAuthorization", NeedHighAuthorization);
            record.append("HighlimitOn", HighlimitOn);
            record.append("Name", name);
            record.append("ShipmentLimit", onlinelimit);
            record.append("BrandId", Manufacture);
            record.append("ItemCategoryId", Category);
            record.append("ItemSubCategoryId", subcategory);
            record.append("FamilyId", family);
            record.append("Retail", retail);
            record.append("Units", units);
            record.append("UnitCharge", unitcharge);
            record.append("UnitRetail", unitretail);
            record.append("BarCode", barcode);
            record.append("QuantityCase", qtycase);
            record.append("QuantityPallet", qtypallet);
            record.append("SingleUnitMsa", singleUnitMsa);
            record.append("Location", locationSlot);
            record.append("GroupId", group);
            record.append("LocationTwo", location2);
            record.append("MisPickId", Mispick);
            record.append("LocationThree", location3);
            record.append("LocationFour", location4);
            record.append("WeightLb", weightlb);
            record.append("WeightOz", weightoz);
            record.append("Name", weightunit);
            record.append("OrderQuantity", orderqty);
            record.append("MinOrderQty", minquantity);
            record.append("MaxOrderQty", maxquantity);
            record.append("ColorId", color);
            record.append("Cost", Cost);
            record.append("MaintainStockForDays", MaintainStockForDays);
            //record.append("SalesLimit", saleslimit);
            //  //FixedCost
            record.append("Financial.Cost", Cost);
            record.append("Financial.Retail", Retail);
            record.append("Financial.Profit", Profitpercnt);
            record.append("Financial.MsgPromotion", mfgPromotion);
            record.append("Financial.AddToCost", AddtoCost);
            record.append("Financial.UnitCharge", UnitCharge);
            record.append("Financial.OutOfStateCost", OutofStateCost);
            record.append("Financial.OutOfStateRetail", OutofStateRetail);
            record.append("Financial.AskForPricing", AskforPricing);
            record.append("Financial.AskForDescrip", AskforDesc);
            record.append("Financial.Serialized", Serialized);

            record.append("Financial.TaxOnSales", TaxonSales);
            record.append("Financial.Purchase", Purchase);
            record.append("Financial.NoSuchDiscount", NosuchDiscount);
            record.append("Financial.NoReturns", Noreturns);
            record.append("Financial.SellBelowCost", SellbelowCost);
            record.append("Financial.SuggestedRetailPrice", SgtdRetailPrice);
            record.append("Financial.AutoSetSrp", AutosetSRP);
            //  record.append("", Percentsign);
            // record.append("", Retail);
            record.append("Financial.CodeA", CodeA);
            record.append("Financial.CodeB", CodeB);
            record.append("Financial.CodeC", CodeC);
            record.append("Financial.CodeD", CodeD);
            record.append("Financial.CustomerDiscount", CustomerDiscount);
            record.append("Financial.AttSign", AttSign);
            if (productimage.length != 0) {
                record.append("ItemImage", productimage[0]);
            }
            else {
                record.append("ItemImage", null);
            }
            console.log(record);

            $.confirm({
                title: 'Save New Item!',
                content: 'Are you sure to save new item?',
                buttons: {
                    confirm: function() {
                        $.blockUI({ message: '<h3 class="blockui-txt"><img src="../images/busy.gif" style="width:15%"/> Loading ...</h1>' });
                        $.ajax({
                            url: '@Url.Action("InventoryProfessional", "Items")',
                            type: "POST",
                            data: record,
                            async: false,
                            dataType: "json",
                            processData: false,
                            contentType: false,
                            success: function(data) {
                                if (data == true) {
                                    setTimeout(function() {
                                        $.unblockUI();
                                        window.location = '@Url.Action("InventoryProfessional", "Items")';
                                    }, 1500);
                                }
                            },
                            error: function() {
                                setTimeout(function() {
                                    $.unblockUI();
                                }, 2500);
                            }
                        });
                    },
                    cancel: function() {
                    },
                }
            });







        }
    }
    function UpdateExistingItems() {

        var NeedHighAuthorization = true;
        if ($('#EditCheckBoxNHA').is(":checked")) {
            NeedHighAuthorization = true;
            var HighlimitOn = $("#edithighlimiton").val();
        }
        else {
            NeedHighAuthorization = false;
            var HighlimitOn = "";
        }


        if (NeedHighAuthorization == true) {
            if (HighlimitOn == "" || HighlimitOn == "undefined") {
                //$("#newitemstab").addClass('active');
                $("#financial-newtab").removeClass('active');
                // $("#newitemstab").addClass('fade');
                $("#financial-newtab").removeClass('fade');
                $("#EditHighlimitOnValidation").text("Please Enter High Limit On");
                $("#EditHighlimitOnValidation").show();
                $("#edithighlimiton").focus();
                return false;
            } else {
                $("#HighlimitOnValidation").text("").hide();
            }
        }



        var searchname = $(".searchname").val();
        var Image = document.getElementById("productImage1");
        var productimage = Image.files;
        var name = $("#name").val();
        var onlinelimit = $("#updateonlinelimits").val();
        var Manufacture = $("#manufacture").val();
        var Category = $("#category").val();
        var subcategory = $("#sub-category").val();
        var family = $("#family").val();
        var retail = $("#retail").val();
        var units = $("#units").val();
        var unitcharge = $("#unit-charge").val();
        var unitretail = $("#unit-retail").val();
        var barcode = $("#barcode").val();
        var qtycase = $("#qtycase").val();
        var qtypallet = $("#qtypallet").val();
        var singleUnitMsa = $("#sunitmsa").val();
        var locationSlot = $("#locationslot").val();
        var group = $("#group").val();
        var location2 = $("#location2").val();
        var Mispick = $("#mispick").val();
        var location3 = $("#location3").val();
        var color = $("#color").val();
        var location4 = $("#location4").val();
        var weightlb = $("#weightlb").val();
        var weightoz = $("#weightoz").val();
        var weightunit = $("#weightunit").val();
        var orderqty = $("#orderqnty").val();
        var minquantity = $("#minqty").val();
        var maxquantity = $("#minqnty").val();
        var MaintainStockForDays = $("#MaintainStockForDays").val();
        //var saleslimit = $("#saleslimitnew").val();
        var Cost = $("#cost").val();
        var Retail = $("#retail").val();
        var Profitpercnt = $("#profitpercnt").val();
        var mfgPromotion = $("#mfgpromotion").val();
        var AddtoCost = $("#addtocost").val();
        var UnitCharge = $("#unitcharge").val();
        var OutofStateCost = $("#outofstatecost").val();
        var OutofStateRetail = $("#outofstateretail").val();
        var AskforPricing = $("#askforpricing").is(':checked');
        var AskforDesc = $("#askfordesc").is(':checked');
        var Serialized = $("#serialized").is(':checked');
        var TaxonSales = $("#taxonsales").is(':checked');
        var Purchase = $("#purchase").is(':checked');
        var NosuchDiscount = $("#nosuchdiscount").is(':checked');
        var Noreturns = $("#noreturns").is(':checked');
        var SellbelowCost = $("#sellbelowcost").is(':checked');
        var SgtdRetailPrice = $("#sgtdretailprice").val();
        var AutosetSRP = $("#autosetsrp").is(':checked');
        var Percentsign = $("#percnt").val();
        var Retail = $("#retail").val();
        var CodeA = $("#codea").is(':checked');
        var CodeB = $("#codeb").is(':checked');
        var CodeC = $("#codec").is(':checked');
        var CodeD = $("#coded").is(':checked');
        var CustomerDiscount = $("#addcustomersdiscount").is(':checked');
        var AttSign = $("#attsign").val();
        // $("#itemnumber").text(data.itemNumber);
        var id = $("#productid").text();


        if (barcode == "" || barcode == "undefined") {
            //$("#newitemstab").addClass('active');
            $("#financial-newtab").removeClass('active');
            //$("#newitemstab").addClass('fade');
            $("#financial-newtab").removeClass('fade');
            $("#ValidEditMsgProductBarCode").text("Please Enter barcode");
            $("#ValidEditMsgProductBarCode").show();
            $("#barcode").focus();
            return false;
        }

        if (onlinelimit == "" || onlinelimit == "undefined") {
            //$("#newitemstab").addClass('active');
            //$("#financial-newtab").removeClass('active');
            //$("#newitemstab").addClass('fade');
            //$("#financial-newtab").removeClass('fade');
            //$("#onlinelimitvalidation").text("Please Enter Shipment Limit");
            //$("#onlinelimitvalidation").show();
            //$("#onlinelimit").focus();
            //IsValid = false;\
            onlinelimit = "0";
        }
        else {
            $("#ValidEditMsgProductBarCode").text("").hide();
            if (/^[0-9]+$/.test(barcode) && barcode.length == 12) {

            }
            else {

                //$("#newitemstab").addClass('active');
                $("#financial-newtab").removeClass('active');
                //$("#newitemstab").addClass('fade');
                $("#financial-newtab").removeClass('fade');
                $("#ValidEditMsgProductBarCode").text("Barcode should contain number only with the length of 12");
                $("#ValidEditMsgProductBarCode").show();
                $("#barcode").focus();
                return false;
            }
        }



        var record = {};
        record = new FormData();

        if (id != null && id != "" && id != "undefined") {
            record.append("NeedHighAuthorization", NeedHighAuthorization);
            //record.append("SalesLimit", saleslimit);
            record.append("HighlimitOn", HighlimitOn);
            record.append("Name", name);
            record.append("ShipmentLimit", onlinelimit);
            record.append("BrandId", Manufacture);
            record.append("ItemCategoryId", Category);
            record.append("ItemSubCategoryId", subcategory);
            record.append("FamilyId", family);
            record.append("Retail", retail);
            record.append("Units", units);
            record.append("UnitCharge", unitcharge);
            record.append("UnitRetail", unitretail);
            record.append("BarCode", barcode);
            record.append("QuantityCase", qtycase);
            record.append("QuantityPallet", qtypallet);
            record.append("SingleUnitMsa", singleUnitMsa);
            record.append("Location", locationSlot);
            record.append("GroupId", group);
            record.append("LocationTwo", location2);
            record.append("MisPickId", Mispick);
            record.append("LocationThree", location3);
            record.append("LocationFour", location4);
            record.append("WeightLb", weightlb);
            record.append("WeightOz", weightoz);
            record.append("Name", weightunit);
            record.append("OrderQuantity", orderqty);
            record.append("MinOrderQty", minquantity);
            record.append("MaxOrderQty", maxquantity);
            record.append("ColorId", color);
            record.append("Id", id);
            record.append("Cost", Cost);
            record.append("MaintainStockForDays", MaintainStockForDays);

            record.append("Financial.Cost", Cost);
            record.append("Financial.Retail", Retail);
            record.append("Financial.Profit", Profitpercnt);
            record.append("Financial.MsgPromotion", mfgPromotion);
            record.append("Financial.AddToCost", AddtoCost);
            record.append("Financial.UnitCharge", UnitCharge);
            record.append("Financial.OutOfStateCost", OutofStateCost);
            record.append("Financial.OutOfStateRetail", OutofStateRetail);
            record.append("Financial.AskForPricing", AskforPricing);
            record.append("Financial.AskForDescrip", AskforDesc);
            record.append("Financial.Serialized", Serialized);

            record.append("Financial.TaxOnSales", TaxonSales);
            record.append("Financial.Purchase", Purchase);
            record.append("Financial.NoSuchDiscount", NosuchDiscount);
            record.append("Financial.NoReturns", Noreturns);
            record.append("Financial.SellBelowCost", SellbelowCost);
            record.append("Financial.SuggestedRetailPrice", SgtdRetailPrice);
            record.append("Financial.AutoSetSrp", AutosetSRP);
            //  record.append("", Percentsign);
            // record.append("", Retail);
            record.append("Financial.CodeA", CodeA);
            record.append("Financial.CodeB", CodeB);
            record.append("Financial.CodeC", CodeC);
            record.append("Financial.CodeD", CodeD);
            record.append("Financial.CustomerDiscount", CustomerDiscount);
            record.append("Financial.AttSign", AttSign);
            if (productimage.length != 0) {
                record.append("ItemImage", productimage[0]);
            }
            else {
                record.append("ItemImage", null);
            }
            console.log("New");
            console.log(record);

            $.confirm({
                title: 'Update Item!',
                content: 'Are you sure to update this item?',
                buttons: {
                    confirm: function() {
                        $.blockUI({ message: '<h3 class="blockui-txt"><img src="../images/busy.gif" style="width:15%"/> Loading ...</h1>' });

                        $.ajax({
                            url: '@Url.Action("InventoryProfessionalUpdate", "Items")',
                            type: "POST",
                            data: record,
                            async: false,
                            dataType: "json",
                            processData: false,
                            contentType: false,
                            success: function(data) {
                                console.log(data);
                                if (data == "true") {
                                    setTimeout(function() {
                                        $.unblockUI();
                                        window.location = '@Url.Action("InventoryProfessional", "Items")';

                                    }, 2500);

                                }
                            },
                            error: function() {
                                setTimeout(function() {
                                    $.unblockUI();

                                }, 2500);
                            }
                        });
                    },
                    cancel: function() {
                    },
                }
            });

        }
        else {

        }

    }

    function UpdateFinancial() {
        var searchnamee = $("#searchnamee").val();
        var Cost = $("#costN").val();
        var Retail = $("#retailN").val();
        var Profitpercnt = $("#profitpercntN").val();
        var mfgPromotion = $("#mfgpromotionN").val();
        var AddtoCost = $("#addtocostN").val();
        var UnitCharge = $("#unitchargeN").val();
        var OutofStateCost = $("#outofstatecostN").val();
        var OutofStateRetail = $("#outofstateretailN").val();
        var AskforPricing = $("#askforpricingN").is(':checked');
        var AskforDesc = $("#askfordescN").is(':checked');
        var Serialized = $("#serializedN").is(':checked');
        var TaxonSales = $("#taxonsalesN").is(':checked');
        var Purchase = $("#purchaseN").is(':checked');
        var NosuchDiscount = $("#nosuchdiscountN").is(':checked');
        var Noreturns = $("#noreturnsN").is(':checked');
        var SellbelowCost = $("#sellbelowcostN").is(':checked');
        var SgtdRetailPrice = $("#sgtdretailpriceN").val();
        var AutosetSRP = $("#autosetsrpN").is(':checked');
        var Percentsign = $("#percntN").val();
        var Retail = $("#retailN").val();
        var CodeA = $("#codeaN").is(':checked');
        var CodeB = $("#codebN").is(':checked');
        var CodeC = $("#codecN").is(':checked');
        var CodeD = $("#codedN").is(':checked');
        var CustomerDiscount = $("#addcustomersdiscountN").is(':checked');
        var AttSign = $("#attsignN").val();



        // $("#itemnumber").text(data.itemNumber);
        var id = $("#productid").text();
        var record = {};
        record = new FormData();
        if (id != null && id != "" && id != "undefined") {
            //    record.append("Name", searchnamee);
            record.append("Cost", Cost);
            //   record.append("BrandId", AttSign);
            record.append("AddCustomersDiscount", CustomerDiscount);
            record.append("CodeA", CodeA);
            record.append("CodeB", CodeB);
            record.append("CodeC", CodeC);
            record.append("CodeD", CodeD);
            // record.append("BrandId", Percentsign);
            record.append("AutoSetSrp", AutosetSRP);
            record.append("SuggestedRetailPrice", SgtdRetailPrice);
            record.append("SellBelowCost", SellbelowCost);
            record.append("NoReturns", Noreturns);
            record.append("NoSuchDiscount", NosuchDiscount);
            record.append("Purchase", Purchase);
            record.append("TaxOnSales", TaxonSales);
            record.append("Serialized", Serialized);
            record.append("AskForDescrip", AskforDesc);
            record.append("AskForPricing", AskforPricing);
            record.append("OutOfStateRetail", OutofStateRetail);
            record.append("MsgPromotion", mfgPromotion);
            record.append("OutOfStateCost", OutofStateCost);
            record.append("AddToCost", AddtoCost);
            //  record.append("BrandId", Profitpercnt);
            record.append("Retail", Retail);
            record.append("UnitCharge", UnitCharge);

            console.log(record);
            $.ajax({
                url: '@Url.Action("InventoryProfessionalUpdate", "Items")',
                type: "POST",
                data: record,
                async: false,
                dataType: "json",
                processData: false,
                contentType: false,
                success: function(data) {
                    console.log(data);
                    if (data == "Add Successfully") {
                       // AppendAllMissions(event);
                        location.reload();
                        //window.location = '@Url.Action("InventoryProfessional", "Items")';
                    }
                },
                error: function() {

                }
            });
        }
        else {

        }
    }

    @*SubItemCategory*@
        //$("#subitemcategorysubmit").on('click', function () {
        //    var SubItemCategory = $("#subitemcategory").val();
        //    var ItemCategoryId = $("#itemcategoryid").val();
        //    var ItemCategoryName = $("#itemcategoryname").val();

        //    var record = {};
        //    record = new FormData();
        //    if (SubItemCategory != null && SubItemCategory != "" && SubItemCategory != "undefined" &&
        //        ItemCategoryId != null && ItemCategoryId != "" && ItemCategoryId != "undefined" && ItemCategoryId != "--------Select-------") {
        //        $("#msgsubitemcategory").hide();
        //        record.append("SubCategory", SubItemCategory);
        //        record.append("CategoryID", ItemCategoryId);
        //        record.append("ParentCategoryName", ItemCategoryName);
        //        $.ajax({
        //            url: '@Url.Action("AddSubItemCategory", "Items")',
        //            type: "POST",
        //            data: record,
        //            async: false,
        //            dataType: "json",
        //            processData: false,
        //            contentType: false,
        //            success: function (data) {
        //                console.log(data);
        //                if (data =="Add Successfully") {
        //                    $("#addsubitemcategory").modal('hide');
        //                    window.location = '@Url.Action("InventoryProfessional", "Items")';
        //                }
        //            },
        //            error: function () {

        //            }
        //        });
        //    }
        //    else
        //    {
        //        if (SubItemCategory == null || SubItemCategory == "" || SubItemCategory == "undefined") {

        //            $("#msgsubitemcategory").show();
        //        }
        //        else {

        //            $("#msgsubitemcategory").hide();
        //        }

        //        if (ItemCategoryId == null || ItemCategoryId == "" || ItemCategoryId != "undefined" || ItemCategoryId == "--------Select-------") {

        //            $("#msgitemcategoryname").show();
        //        }
        //        else {
        //            $('#msgitemcategoryname').hide();
        //        }

        //    }
        //});
    @* Brand *@
        $("#brandsubmit").on('click', function() {
            var Brand = $("#brand").val();

            var record = {};
            record = new FormData();
            if (Brand != null && Brand != "" && Brand != "undefined") {
                $("#msgbrand").hide();
                record.append("Name", Brand);
                $.ajax({
                    url: '@Url.Action("AddBrands", "Items")',
                    type: "POST",
                    data: record,
                    async: false,
                    dataType: "json",
                    processData: false,
                    contentType: false,
                    success: function(data) {
                        console.log(data);
                        if (data == "Add Successfully") {
                            $("#addbrand").modal('hide');
                            window.location = '@Url.Action("InventoryProfessional", "Items")';
                        }
                    },
                    error: function() {

                    }
                });
            }
            else {
                $("#msgbrand").show();
            }
        });
    @* ArticleType *@
        $("#articletypesubmit").on('click', function() {
            var ArticleType = $("#articletype").val();

            var record = {};
            record = new FormData();
            if (ArticleType != null && ArticleType != "" && ArticleType != "undefined") {
                $("#msgarticletype").hide();
                record.append("ArticleTypeName", ArticleType);
                $.ajax({
                    url: '@Url.Action("AddArticle", "Items")',
                    type: "POST",
                    data: record,
                    async: false,
                    dataType: "json",
                    processData: false,
                    contentType: false,
                    success: function(data) {
                        console.log(data);
                        if (data == "Add Successfully") {
                            $("#addarticletype").modal('hide');
                            window.location = '@Url.Action("InventoryProfessional", "Items")';
                        }
                    },
                    error: function() {

                    }
                });
            }
            else {
                $("#msgarticletype").show();
            }
        });
    @* Group *@
        $("#groupsubmit").on('click', function() {
            var Group = $("#group").val();

            var record = {};
            record = new FormData();
            if (Group != null && Group != "" && Group != "undefined") {
                $("#msggroup").hide();
                record.append("Name", Group);
                $.ajax({
                    url: '@Url.Action("AddGroupJson", "Items")',
                    type: "POST",
                    data: record,
                    async: false,
                    dataType: "json",
                    processData: false,
                    contentType: false,
                    success: function(data) {
                        console.log(data);
                        if (data == "Add Successfully") {
                            $("#addgroup").modal('hide');
                            window.location = '@Url.Action("InventoryProfessional", "Items")';
                        }
                    },
                    error: function() {

                    }
                });
            }
            else {
                $("#msggroup").show();
            }
        });
    @* Model *@
        $("#modelsubmit").on('click', function() {
            var Model = $("#model").val();

            var record = {};
            record = new FormData();
            if (Model != null && Model != "" && Model != "undefined") {
                $("#msgmodel").hide();
                record.append("Name", Model);
                $.ajax({
                    url: '@Url.Action("AddModelJson", "Items")',
                    type: "POST",
                    data: record,
                    async: false,
                    dataType: "json",
                    processData: false,
                    contentType: false,
                    success: function(data) {
                        console.log(data);
                        if (data == "Add Successfully") {
                            $("#addmodel").modal('hide');
                            window.location = '@Url.Action("InventoryProfessional", "Items")';
                        }
                    },
                    error: function() {

                    }
                });
            }
            else {
                $("#msgmodel").show();
            }
        });
    @* Color *@
        $("#mispicksubmit").on('click', function() {
            var Mispick = $("#mispickidmodel").val();
            var record = {};
            record = new FormData();
            if (Mispick != null && Mispick != "" && Mispick != "undefined") {
                $("#addmispick").hide();
                record.append("MisPickName", Mispick);
                $.ajax({
                    url: '@Url.Action("AddMispickJson", "Items")',
                    type: "POST",
                    data: record,
                    async: false,
                    dataType: "json",
                    processData: false,
                    contentType: false,
                    success: function(data) {
                        console.log(data);
                        if (data == "Add Successfully") {
                            $("#addmispick").modal('hide');
                            window.location = '@Url.Action("InventoryProfessional", "Items")';
                        }
                    },
                    error: function() {

                    }
                });
            }
            else {
                $("#msgmodel").show();
            }
        });


    $(".Details-tab").click(function() {
        $("#financial-new").hide();
        $("#newitems").hide();
        $("#exitingitems").show();
    });
    $(".Financial-tab").click(function() {
        $("#newitems").hide();
        $("#financial-main").show();
        $("#financial-new").hide();
    });
    $(".Suppliers-tab").click(function() {
        $("#financial-new").hide();
        $("#newitems").hide();
        $("#supplier-main").show();
    });
    $(".Purchases-tab").click(function() {
        $("#financial-new").hide();
        $("#newitems").hide();
        $("#purchase-main").show();
    });

    $(".Sales-tab").click(function() {
        $("#financial-new").hide();
        $("#newitems").hide();
        $("#sale-main").show();
    });
    $(".Features-tab").click(function() {
        $("#financial-new").hide();
        $("#newitems").hide();
        $("#feature-main").show();
    });
    $(".Tools-tab").click(function() {
        $("#financial-new").hide();
        $("#newitems").hide();
        $("#tool-main").show();
    });
    $("#refresh-id").click(function() {
        location.reload();
    });


    $("#colorsubmit").on('click', function() {
        var Color = $("#color").val();

        var record = {};
        record = new FormData();
        if (Color != null && Color != "" && Color != "undefined") {
            $("#msgcolor").hide();
            record.append("Name", Color);
            $.ajax({
                url: '@Url.Action("AddColorJson", "Items")',
                type: "POST",
                data: record,
                async: false,
                dataType: "json",
                processData: false,
                contentType: false,
                success: function(data) {
                    console.log(data);
                    if (data == "Add Successfully") {
                        $("#addcolor").modal('hide');
                        window.location = '@Url.Action("InventoryProfessional", "Items")';
                    }
                },
                error: function() {

                }
            });
        }
        else {
            $("#msgcolor").show();
        }
    });
</script>


<script>
    $("#info").on('click', function() {
        $("#infodata").show();
        $("#classificationdata").hide();
    });
    $("#classification").on('click', function() {
        $("#infodata").hide();
        $("#classificationdata").show();
    });
    $(".Details-tab").on('click', function() {
        $(".Financial-tab").removeClass('active');
        $(".Suppliers-tab").removeClass('active');
        $(".Purchase-tab").removeClass('active');
        $(".Saless-tab").removeClass('active');
        $(".Features-tab").removeClass('active');
        $(".Tools-tab").removeClass('active');
        $(".Details-tab").addClass('active');
        $(".Attachments-tab").removeClass('active');

    });
    $(".Financial-tab").on('click', function() {
        $(".Details-tab").removeClass('active');
        $(".Suppliers-tab").removeClass('active');
        $(".Purchase-tab").removeClass('active');
        $(".Saless-tab").removeClass('active');
        $(".Features-tab").removeClass('active');
        $(".Tools-tab").removeClass('active');
        $(".Financial-tab").addClass('active');
        $(".Attachments-tab").removeClass('active');

    });
     $(".Suppliers-tab").on('click', function() {
        $(".Details-tab").removeClass('active');
        $(".Suppliers-tab").addClass('active');
        $(".Purchase-tab").removeClass('active');
        $(".Saless-tab").removeClass('active');
        $(".Features-tab").removeClass('active');
        $(".Tools-tab").removeClass('active');
        $(".Financial-tab").removeClass('active');
        $(".Attachments-tab").removeClass('active');

    });
     $(".Purchase-tab").on('click', function() {
        $(".Details-tab").removeClass('active');
        $(".Suppliers-tab").removeClass('active');
        $(".Purchase-tab").addClass('active');
        $(".Saless-tab").removeClass('active');
        $(".Features-tab").removeClass('active');
        $(".Tools-tab").removeClass('active');
        $(".Financial-tab").removeClass('active');
        $(".Attachments-tab").removeClass('active');

    });
     $(".Saless-tab").on('click', function() {
        $(".Details-tab").removeClass('active');
        $(".Suppliers-tab").removeClass('active');
        $(".Purchase-tab").removeClass('active');
        $(".Saless-tab").addClass('active');
        $(".Features-tab").removeClass('active');
        $(".Tools-tab").removeClass('active');
        $(".Financial-tab").removeClass('active');
        $(".Attachments-tab").removeClass('active');

    });
     $(".Features-tab").on('click', function() {
        $(".Details-tab").removeClass('active');
        $(".Suppliers-tab").removeClass('active');
        $(".Purchase-tab").removeClass('active');
        $(".Saless-tab").removeClass('active');
        $(".Features-tab").addClass('active');
        $(".Tools-tab").removeClass('active');
        $(".Attachments-tab").removeClass('active');
        $(".Financial-tab").removeClass('active');
    });
    $(".Tools-tab").on('click', function() {
        $(".Details-tab").removeClass('active');
        $(".Suppliers-tab").removeClass('active');
        $(".Purchase-tab").removeClass('active');
        $(".Saless-tab").removeClass('active');
        $(".Features-tab").removeClass('active');
        $(".Tools-tab").addClass('active');
        $(".Financial-tab").removeClass('active');
        $(".Attachments-tab").removeClass('active');

    });
     $(".Attachments-tab").on('click', function() {
        $(".Details-tab").removeClass('active');
        $(".Suppliers-tab").removeClass('active');
        $(".Purchase-tab").removeClass('active');
        $(".Saless-tab").removeClass('active');
        $(".Features-tab").removeClass('active');
        $(".Tools-tab").removeClass('active');
        $(".Attachments-tab").addClass('active');
        $(".Financial-tab").removeClass('active');
    });
    $('#CheckBoxNHA').change(function() {
        if (this.checked) {
            $("#HighlimitOn").css("display", "block")

        }
        else {
            $("#HighlimitOn").css("display", "none")
        }
        /*    $('#textbox1').val(this.checked);*/
    });
    $('#EditCheckBoxNHA').change(function() {
        if (this.checked) {
            $("#EditHighlimitOn").css("display", "block")

        }
        else {
            $("#EditHighlimitOn").css("display", "none")
        }
        /*    $('#textbox1').val(this.checked);*/
    });


    function DeleteItem() {
        var id = $("#productid").text();


        $.confirm({
            title: 'Delete Item!',
            content: 'Are you sure to delete this item?',
            buttons: {
                confirm: function() {
                    $.blockUI({ message: '<h3 class="blockui-txt"><img src="../images/busy.gif" style="width:15%"/> Loading ...</h1>' });
                    $.ajax({
                        type: "DELETE",
                        url: "@Url.Action("DeleteItem", "Items")",
                        data: {
                            id: id
                        },
                        dataType: "json",
                        success: function(data) {
                            if (data == true) {
                                setTimeout(function() {
                                    $.unblockUI();
                                    //AppendAllMissions(event);
                                    location.reload();
                                    //window.location = '@Url.Action("InventoryProfessional", "items")';

                                }, 1500);

                            }
                        }
                    });
                },
                cancel: function() {
                },
            }
        });
    }
    function GetStockLevelListItems(val) {

        if (val != null && val != "undefined") {
            var id = val;

        }
        $.ajax({
            type: "GET",
            url: '@Url.Action("GetStockItemDataByItemID", "Items")',
            data: {
                id: id
            },
            dataType: "json",

            success: function(data) {

                if (data != null && data != "undefined") {
                    $.each(data, function(key, val) {

                        $('#progressbarheight').css("height", val.quantity + '%');
                        $('#progressbarheight').text(val.quantity + "%");
                        if (val.items != null && val.items != "undefined") {

                            if (val.items.orderQuantity != null && val.items.orderQuantity != "undefined") {
                                $("#orderqntynew").val(val.items.orderQuantity)
                            }
                            if (val.items.minOrderQty != null && val.items.minOrderQty != "undefined") {
                                $("#minqntynew").val(val.items.minOrderQty);
                            }
                            if (val.items.maxOrderQty != null && val.items.maxOrderQty != "undefined") {
                                $("#maxqntynew").val(val.items.maxOrderQty);
                            }
                            if (val.items.salesLimit != null && val.items.salesLimit != "undefined") {
                                $("#saleslimitnew").val(val.items.salesLimit);

                            }
                        }

                    })
                }
            },
            error: function(xhr, status, error) {

                var errorMessage = xhr.status + ': ' + xhr.statusText

            },

        });
    }

    function ClosePurchaseOrderParModal() {
        $("#PurchaseOrderParModal").modal('hide');
        /* $("#appendnewrowforsalePartialdetail").remove();*/
    }

    function PurchaseOrderPModal(invNum) {
        var myval = $("#num" + invNum).text();
        var id = myval;
        $.ajax({
            type: "POST",
            url: '@Url.Action("InventoryGetPurchaseDetail", "Items")',
            data: {
                InvoiceNumber: id
            },
            dataType: "json",
            success: function(data) {
                InvShowProductList(data);
            },
            error: function(xhr, status, error) {
                var errorMessage = xhr.status + ': ' + xhr.statusText
            },
        });
    }

    function InvShowProductList(data) {
        var html = "";
        $('#appendnewrowforsalePartialdetail').empty();

        $.each(data, function(index, item) {


            $("#myInputP").val(item.supplierName);
            $("#txtSupplierNo").val(item.supplierNumber);
            $("#SubTotal").val(item.subTotal);
            $("#Total").val(item.total);
            $("#Tax").val(item.tax);
            $("#Freight").val(item.freight);
            $("#Other").val(item.other);
            $("#TotalItems").val(item.totalItems);
            $("#Notes").val(item.notes);
            $("#PaymentTerms").val(item.paymentTerms);
            $("#Podate").val(item.pOrderDate);
            $("#DateReceived").val(item.recievedOrderDate);
            $("#TotalTobacco").val(item.totalTobacco);
            $("#TotalCigar").val(item.totalCigar);
            $("#TotalCigarette").val(item.totalCigarette);
            $("#CigaretteStock").val(item.cigaretteStick);
            if (item.isTax == true) {
                $('#IsTax').prop('checked', true);
            } else {
                $('#IsTax').prop('checked', false);
            }
            if (item.received == true) {
                $('#Received').prop('checked', true);
            } else {
                $('#Received').prop('checked', false);
            }
            if (item.updateCost == true) {
                $('#UpdateCost').prop('checked', true);
            } else {
                $('#UpdateCost').prop('checked', false);
            }
            if (item.updateOscost == true) {
                $('#UpateOscost').prop('checked', true);
            } else {
                $('#UpateOscost').prop('checked', false);
            }
            if (item.supplieritems == true) {
                $('#SupplierItemOnly').prop('checked', true);
            } else {
                $('#SupplierItemOnly').prop('checked', false);
            }
            if (item.showAllItems == true) {
                $('#ShowAllitem').prop('checked', true);
            } else {
                $('#ShowAllitem').prop('checked', false);
            }
            if (item.isCaseQty == true) {
                $('#IsCaseQty').prop('checked', true);
            } else {
                $('#IsCaseQty').prop('checked', false);
            }
            if (item.isDiscount == true) {
                $('#IsDiscount').prop('checked', true);
            } else {
                $('#IsDiscount').prop('checked', false);
            }
            if (item.isPrice == true) {
                $('#IsPrice').prop('checked', true);
            } else {
                $('#IsPrice').prop('checked', false);
            }
            if (item.isQty == true) {
                $('#IsQty').prop('checked', true);
            } else {
                $('#IsQty').prop('checked', false);
            }
            if (item.isReport == true) {
                $('#Report').prop('checked', true);
            } else {
                $('#Report').prop('checked', false);
            }
        });

        $.each(data, function(index, item) {

            html += '<tr class="odd" style="background-color: #f89898 !important;">';
            html += '<td class="sorting_1 brdr-right" style = "width:10px;">' + (index + 1) + '</td>';
            html += ' <td class="brdr-right" style = "width:10px;">' + item.supplierItemNumber + '</td>';
            html += ' <td class="brdr-right" style = "width:10px;">' + item.stockItemNumber + '</td>';
            html += ' <td class="brdr-right">' + item.description + '</td>';
            html += ' <td class="brdr-right">' + item.retail + '</td>';
            html += ' <td class="brdr-right">' + item.price + '</td>';
            html += ' <td class="brdr-right">' + item.qty + '</td>';
            html += ' <td class="brdr-right">' + item.caseQty + '</td>';
            html += ' <td class="brdr-right">' + item.discount + '</td>';
            html += ' <td>' + item.amount + '</td>';
            html += '</tr>';


        });

        $('#appendnewrowforsalePartialdetail').append(html);
        $('#PurchaseOrderParModal').modal('show');

    }

    
    function SaleItemsGet(){
        debugger;
        var checktable = $('#itemsaletable').dataTable();
        checktable.fnClearTable();
        checktable.fnDestroy();
        var ItemId = parseInt($("#productid").text());
        $.ajax({
            type: "GET",
            url: '@Url.Action("SalesItemsGet", "Items")',
            data: {ItemId: ItemId },
            dataType: "json",
            success: function (data) {
                debugger;
                var inner = '';
                if(data !="false"){
                    $.each(data, function (val, text) {
                        // Invoice Date Formating
                        var invoiceDate = "";
                        if (text.invoiceDate !== null) {
                            var invDate = new Date(text.invoiceDate);
                            var invoiceDate = invDate.getDate() + '-' + (invDate.getMonth() + 1) + '-' + invDate.getFullYear();
                        }
                        else {
                            invoiceDate = "N/A";
                        }
                        //Invoice Row
                        inner = '';
                        inner += '<tr>';
                        inner += '<td> ' + text.invoiceNumber + ' </td>';
                        inner += '<td> ' + invoiceDate + ' </td>';
                        inner += '<td> ' + text.company + ' </td>';
                        inner += '<td> ' + text.sales + ' </td>';
                        inner += '<td> N/A </td>';
                        inner += '<td> N/A </td>';
                        inner += '<td> ' + text.cost + ' </td>';
                        inner += '<td> ' + text.price + ' </td>';
                        inner += '<td> ' + text.total + ' </td>';
                        inner += '</tr>';
                        $('#itemsaletable > tbody:last-child').append(inner);
                    })
                }
            },
            error: function (xhr, status, error) {
                var errorMessage = xhr.status + ': ' + xhr.statusText
            },
        });
    }
   
 
    function SupplierPartialModalP(id) {
        var myval = $("#num" + invNum).text();
        var id = myval;
        $.ajax({
            type: "POST",
            url: '@Url.Action("InventoryGetPurchaseDetail", "Items")',
            data: {
                InvoiceNumber: id
            },
            dataType: "json",
            success: function(data) {
                InvShowSupplierList(data);
            },
            error: function(xhr, status, error) {
                var errorMessage = xhr.status + ': ' + xhr.statusText
            },
        });
    }
    function InvShowSupplierList(data) {
        console.log(data);
        var html = "";
        $('#appendnewrowforsalePartialdetail').empty();

        $.each(data, function(index, item) {


            $("#myInputP").val(item.supplierName);
            $("#txtSupplierNo").val(item.supplierNumber);
            $("#SubTotal").val(item.subTotal);
            $("#Total").val(item.total);
            $("#Tax").val(item.tax);
            $("#Freight").val(item.freight);
            $("#Other").val(item.other);
            $("#TotalItems").val(item.totalItems);
            $("#Notes").val(item.notes);
            $("#PaymentTerms").val(item.paymentTerms);
            $("#Podate").val(item.pOrderDate);
            $("#DateReceived").val(item.recievedOrderDate);
            $("#TotalTobacco").val(item.totalTobacco);
            $("#TotalCigar").val(item.totalCigar);
            $("#TotalCigarette").val(item.totalCigarette);
            $("#CigaretteStock").val(item.cigaretteStick);
            if (item.isTax == true) {
                $('#IsTax').prop('checked', true);
            } else {
                $('#IsTax').prop('checked', false);
            }
            if (item.received == true) {
                $('#Received').prop('checked', true);
            } else {
                $('#Received').prop('checked', false);
            }
            if (item.updateCost == true) {
                $('#UpdateCost').prop('checked', true);
            } else {
                $('#UpdateCost').prop('checked', false);
            }
            if (item.updateOscost == true) {
                $('#UpateOscost').prop('checked', true);
            } else {
                $('#UpateOscost').prop('checked', false);
            }
            if (item.supplieritems == true) {
                $('#SupplierItemOnly').prop('checked', true);
            } else {
                $('#SupplierItemOnly').prop('checked', false);
            }
            if (item.showAllItems == true) {
                $('#ShowAllitem').prop('checked', true);
            } else {
                $('#ShowAllitem').prop('checked', false);
            }
            if (item.isCaseQty == true) {
                $('#IsCaseQty').prop('checked', true);
            } else {
                $('#IsCaseQty').prop('checked', false);
            }
            if (item.isDiscount == true) {
                $('#IsDiscount').prop('checked', true);
            } else {
                $('#IsDiscount').prop('checked', false);
            }
            if (item.isPrice == true) {
                $('#IsPrice').prop('checked', true);
            } else {
                $('#IsPrice').prop('checked', false);
            }
            if (item.isQty == true) {
                $('#IsQty').prop('checked', true);
            } else {
                $('#IsQty').prop('checked', false);
            }
            if (item.isReport == true) {
                $('#Report').prop('checked', true);
            } else {
                $('#Report').prop('checked', false);
            }
        });

        $.each(data, function(index, item) {

            html += '<tr class="odd" style="background-color: #f89898 !important;">';
            html += '<td class="sorting_1 brdr-right" style = "width:10px;">' + (index + 1) + '</td>';
            html += ' <td class="brdr-right" style = "width:10px;">' + item.supplierItemNumber + '</td>';
            html += ' <td class="brdr-right" style = "width:10px;">' + item.stockItemNumber + '</td>';
            html += ' <td class="brdr-right">' + item.description + '</td>';
            html += ' <td class="brdr-right">' + item.retail + '</td>';
            html += ' <td class="brdr-right">' + item.price + '</td>';
            html += ' <td class="brdr-right">' + item.qty + '</td>';
            html += ' <td class="brdr-right">' + item.caseQty + '</td>';
            html += ' <td class="brdr-right">' + item.discount + '</td>';
            html += ' <td>' + item.amount + '</td>';
            html += '</tr>';


        });

        $('#appendnewrowforsalePartialdetail').append(html);
        $('#PurchaseOrderParModal').modal('show');

    }

    function SupplierPartialModalPar(id) {

        $.ajax({
            type: "POST",
            url: '@Url.Action("InventorySupplierDetail", "Items")',
            data: {
                id: id
            },
            dataType: "json",
            success: function(data) {
                InvShowSupplierList(data);
            },
            error: function(xhr, status, error) {
                var errorMessage = xhr.status + ': ' + xhr.statusText
            },
        });
    }
    function InvShowSupplierList(data) {
        var html = "";
        //$('#appendnewrowforsalePartialdetail').empty();

        $.each(data, function(index, item) {


            $("#txtCompnay").val(item.company);
            $("#txtFirstName").val(item.firstName);
            $("#AccountNumberList ").text(item.accountNumber);
            $("#txtPhone").val(item.phone);
            $("#txtEmail").val(item.email);
            $("#txtTitle").val(item.title);
            $("#txtLastName").val(item.lastName);
            $("#txtVendortype").val(item.venderType);
            $("#txtStreet").val(item.street);
            $("#txtCity").val(item.city);
            $("#txtState").val(item.stateName);
            $("#txtZipCode").val(item.zipCode);
            $("#txtSuite").val(item.suite);
            $("#txtCountry").val(item.country);
            $("#txtStateDiscount").val(item.discount);
            $("#txtDiscount").val(item.discount);
            $("#txtFax").val(item.fax);
            $("#txtPayTerms").val(item.payTerms);
            $("#txtCreditLimit").val(item.creditLimit);
            $("#txtFedTax").val(item.fedTaxId);
            $("#txtStateTax").val(item.stateTaxId);
            $("#txtWebsite").val(item.website);
            $("#txtLedger").val(item.ledger);
            $("#txtLedgerCode").val(item.ledgerCode);
            $("#txtCheckMemo").val(item.checkMemo);
            $("#txtComments").val(item.comments);

            if (item.outOfStateSupplier == true) {
                $('#OutOfStateSupplier').prop('checked', true);
            } else {
                $('#OutOfStateSupplier').prop('checked', false);
            }
            if (item.localTextPaidBySupplier == true) {
                $('#LocalTextPaidBySupplier').prop('checked', true);
            } else {
                $('#LocalTextPaidBySupplier').prop('checked', false);
            }
            if (item.reportTaxesToStateNc == true) {
                $('#ReportTaxesToStateNc').prop('checked', true);
            } else {
                $('#ReportTaxesToStateNc').prop('checked', false);
            }
            if (item.printYtdonChecks == true) {
                $('#PrintYtdonChecks').prop('checked', true);
            } else {
                $('#PrintYtdonChecks').prop('checked', false);
            }
        });
        $('#SupplierPartialModal').modal('show');

    }

    function SalesPartialModal(invNum) {

        var myval = $("#abcdef" + invNum).text();
        var id = myval;

        $.ajax({
            type: "POST",
            url: '@Url.Action("InventoryGetSaleOrderDetail", "Items")',
            data: {
                InvoiceNumber: id
            },
            dataType: "json",
            success: function(data) {
                InvShowSaleList(data);
            },
            error: function(xhr, status, error) {
                var errorMessage = xhr.status + ': ' + xhr.statusText
            },
        });
    }
    function InvShowSaleList(data) {
        console.log(data);
        var html = "";
        $('#appendnewrowforsaleInventory').empty();

        $.each(data, function(index, item) {


            $("#searchnameP").val(item.customerName);
            $("#customercodeinfo").val(item.customerNumber);
            $("#previousbalance").val(item.previousBalance);
            $("#subtotalauto").val(item.subTotal);
            $("#discountidadd").val(item.discount);
            $("#otherid").val(item.other);
            $("#taxid").val(item.tax);
            $("#freightid").val(item.freight);
            $("#invoicetotal").val(item.invoiceTotal);
            $("#invoicenumber").val(item.invoiceNumber);
            $("#amountdue").val(item.amountDue);

            //     if (item.isTax == true) {
            //         $('#IsTax').prop('checked', true);
            //     } else {
            //         $('#IsTax').prop('checked', false);
            //     }

        });

        $.each(data, function(index, item) {

            html += '<tr class="odd" style="background-color: #f89898 !important;">';
            html += '<td class="sorting_1 brdr-right" style = "width:10px;">' + (index + 1) + '</td>';
            html += ' <td class="brdr-right" style = "width:10px;">' + item.itemNumber + '</td>';
            html += ' <td class="brdr-right" style = "width:10px;">' + item.itemDescription + '</td>';
            html += ' <td class="brdr-right">' + item.quantity + '</td>';
            html += ' <td class="brdr-right">' + item.amountRetail + '</td>';
            if (item.inDiscount == null) {
                html += '<td class="grids-td">N/A</td>';
            } else {
                html += '<td class="grids-td">' + item.inDiscount + '</td>';
            }
            if (item.outDiscount == null) {
                html += '<td class="grids-td">N/A</td>';
            } else {
                html += '<td class="grids-td">' + item.outDiscount + '</td>';
            }
            if (item.inUnits == null) {
                html += '<td class="grids-td">N/A</td>';
            } else {
                html += '<td class="grids-td">' + item.inUnits + '</td>';
            }
            if (item.outUnits == null) {
                html += '<td class="grids-td">N/A</td>';
            } else {
                html += '<td class="grids-td">' + item.outUnits + '</td>';
            }
            html += ' <td class="brdr-right">' + item.amountRetail + '</td>';
            html += ' <td>' + item.total + '</td>';
            html += '</tr>';


        });

        $('#appendnewrowforsaleInventory').append(html);
        $("#SaleInvoiceModal").modal('show');

    }

</script>

<div id="PurchaseOrderParModal" class="modal fade" z-index="-1" role="dialog">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header" style="padding:0.5rem!important;">
                <h5 class="modal-title" id="ModalLabel">Shipping & Handling</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close" onclick="ClosePurchaseOrderParModal()">
                    <span aria-hidden="true">×</span>
                </button>
            </div>
            <div class="modal-body" style="color: #0000ab; padding-top: 20px;padding-bottom:10px;">
                <div class="row">
                    @{
                        Html.RenderPartial("PurchaseOrderInvPartial", new PurchaseOrder());
                    }

                </div>
            </div>
        </div>
    </div>
</div>


@*//////sale screen Inventory////////*@


<div id="SaleInvoiceModal" class="modal fade" z-index="-1" role="dialog">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header" style="padding:0.5rem!important;">
                <h5 class="modal-title" id="ModalLabel">Shipping & Handling</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close" onclick="closemodalsale()">
                    <span aria-hidden="true">×</span>
                </button>
            </div>
            <div class="modal-body" style="color: #0000ab; padding-top: 20px;padding-bottom:10px;">
                <div class="row">
                    @{
                        Html.RenderPartial("SalesInvoicePartial", new PosSale());
                    }

                </div>
            </div>
        </div>
    </div>
</div>


<div id="SupplierPartialModal" class="modal fade" z-index="-1" role="dialog">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header" style="padding:0.5rem!important;">
                <h5 class="modal-title" id="ModalLabel">Suppliers</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close" onclick="closemodalSupplier()">
                    <span aria-hidden="true">×</span>
                </button>
            </div>
            <div class="modal-body" style="color: #0000ab; padding-top: 20px;padding-bottom:10px;">
                <div class="row">
                    @{
                        Html.RenderPartial("SupplierPartial", new Vendor());
                    }

                </div>
            </div>
        </div>
    </div>
</div>


<div id="SupplierPartialModal" class="modal fade" z-index="-1" role="dialog">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header" style="padding:0.5rem!important;">
                <h5 class="modal-title" id="ModalLabel">Suppliers</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close" onclick="closemodalSupplier()">
                    <span aria-hidden="true">×</span>
                </button>
            </div>
            <div class="modal-body" style="color: #0000ab; padding-top: 20px;padding-bottom:10px;">
                <div class="row">
                    @{
                        Html.RenderPartial("SupplierPartial", new Vendor());
                    }

                </div>
            </div>
        </div>
    </div>
</div>


<div id="attach" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title mx-auto" id="ModalLabel">Attachments</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close" onclick="closemodal()">
                    <span aria-hidden="true">×</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <label id="documentuploadresponse" class="text-danger" style="text-align:center"></label>
                    <div class="form-group">
                        <label>Document Type</label>
                        <div class="row">
                            <div class="col-lg-10">
                                @Html.DropDownList("DocumentType", (IEnumerable<SelectListItem>)ViewBag.SupDocType, "--Choose Doc Type--", new { @class = "form-control", id = "SupDocType" })
                                <label class="text-danger db" style="display:none" id="msgdoctype">Enter Document Type</label>
                                @*<select class="form-control">
                                <option value="value">Select Document Type</option>
                                <option value="value">Paper</option>
                                <option value="value">Letter</option>
                                </select>*@
                            </div>
                            <div class="col-lg-1">
                                <i class="mdi mdi-plus text-primary" data-bs-toggle="modal" data-bs-target="#DocumentTypeModal"></i>

                            </div>


                        </div>
                        <div class="row">
                            <div class="col-lg-10">
                                <label>Document  Name</label>
                                <input type="text" name="name" class="form-control" placeholder="Enter Document Name" id="DocumentName" />
                                <br />
                                <input type="file" name="file" id="Imagefile" />

                            </div>
                        </div>

                        <br />
                        <label class="text-danger db" style="display:none" id="msgstore">Select Attachments</label>
                        <br />
                    </div>
                    <button type="submit" class="btn btn-dark text-white mx-auto col-md-3" id="submittAttachments"><p style="color:white">Submit</p></button>
                </div>

            </div>

        </div>
    </div>
</div>

@*DocumentTypeModal*@
<div id="DocumentTypeModal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title mx-auto" id="ModalLabel">Document Types </h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close" onclick="closemodaldocument()">
                    <span aria-hidden="true">×</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="form-group">

                        <div class="row">
                            <div class="col-lg-10">
                                <label>Document Type  Name</label>
                                <input type="text" name="name" class="form-control" placeholder="Enter Document Type Name" id="DocumentType" />

                            </div>
                        </div>
                        <label class="text-danger db" style="display:none" id="msgDocumentType">Enter Document Type Name</label>
                    </div>
                    <button type="button" class="btn btn-dark text-white mx-auto col-md-3" id="DocumentTypeSubmit"><p style="color:white">Submit</p></button>
                </div>

            </div>

        </div>
    </div>
</div>
<script>
    function SupplierPartialModalP() {
        $("#SupplierPartialModal").modal('show');
    }
    function closemodalSupplier() {
        $("#SupplierPartialModal").modal('hide');
    }
    function closemodaldocument() {
        $("#DocumentTypeModal").modal('hide');
    }
    $("#submittAttachments").on('click', function() {


        var DocumentType = $("#SupDocType").val();
        var DocumentName = $("#DocumentName").val();
            var id = $("#productid").text();

        var val = $("#Imagefile").val().toLowerCase(),
            regex = new RegExp("(.*?)\.(pdf|PDF)$");
        if (val != "") {
            if (!(regex.test(val))) {
                $("#documentuploadresponse").text("Only pdf format are allowed !");
                $("#documentuploadresponse").show();
                setTimeout(function() {
                    $("#documentuploadresponse").hide();
                }, 3000);
            }
            else {
                var record = {};
                record = new FormData();

                var titleimage = "";
                if (DocumentType != null && DocumentType != "" && DocumentType != "undefined") {
                    if (document.getElementById('Imagefile') !== null) {
                        var totalFiles = document.getElementById('Imagefile').files.length;
                        for (var i = 0; i < totalFiles; i++)
                            titleimage = document.getElementById('Imagefile').files[i];
                    }
                    $("#msgDocumentType").hide();
                    record.append("DocumentTypeId", DocumentType);
                    record.append("DocumentName", DocumentName);
                    record.append("ItemID", id);
                    if (titleimage != "" && titleimage != null) {
                        record.append("file", titleimage);
                    }
                    //console.log(record);

                    $.confirm({
                        title: 'Add Attachment!',
                        content: 'Are you sure to add attachment against this item?',
                        buttons: {
                            confirm: function() {
                                $.blockUI({ message: '<h3 class="blockui-txt"><img src="../images/busy.gif" style="width:15%"/> Loading ...</h1>' });
                                $.ajax({
                                    type: "POST",
                                    url: '@Url.Action("AdditemsDocument", "Items")',
                                    data: record,
                                    dataType: "json",
                                    processData: false,
                                    contentType: false,
                                    success: function(data) {
                                        if (data == true) {
                                            $("#documentuploadresponse").text("successfully uploaded");
                                            $("#documentuploadresponse").show();
                                            toastr.success("Document Uploaded Sucessfully");
                                            setTimeout(function() {
                                                $.unblockUI();

                                                location.reload();
                                            }, 2500);
                                        }
                                        else {
                                            toastr.error("Unable to Add Document");
                                            setTimeout(function() {
                                                $.unblockUI();

                                                location.reload();
                                            }, 2500);
                                        }
                                    },
                                    error: function() {
                                        setTimeout(function() {
                                            $.unblockUI();
                                            location.reload();
                                        }, 2500);
                                    }
                                });

                            },
                            cancel: function() {
                            },
                        }
                    });
                }
                $("#msgDocumentType").show();

            }
            //else
            //{
            //    $("#msgDocumentType").show();
            //}
        }
    });

    $("#DocumentTypeSubmit").on('click', function() {
        var DocumentType = $("#DocumentType").val();

        var record = {};
        record = new FormData();
        if (DocumentType != null && DocumentType != "" && DocumentType != "undefined") {
            $("#msgDocumentType").hide();
            record.append("DocumentType", DocumentType);
            $.confirm({
                title: 'Add New Document Type!',
                content: 'Are you sure to add new document type?',
                buttons: {
                    confirm: function() {
                        $.blockUI({ message: '<h3 class="blockui-txt"><img src="../images/busy.gif" style="width:15%"/> Loading ...</h1>' });
                        $.ajax({
                            url: '@Url.Action("AddDocumentType", "Vendor")',
                            type: "POST",
                            data: record,
                            async: false,
                            dataType: "json",
                            processData: false,
                            contentType: false,
                            success: function(data) {
                                if (data == "Add Successfully") {
                                    $("#DocumentTypeModal").modal('hide');
                                    setTimeout(function() {
                                        $.unblockUI();
                                        window.location = '@Url.Action("InventoryProfessional", "Items")';

                                    }, 2500);
                                }
                            },
                            error: function() {
                                setTimeout(function() {
                                    $.unblockUI();

                                }, 2500);
                            }
                        });
                    },
                    cancel: function() {
                    },
                }
            });


        }
        else {
            $("#msgDocumentType").show();
        }
    });
</script>
