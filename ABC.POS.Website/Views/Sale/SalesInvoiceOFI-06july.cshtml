@model ABC.EFCore.Repository.Edmx.PosSale
@{
    ViewData["Title"] = "SalesInvoice";
    Layout = "~/Views/Shared/_CashierLayout.cshtml";
    var CartDetailList = (List<ABC.EFCore.Repository.Edmx.CartDetail>)ViewBag.CartDetailList;
    var CustomerInformation = (ABC.EFCore.Repository.Edmx.CustomerInformation)ViewBag.CustomerInformation;
    var customerorder = (List<ABC.EFCore.Repository.Edmx.CustomerOrder>)ViewBag.customerorders;
    var requestedinvoice = false;
    var requestapprove = false;
    foreach (var item in customerorder)
    {
        if (item.NeedApproval == true)
        {
            requestedinvoice = true;
        }
        if (item.NeedApproval == true && item.AcceptApproval == true)
        {
            requestapprove = true;
        }
    }

    var customername = "";
    var customercode = "";
    var CustomerID = 0;
    var productlist = (List<ABC.EFCore.Repository.Edmx.Product>)ViewBag.productlist;
    if (CustomerInformation != null)
    {
        Model.CustomerName = CustomerInformation.Company;

        Model.CustomerNumber = CustomerInformation.CustomerCode;
        customername = CustomerInformation.Company;
        customercode = CustomerInformation.CustomerCode;
        CustomerID = CustomerInformation.Id;
    }

    float? subtotal = 0;
}
<script src="~/Scripts/jquery-3.4.1.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>

<link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/css/toastr.min.css">
<script src="//cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/js/toastr.min.js"></script>

<style>
    .inputblue {
        color: #00008be6;
        font-weight: 700;
        font-size: large;
    }

    .inputbluesmall {
        color: #00008be6;
        font-weight: 700;
    }

    .marginbtm {
        margin-bottom: -7.4%;
    }

    .modalstyling {
        width: 57%;
        left: 25%;
    }
    /* Extra small devices (phones, 600px and down) */
    @@media only screen and (max-width: 600px) {
        .marginbtm {
            margin-bottom: -7.4%;
        }

        .margintop {
            margin-top: 15%;
        }

        .marginbotm {
            margin-bottom: -7%;
        }
    }

    /* Small devices (portrait tablets and large phones, 600px and up) */
    @@media only screen and (min-width: 600px) {
        .marginbtm {
            margin-bottom: -7.4%;
        }

        .margintop {
            margin-top: 15%;
        }

        .marginbotm {
            margin-bottom: -7%;
        }
    }

    /* Medium devices (landscape tablets, 768px and up) */
    @@media only screen and (min-width: 768px) {
        .marginbtm {
            margin-bottom: -3.7%;
        }

        .margintop {
            margin-top: 5%;
        }

        .marginbotm {
            margin-bottom: 0%;
        }
    }

    /* Large devices (laptops/desktops, 992px and up) */
    @@media only screen and (min-width: 992px) {
        .marginbtm {
            margin-bottom: -7.4%;
        }

        .margintop {
            margin-top: 10%;
        }

        .marginbotm {
            margin-bottom: -6%;
        }
    }

    @@media only screen and (min-width: 1024px) {
        .marginbtm {
            margin-bottom: -10.3%;
        }

        .marginlft {
            margin-left: -250%;
        }

        .margintop {
            margin-top: 10%;
        }

        .marginbotm {
            margin-bottom: -4%;
        }
    }

    /* Extra large devices (large laptops and desktops, 1200px and up) */
    @@media only screen and (min-width: 1200px) {
        .marginbtm {
            margin-bottom: -7.4%;
        }

        .marginlft {
            margin-left: -65%;
        }

        .margintop {
            margin-top: 6%;
        }

        .marginbotm {
            margin-bottom: -4%;
        }

        .customModal {
            overflow-y: hidden !important;
            left: 28% !important;
            width: 40% !important;
        }
    }
</style>
<style>
    select {
        max-width: 90%;
    }

    .div-style {
        max-width: 15%;
    }

    .card .card-body {
        background-color: #eae8ea;
        border-radius: 15px;
    }

    .table td, .table th {
        padding: 5px !important;
        width: 100%;
    }

    .editor-label {
        float: left;
        margin-right: 15px;
    }

    .editor-field {
        float: left;
        margin-right: 0px !important;
    }

    .border-style {
        border: 0.7px solid;
    }

    .table td, .table th {
        padding: 5px !important;
    }

    .card .card-body {
        background-color: #eae8ea;
        border-radius: 15px;
    }

    .editor-label, .editor-field {
        float: left;
        margin-right: 15px;
    }

    .btn-style {
        padding: 25px 25px !important;
        color: blue !important;
        box-shadow: 2px 2px #888888;
    }

    .textbox-style {
        padding: 10px 10px !important;
        font-size: 15px !important;
    }

    .label-style {
        font-size: 20px !important;
        text-align: center;
    }

    .modal-style {
        /*width:170%!important;*/
    }

    .invoice-num {
        background-color: #87c5e4;
        border: 0px;
    }

    .brz {
        border-radius: 0px;
    }

    .mb-2 {
        margin-bottom: -2% !important;
    }

    .saletext {
        color: red;
        font-size: 18px;
    }

    .saletexttotal {
        color: blue;
        font-size: 18px;
    }


    .setsearchbox {
        position: relative;
        margin-top: 0%;
        width: auto;
        background-color: antiquewhite;
        border-radius: 0px;
    }

    .searchheader {
        font-size: 16px;
        text-align: center;
        font-weight: bold;
        display: inline-block;
        width: 50%;
        text-align: start;
        border-bottom: 1px solid #dee2e6;
        border-right: 1px solid #dee2e6;
    }

    .di {
        display: inline-block;
    }

    .itemnumberbox {
        border: 1px solid #989a9d;
        background: #80808047;
    }

    .fr {
        float: right !important;
    }

    .mg-t-5 {
        margin-top: 5%;
    }

    .ml-2 {
        margin-left: 2%;
    }

    .mg-t-2 {
        margin-top: 2%;
    }

    .ml-3 {
        margin-left: 3%;
    }

    .mg-t-3 {
        margin-top: 3%;
    }

    .dn {
        display: none;
    }

    .checkcheapitems {
        margin-top: 50%;
        position: relative;
        left: 110%;
        width: 20%;
    }

    .emptygrid {
        height: 300px;
        background-color: antiquewhite;
    }




    .tab {
        overflow: hidden;
        border: 1px solid #ccc;
        background-color: #f1f1f1;
    }

        /* Style the buttons inside the tab */
        .tab button {
            background-color: inherit;
            float: left;
            border: none;
            outline: none;
            cursor: pointer;
            padding: 10px 10px;
            transition: 0.3s;
            font-size: 12px;
        }

            /* Change background color of buttons on hover */
            .tab button:hover {
                background-color: #ddd;
            }

            /* Create an active/current tablink class */
            .tab button.active {
                background-color: #ccc;
            }

    /* Style the tab content */
    .tabcontent {
        display: none;
        padding: 6px 12px;
        /* border: 1px solid #ccc;*/
        border-top: none;
    }

    .newspaper {
        column-gap: 44px;
    }

    .responsive {
        width: 100%;
        height: auto;
    }

    .mtop {
        margin-top: -15px;
    }

    .bordercolormodal {
        border: 2px solid #b0b6c3;
        background-color: #ffffff;
    }

    .selectcash {
        max-width: 100%;
    }

    .st-1 {
        color: #0000ab;
        border: 1.1px solid #b0bde0;
        font-size: xxx-large;
        font-style: bold;
        font-weight: 900;
        width: 100%;
    }

    .font-size {
        font-size: 13px;
        font-weight: 500;
    }

    .swal2-modal {
        min-height: 0 !important;
    }
</style>



<div class="container">
    <div class="row row-no-gutters">
        <div class="col-lg-12 col-md-12 col-sm-12 col-12">
            <div class="card">
                <div class="card-body">
                    <div class="row">
                        <div class="w-100 p-3 h-100 w-100 d-inline-block actionbox" id="listbtns">
                            <div id="onlisticon" class="di">
                                <img id="refresh-id" src="~/images/refresh.png" style="width:50px" title="Refresh" onclick="ReloadPage()" />
                                @if ((customerorder[0].NeedApproval == false && customerorder[0].AcceptApproval == false) || (customerorder[0].NeedApproval == true && customerorder[0].AcceptApproval == true))
                                {
                                    <img class="saverecord" src="~/images/save.png" style="width:50px" title="Save" onclick="creditCheck(false)" />
                                    <img class="hide-icon" src="~/images/delete.png" style="width:50px" title="Delete" onclick="" />
                                    <img class="hide-icon" src="~/images/printer.png" style="width:50px" title="Print" onclick="creditCheck(true)" />
                                    <img id="shield-icon" class="hide-icon" style="display:none; width: 50px" src="~/images/shield.ico" title="Send Approval for Greater Qty" onclick="SendApprovalForExceedQty()" />
                                }
                                else
                                {
                                    <img class="saverecord" src="~/images/save.png" style="width:50px" title="Save" onclick="exceedrequest()" />
                                    <img class="hide-icon" src="~/images/delete.png" style="width:50px" title="Delete" onclick="exceedrequest()" />
                                    <img class="hide-icon" src="~/images/printer.png" style="width:50px" title="Print" onclick="exceedrequest()" />
                                    <img id="shield-icon" class="hide-icon" style="display:none; width: 50px" src="~/images/shield.ico" title="Send Approval for Greater Qty" onclick="exceedrequest()" />
                                   

                                }
                            </div>

                            <div id="defaultlisticons" class="di"></div>
                            <div id="onsaveicon">
                            </div>

                            @*<img class="saverecord hide-icon" src="~/images/save1.png" style="width:50px" title="Save" />*@&ensp;&ensp;&ensp;
                            <div class="row fr" id="newinvoicenumber">
                                @Html.HiddenFor(model => model.InvoiceNumber, new { @class = "form-control" })

                            </div>
                        </div>

                        <div class="col-lg-8">

                            <div class="row">
                                <div class="col-lg-10 col-md-12 col-sm-12 col-12">
                                    <div class="row">
                                        <div class="col-lg-8 col-md-8 col-sm-12 col-12 gx-0 gy-0">
                                            <div class="form-group">
                                                <label class="dim col-sm-12">
                                                    Sold To
                                                    @Html.EditorFor(model => model.CustomerName, new { htmlAttributes = new { @class = "form-control searchname brd", @readonly = "readonly", onkeydown = "GetAllMatchedItems(event)", autocomplete = "nope", id = "searchname" } })
                                                    <div style="background-color: blue !important;cursor:pointer" id="listallmissions"></div>
                                                    <label class="text-danger field-validation-error db" id="ValCustomerName" style="font-size:12px;"></label>
                                                </label>
                                            </div>
                                        </div>
                                        <div class="col-lg-4 col-md-3 col-sm-12 col-12" style="margin-top: 21.8px;">
                                            <div class="form-group">
                                                <label class="dim col-sm-12">
                                                    @Html.EditorFor(model => model.CustomerNumber, new { htmlAttributes = new { @class = "form-control customername brd", id = "customercodeinfo", @readonly = "readonly", } })
                                                    <label class="text-danger field-validation-error db" id="ValCustomercode" style="font-size:12px;"></label>
                                                </label>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-lg-12 col-md-12 col-sm-12 col-12">
                                            <div class="row gx-0 gy-0">
                                                <div class="col-lg-4 col-md-4 col-sm-12 col-12">
                                                    <div class="form-group">
                                                        <label class="dim col-sm-12" for="ShowAllitem">
                                                            Get Sales/Discount
                                                            @Html.CheckBox("GetSaleDiscount", false, new { @id = "getsalediscount", })
                                                        </label>

                                                    </div>
                                                </div>
                                                <div class="col-lg-3 col-md-3 col-sm-12 col-12">
                                                    <div class="form-group">
                                                        @Html.EditorFor(model => model.Discount, new { htmlAttributes = new { @class = "form-control brd", id = "discount", } })

                                                    </div>
                                                </div>
                                                <div class="col-lg-5 col-md-5 col-sm-12 col-12">
                                                    <div class="form-group" style="display:inline-flex">
                                                        <div class="col-lg-4 col-sm-6 col-6 col-md-4">
                                                            @Html.EditorFor(model => model.InDiscount, new { htmlAttributes = new { @class = "form-control brd", id = "discount", } })
                                                        </div>
                                                        <div class="col-lg-4 col-md-4 col-sm-6 col-6">
                                                            @Html.EditorFor(model => model.InDiscount, new { htmlAttributes = new { @class = "form-control brd", id = "discount", } })
                                                        </div>
                                                    </div>
                                                </div>
                                                <span style="display:none" id="customerid"></span>
                                                <span style="display:none" id="customername"></span>
                                                @if (CustomerInformation != null)
                                                {
                                                    <span style="display:none" id="bussinessAddress">@CustomerInformation.BusinessAddress</span>

                                                }
                                                else
                                                {
                                                    <span style="display:none" id="bussinessAddress">N/A</span>

                                                }
                                                <span style="display:none" id="customerEmail">@CustomerInformation.Email</span>
                                                @if (CustomerInformation.CustomerClassification != null)
                                                {
                                                    <span style="display:none" id="customerAddToMail">@CustomerInformation.CustomerClassification.AddtoMaillingList</span>

                                                }
                                                else
                                                {
                                                    <span style="display:none" id="customerAddToMail"></span>
                                                }

                                                @if (CustomerInformation.CustomerBillingInfo != null)
                                                {
                                                    <span style="display:none" id="isExclude">@CustomerInformation.CustomerBillingInfo.IsExclude</span>
                                                    <span style="display:none" id="isPopupMessage">@CustomerInformation.CustomerBillingInfo.IsPopupMessage</span>
                                                }
                                                else
                                                {
                                                    <span style="display:none" id="isExclude"></span>
                                                    <span style="display:none" id="isPopupMessage"></span>

                                                }
                                                @if (CustomerInformation.CustomerBillingInfo.IsPopupMessage == true)
                                                {
                                                    <span style="display:none" id="popupMessage">@CustomerInformation.CustomerBillingInfo.IsPopupMessage</span>
                                                }
                                                else
                                                {
                                                    <span style="display:none" id="popupMessage"></span>
                                                }

                                                @if (CustomerInformation.Receivable != null)
                                                {
                                                    <span style="display:none" id="remainingAmount">@CustomerInformation.Receivable.Amount</span>
                                                }
                                                else
                                                {
                                                    <span style="display:none" id="remainingAmount"></span>
                                                }
                                                <span style="display:none" id="supervisorId"></span>
                                                <span style="display:none" id="supervisorComment"></span>
                                                <input style="display:none" id="customerInformationId" value="@CustomerInformation.Id" />
                                                <input style="display:none" id="customername" value="@CustomerInformation.Company" />
                                                <input style="display:none" id="customercodeinfo" value="@CustomerInformation.CustomerCode" />
                                            </div>
                                        </div>
                                    </div>
                                    @*<div class="row mb-2">
                                        <div class="col-lg-12 col-md-12 col-sm-12 col-12 table-responsive">
                                        <table class="table  table-bordered table-condensed" style="border:0.7px solid;">
                                        <thead>
                                        <tr style="background-color:lightgreen">
                                        <th scope="col">Sales Man</th>
                                        <th scope="col">Paymnt Terms</th>
                                        <th scope="col">Shipped Via</th>
                                        <th scope="col">Driver</th>
                                        <th scope="col">Weight</th>
                                        <th scope="col">Count</th>
                                        </tr>
                                        </thead>
                                        <tbody>
                                        <tr style="height:2px;">

                                        <td contenteditable="true" id="salesmanid"></td>
                                        <td contenteditable="true"></td>
                                        <td contenteditable="true"></td>
                                        <td contenteditable="true" id="driverid"></td>
                                        <td contenteditable="true"></td>
                                        <td contenteditable="true" id="countnum"></td>
                                        </tr>

                                        </tbody>
                                        </table>
                                        </div>
                                        </div>*@
                                    <div class="row mb-2">
                                        <div class="col-lg-12 col-md-12 col-sm-12 col-12 table-responsive">
                                            <table class="table  table-bordered table-condensed" style="border:0.7px solid;">
                                                <thead>
                                                    <tr style="background-color:lightgreen">
                                                        <th scope="col">Sales Man</th>
                                                        <th scope="col">Paymnt Terms</th>
                                                        <th scope="col">Shipped Via</th>
                                                        <th scope="col">Driver</th>
                                                        <th scope="col">Weight</th>
                                                        <th scope="col">Count</th>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                    <tr style="height:2px;">
                                                        <td id="salesmanid"></td>
                                                        <td id="paymentTermsid"></td>
                                                        <td id="shippedViaid"></td>
                                                        <td id="driverid"></td>
                                                        <td id="weightid"></td>
                                                        <td id="countnum"></td>
                                                    </tr>
                                                </tbody>
                                            </table>
                                        </div>
                                    </div>
                                </div>
                            </div>

                        </div>
                        <div class="col-lg-4">
                            <div class="row">
                                <div class="row margintop marginbotm">
                                    <div class="col-lg-12 col-md-12 col-sm-12 col-12 col">
                                        <input class="form-control border-style invoice-num" @*value="@ViewBag.InvoiceNumberOFI"*@ style="background-color: #87c5e4" type="text" id="invoicenumber" name="previousbalance" disabled>
                                        <label class="text-danger field-validation-error db" id="ValMsgpreviousbalance" style="font-size:12px;"></label>
                                    </div>
                                </div>

                                <div class="row marginbtm">
                                    <div class="col col-lg-3 col-md-3 col-sm-12 col-12 editor-label">
                                        <label class="saletext marginlft">Prev.bal</label>
                                    </div>
                                    <div class="col col-lg-8 col-md-8 col-sm-12 col-12 editor-field" style=" margin-top: 0px;">

                                        @if (CustomerInformation.CustomerClassification != null)
                                        {
                                            if (CustomerInformation.CustomerClassification.ViewInvoicePrevBalance == true)
                                            {
                                                if (CustomerInformation.Receivable != null)
                                                {
                                                    <input class="form-control border-style brz" value="@CustomerInformation.Receivable.Amount" disabled type="text" id="previousbalance" name="previousbalance">
                                                }
                                                else
                                                {
                                                    <input class="form-control border-style brz" value="" type="text" id="previousbalance" disabled name="previousbalance">

                                                }
                                            }
                                            else
                                            {
                                                <input class="form-control border-style brz" value="" type="text" id="previousbalance" disabled name="previousbalance">
                                            }
                                        }

                                        @*<input class="form-control border-style brz" type="text" id="previousbalance" name="previousbalance">*@
                                        <label class="text-danger field-validation-error db" id="ValMsgpreviousbalance" style="font-size:12px;"></label>
                                    </div>
                                </div>
                                @*</div>*@
                                @*<div class="col-lg-12 col-md-12 col-sm-12 col-12 col margin-botm">*@
                                <div class="row marginbtm">
                                    <div class=" col col-lg-3 col-md-3 col-sm-12 col-12 editor-label">
                                        <label class="saletexttotal marginlft">SubTotal</label>
                                    </div>
                                    <div class=" col col-lg-8 col-md-8 col-sm-12 col-12 editor-field">
                                        <input class="form-control border-style brz" type="text" id="subtotalauto" disabled name="subtotal">
                                        <label class="text-danger field-validation-error db" id="ValMsgsubtotal" style="font-size:12px;"></label>
                                    </div>
                                </div>
                                @*</div>*@
                                @*<div class="col-lg-12 col-md-12 col-sm-12 col-12 col margin-botm">*@
                                <div class="row marginbtm">
                                    <div class=" col col-lg-3 col-md-3 col-sm-12 col-12 editor-label">
                                        <label class="saletexttotal marginlft">Dis/Other</label>
                                    </div>
                                    <div class=" col col-lg-4 col-md-4 col-sm-12 col-12 editor-field me-lg-0 me-md-0 pe-lg-0 pe-md-0">
                                        <input class="form-control border-style brz " type="text" id="discountidadd" name="subtotal" onkeyup="CalculatetaxPlusDiscount()">
                                        <label class="text-danger field-validation-error db" id="ValMsgsubtotal" style="font-size:12px;"></label>
                                    </div>
                                    <div class=" col col-lg-4 col-md-4 col-sm-12 col-12 editor-field ms-lg-0 ms-md-0 ps-lg-0 ps-md-0">
                                        @if (CustomerInformation.CustomerBillingInfo != null)
                                        {
                                            if (CustomerInformation.CustomerBillingInfo.AdditionalInvoiceCharge == "" || CustomerInformation.CustomerBillingInfo.AdditionalInvoiceCharge == null)
                                            {
                                                <input class="form-control border-style brz p-0" value="0" type="text" id="otherid" name="subtotal" onkeyup="CalculatetaxPlusDiscount()">
                                            }
                                            else
                                            {
                                                <input class="form-control border-style brz p-0" value="@CustomerInformation.CustomerBillingInfo.AdditionalInvoiceCharge" type="text" id="otherid" name="subtotal" onkeyup="CalculatetaxPlusDiscount()">
                                            }
                                        }


                                        @*<input class="form-control border-style brz p-0 " type="text" id="otherid" name="subtotal" onkeyup="CalculatetaxPlusDiscount()">*@
                                        <label class="text-danger field-validation-error db" id="ValMsgsubtotal" style="font-size:12px;"></label>
                                    </div>
                                </div>
                                @*</div>*@
                                @*<div class="col-lg-12 col-md-12 col-sm-12 col-12 col margin-botm">*@
                                <div class="row marginbtm">
                                    <div class=" col col-lg-3 col-md-3 col-sm-12 col-12 editor-label">
                                        <label class="saletexttotal marginlft">Tax/Freight</label>
                                    </div>
                                    <div class=" col col-lg-4 col-md-4 col-sm-12 col-12 editor-field me-lg-0 me-md-0 pe-lg-0 pe-md-0">
                                        <input class="form-control border-style brz" type="text" id="taxid" name="taxid" onkeyup="CalculatetaxPlusDiscount()">
                                        <label class="text-danger field-validation-error db" id="ValMsgsubtotal" style="font-size:12px;"></label>
                                    </div>
                                    <div class=" col col-lg-4 col-md-4 col-sm-12 col-12 editor-field ms-lg-0 ms-md-0 ps-lg-0 ps-md-0">
                                        <input class="form-control border-style brz p-0" type="text" id="freightid" ondblclick="taxfunc()" name="subtotal" onkeyup="CalculatetaxPlusDiscount()">
                                        <label class="text-danger field-validation-error db" id="ValMsgsubtotal" style="font-size:12px;"></label>
                                    </div>
                                </div>
                                @*</div>*@
                                @*<div class="col-lg-12 col-md-12 col-sm-12 col-12 col margin-botm">*@
                                <div class="row marginbtm">
                                    <div class="  col col-lg-3 col-md-3 col-sm-12 col-12 editor-label">
                                        <label class="saletext marginlft">Inv.Total</label>
                                    </div>
                                    <div class="col col-lg-8 col-md-8 col-sm-12 col-12 editor-field">
                                        <input class="form-control border-style brz" type="text" id="invoicetotal" disabled name="subtotal" onkeyup="CalculatetaxPlusDiscount()">
                                        <label class="text-danger field-validation-error db" id="ValMsgsubtotal" style="font-size:12px;"></label>
                                    </div>
                                </div>
                                @*</div>*@
                                @*<div class="col-lg-12 col-md-12 col-sm-12 col-12 col margin-botm">*@
                                <div class="row marginbtm">
                                    <div class="col col-lg-3 col-md-3 col-sm-12 col-12 editor-label">
                                        <label class="saletext marginlft">AmountDue</label>
                                    </div>
                                    <div class="col col-lg-8 col-md-8 col-sm-12 col-12 editor-field">
                                        <input class="form-control border-style brz" type="text" id="amountdue" name="previousbalance">
                                        <label class="text-danger field-validation-error db" id="ValMsgamountdue" style="font-size:12px;"></label>
                                    </div>
                                </div>
                                @*</div>*@
                            </div>
                        </div>
                    </div>

                    <div class="row mt-3">
                        <div class="col-lg-12 col-md-12 col-sm-12 col-12 table-responsive" id="saletable">
                            <table class="table table-bordered table-condensed" id="saletable" style="border:0.7px solid;">
                                <thead>
                                    <tr style="border:0.7px solid;border-bottom:1.4px solid">
                                        <th style="width: 10px">Ser</th>
                                        <th style="width: 10px">Item#</th>
                                        <th>Description</th>
                                        <th>Ordered Qty</th>
                                        <th>Amount</th>
                                        <th>Discount</th>
                                        <th>Discount</th>
                                        <th>Units</th>
                                        <th>Units</th>
                                        <th>Price</th>
                                        <th>Total</th>
                                        <th>Shipment Limit</th>
                                        <th>Ringer Qty</th>
                                        <th><span></span></th>
                                    </tr>
                                </thead>
                                <tbody id="appendnewrowforsale">
                                    <!-- hidden row -->
                                    @if (CartDetailList != null)
                                    {
                                        var i = 0;
                                        var sernum = 1;
                                        foreach (var item in CartDetailList)
                                        {
                                            var total = float.Parse(item.Retail) * item.Quantity;
                                            <tr id="rowid-@sernum" class="rowclass">
                                                <td id="countser-@sernum" style="width: 10px" class="counter" contenteditable="false">@sernum</td>
                                                <td id="itemnumber-@sernum" style="width: 10px" contenteditable="false" onkeyup="GetItemByItemNumber(@sernum)">@item.ProductCode</td>
                                                <td id="description-@sernum" style="width: 10px" contenteditable="false" val @sernum>@item.Name</td>
                                                @if (@item.Quantity > int.Parse(@productlist[i].ShipmentLimit))
                                                {

                                                    <input style="display:none" id="onlinelimitexeeded-@sernum" class="onlinelimitexeeded" value="true" />
                                                    <td id="Quantity-@sernum" contenteditable="false" style="background-color:red; color:white" val @item.Quantity @*onkeyup="QuantityMultipyPrice(@sernum)"*@>@item.Quantity</td>
                                                }
                                                else
                                                {
                                                    <input style="display:none" id="onlinelimitexeeded-@sernum" class="onlinelimitexeeded" value="false" />
                                                    <td id="Quantity-@sernum" contenteditable="false" class="table-primary" val @item.Quantity @*onkeyup="QuantityMultipyPrice(@sernum)"*@>@item.Quantity</td>
                                                }
                                                <td id="amount-@sernum" contenteditable="false">@item.Retail</td>
                                                <td id="discountin-@sernum" contenteditable="false">$0.00</td>
                                                <td id="discountout-@sernum" contenteditable="false" onkeyup="DiscuntChangePrice(@sernum)">0.00%</td>
                                                <td id="InUnits-@sernum" contenteditable="false" class="table-success"></td>
                                                <td id="OutUnits-@sernum" contenteditable="false" class="table-success"></td>
                                                <td id="price-@sernum" contenteditable="false" class="table-warning">@item.Retail</td>
                                                <td id="total-@sernum" contenteditable="false" class="table-warning">@total</td>
                                                @if (item.Id == @productlist[i].Id)
                                                {

                                                    <td id="onlineLimit-@sernum" contenteditable="false" class="table-success">@productlist[i].ShipmentLimit</td>
                                                }
                                                else

                                                {
                                                    <td id="onlineLimit-@sernum" contenteditable="false" class="table-warning"></td>
                                                }


                                                @if (requestedinvoice == false)
                                                {

                                                    <td id="ringer-@sernum" contenteditable="true" class="table-warning" onkeyup="QuantityMultipyPrice(@sernum)">@item.ChangeQuantity</td>
                                                }
                                                else
                                                {
                                                    <td id="ringer-@sernum" contenteditable="false" class="table-warning" onkeyup="QuantityMultipyPrice(@sernum)">@item.ChangeQuantity</td>

                                                }


                                                @*<td id="@sernum" contenteditable="false" class="table-warning"><img src="@productlist[i].BarCodePath" /></td>*@
                                                <td id="customername-@sernum" style="display:none;">@customername</td>
                                                <td style="display:none" id="customercode-@sernum" contenteditable="false" class="table-warning"> @customercode </td>
                                                <td style="display:none" id="customerid-@sernum" contenteditable="false" class="table-warning">@CustomerID</td>
                                                <td style="display:none" id="itemid-@sernum" contenteditable="false" class="table-warning">@item.Id</td>
                                                <td style="display:none" id="stockno-@sernum" contenteditable="false" class="table-warning">@productlist[i].Stock.Quantity</td>
                                                <td style="display:none" id="barcode-@sernum" contenteditable="false" class="table-warning">@productlist[i].BarCode</td>
                                                @*<td id="delete-@sernum" onclick="RemoveRow(@sernum)"><span class="delete-row ti-close"></span></td>*@
                                                <input type="hidden" value="" id="productId" />
                                            </tr>
                                            sernum++;
                                            subtotal += total;
                                            i++;

                                        }
                                        <input style="display:none" id="SrialNumber" value="@sernum" />
                                        <script>

                                            $(document).ready(function () {
                                                var senum = $("#SrialNumber").val();
                                                $("#countnum").text(sernum);
                                            });
                                        </script>

                                    }


                                    <input style="display:none" id="valueofsubtotal" value="@subtotal" />
                                </tbody>
                            </table>

                        </div>
                    </div>

                </div>
            </div>
        </div>
    </div>
</div>
<div id="abcde" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title mx-auto" id="ModalLabel">Super Admin Pin</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close" onclick="closemodalabcd()">
                    <span aria-hidden="true">×</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="form-group">
                        <label for="itemcategory">Please Enter Super Admin Pin</label>
                        <input class="form-control" type="text" placeholder="Super Admin Pin" id="" />
                        <label class="text-danger db" style="display:none" id="">Enter Credit</label>
                        <br>
                        <input class="form-control" type="text" placeholder="CreditLimit" id="" />
                    </div>
                    <button type="button" class="btn btn-dark text-white mx-auto col-md-3" id="itemcategorysubmit"><p style="color:white">Submit</p></button>
                </div>

            </div>

        </div>
    </div>
</div>
<div id="payment" class="modal fade" role="dialog" style="border-radius: 25px;">
    <div class="modal-dialog modal-lg ">
        <div class="modal-content col-lg-12 modal-style">
            <div class="modal-header" style="background-color: #eae8ea;">
                <h5 class="modal-title mx-auto" id="ModalLabel">Payment</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close" onclick="closemodal()">
                    <span aria-hidden="true">×</span>
                </button>
            </div>
            <div class="modal-body" style="background-color: #eae8ea;">
                <div class="container-fluid">
                    <div class="row">
                        <div class="col-lg-12 col-md-12 col-sm-12 col-12">
                            @*<div class="card">
                                <div class="card-body">*@
                            <div class="row">
                                <div class="col-lg-2 col-md-3 col-sm-6 col-6">
                                    <img class="" src="~/images/create.png" style="width:50px" title="Create" />
                                </div>
                                <div class="col-lg-2 col-md-3 col-sm-6 col-6">
                                    <img class="" src="~/images/search.png" style="width:50px" title="Search" />

                                </div>
                                <div class="col-lg-3 col-md-6 col-sm-12 col-12 mt-3">
                                    <div class="form-group" style="color:blue;">
                                        <label class="dim col-sm-12 col-12">
                                            @Html.CheckBox("GetSaleDiscount", false, new { @id = "getsalediscount", })
                                            List All Customers
                                        </label>

                                    </div>
                                </div>
                                <div class="col-lg-5 col-md-12 col-sm-12 col-12">
                                    <button class="btn  btn-style ">Silent/F4</button>
                                    <button class="btn  btn-style ">Print/F5</button>
                                    <img class="ms-lg-5" src="~/images/cancel.png" style="width:50px" title="Close" />&ensp;&ensp;&ensp;
                                </div>
                            </div>
                            <div class="row mt-2">
                                <div class="col-lg-5">
                                    @Html.EditorFor(model => model.InDiscount, new { htmlAttributes = new { @class = "form-control", id = "discount", } })

                                </div>
                                <div class="col-lg-3">
                                    @Html.EditorFor(model => model.InDiscount, new { htmlAttributes = new { @class = "form-control", id = "discount", } })
                                </div>
                                <div class="col-lg-4">

                                    <div class="col-lg-1 col-sm-12 col-12 editor-label">
                                        <label>Prev.bal</label>
                                    </div>
                                    <div class="col-lg-9 col-sm-12 col-12 ps-5 editor-field">
                                        @Html.EditorFor(model => model.InDiscount, new { htmlAttributes = new { @class = "form-control border-style", id = "discount", } })
                                    </div>

                                </div>
                            </div>
                            <div class="row">
                                <ul class="nav nav-tabs mt-2" style="border:1px solid #dee2e6 ;" role="tablist">
                                    <li class="nav-item">
                                        <a class="nav-link active Payments-tab" data-bs-toggle="tab" href="#payments" role="tab" aria-controls="payments" aria-selected="true">Payments</a>
                                    </li>
                                    <li class="nav-item">
                                        <a class="nav-link Invoice-tab" data-bs-toggle="tab" href="#invoice" role="tab" aria-controls="invoice" aria-selected="false">Unpaid Invoices[F8]</a>
                                    </li>

                                </ul>
                                <div class="tab-content">
                                    <div class="tab-pane fade show active" id="payments" role="tabpanel" aria-labelledby="Payments-tab">
                                        <div class="row" style="height:200px;overflow-x: auto; overflow-y: auto; ">
                                            <div class="col-lg-12 col-md-12 col-sm-12 col-12">
                                                <div class="row">
                                                    <div class="col-lg-12 col-md-12 col-sm-12 col-12 table-responsive" id="mytable">
                                                        <table class="table table-bordered table-condensed" style="border:0.7px solid;">
                                                            <thead>
                                                                <tr style="border:0.7px solid;border-bottom:1.4px solid">
                                                                    <th>Amount Paid</th>
                                                                    <th>Amount Alloc</th>
                                                                    <th>Payment Type</th>
                                                                    <th>Ck/Card Number</th>
                                                                    <th>Hold Date</th>

                                                                    <th><span class="add-row1 ti-plus"></span></th>
                                                                </tr>
                                                            </thead>
                                                            <tbody id="appendnewrowforsale">
                                                                <!-- hidden row -->

                                                            </tbody>
                                                        </table>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <footer class="row">
                                            <div class="col-lg-3 col-md-6 col-sm-12 col-12 ">
                                                <div class="form-group">
                                                    <label class="dim col-sm-12 label-style" style="color: #53adcb">
                                                        Total Paid
                                                    </label>
                                                    @Html.EditorFor(model => model.InDiscount, new { htmlAttributes = new { @class = "form-control textbox-style", id = "discount", } })
                                                </div>
                                            </div>
                                            <div class="col-lg-3 col-md-6 col-sm-12 col-12">
                                                <div class="form-group">
                                                    <label class="dim col-sm-12 label-style" style="color: #53adcb">
                                                        Total Alloc
                                                    </label>
                                                    @Html.EditorFor(model => model.InDiscount, new { htmlAttributes = new { @class = "form-control textbox-style", id = "discount", } })
                                                </div>
                                            </div>
                                            <div class="col-lg-3 col-md-6 col-sm-12 col-12">
                                                <div class="form-group">
                                                    <label class="dim col-sm-12 label-style" style="color:red">
                                                        TotalChange
                                                    </label>
                                                    @Html.EditorFor(model => model.InDiscount, new { htmlAttributes = new { @class = "form-control textbox-style ", id = "discount", } })
                                                </div>
                                            </div>
                                            <div class="col-lg-3 col-md-6 col-sm-12 col-12">
                                                <div class="form-group">
                                                    <label class="dim col-sm-12 label-style" style="color:blue">
                                                        Balance
                                                    </label>
                                                    @Html.EditorFor(model => model.InDiscount, new { htmlAttributes = new { @class = "form-control textbox-style", id = "discount", } })
                                                </div>
                                            </div>
                                        </footer>
                                    </div>

                                    <div class="tab-pane fade" id="invoice" role="tabpanel" aria-labelledby="Invoice-tab">
                                        <div class="row" style="height:300px;">
                                            <div class="col-lg-12 col-md-12 col-sm-12 col-12">
                                                <div class="row">
                                                    <div class="col-lg-12 col-md-12 col-sm-12 col-12 table-responsive" id="mytable">
                                                        <table class="table table-bordered table-condensed" style="border:0.7px solid;">
                                                            <thead>
                                                                <tr style="border:0.7px solid;border-bottom:1.4px solid">
                                                                    <th>Innvoive #</th>
                                                                    <th>Date</th>
                                                                    <th>Days</th>
                                                                    <th>Inv.Total</th>
                                                                    <th>Total Paid</th>
                                                                    <th>Inv.Balance</th>
                                                                    <th style="color:blue;">Pay Order</th>
                                                                    @*<th><span class="add-row ti-plus"></span></th>*@
                                                                </tr>
                                                            </thead>
                                                            <tbody id="appendnewrowforsalepayment">
                                                                <!-- hidden row -->

                                                            </tbody>
                                                        </table>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>

                                        <footer class="row">
                                        </footer>
                                    </div>
                                </div>
                            </div>
                            @*</div>
                                </div>*@

                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@*//paymentmodal*@
<div id="customerpayment" class="modal fade bd-example-modal-lg" tabindex="-1" role="dialog">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content modalstyling">
            <div class="modal-header text-center">
                <h5 class="modal-title w-100">Print Invoice Dialog invoice# 1221212121212</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>

            </div>

            <div class="tab">
                <button class="tablinks active" onclick="openCity(event, 'GeneralPayments')">General Payments</button>
                <button class="tablinks" onclick="openCity(event, 'InvoicePayments')">Invoice Payments</button>
                <button class="tablinks" onclick="openCity(event, 'PrintOptions')">Print Options</button>
                <button class="tablinks" onclick="openCity(event, 'FooterMessages')">FooterMessages</button>
                <button class="tablinks" onclick="openCity(event, 'UnPaidInvoices')">UnPaidInvoices</button>
            </div>
            <div class="modal-body ">

                <div id="GeneralPayments" class="tabcontent" style="display:block">
                    <div class="row">
                        <div class="col-lg-7">

                            <label id="custname" style="color: #010083; font-size: 20px; font-weight: 600; "> 1803 Gondals 786 ltc </label>

                        </div>
                        <div class="col-lg-1"></div>
                        <div class="col-lg-4">

                            <label id="custno" style="color: #010083; font-weight: 700; font-size: 18px; "> 01 </label>

                        </div>
                    </div>
                    <br>
                    <div class="row">
                        <div class="col-lg-4">
                            <div style="background-color: #ffff00; border: 2px solid #d1d6e1; display: block; text-align: center;">
                                <label style="font-weight: 600; color: #848091; font-size: 22px;">
                                    Invoice#
                                </label>
                                <br>
                                <label id="invno" style="color: #848091; font-weight: 500; font-size: 20px;">
                                    1121208-22222
                                </label>
                            </div>
                        </div>
                        <div class="col-lg-2">
                        </div>
                        <div class="col-lg-5" style="border: 2px solid #bbb4b4; font-size: 18px; ">
                            <label style="color: #848091; font-weight: 700;">
                                Invoice Total <span id="invtotal" class="ms-5">$70.70</span>
                            </label>

                            <label style="color: #8f2000; font-weight: 700;">
                                Balance Due <span id="balancedue" class="ms-5">$70.70</span>
                            </label>

                        </div>
                        <div class="col-lg-1">
                        </div>
                    </div>
                    <br>
                    <br>
                    <div class="row " style="background-color: #cccccc;border: 2px solid #e3e8f1;">
                        <div class="col-lg-12 mt-1 col-md-12 col-sm-12 col-12 table-responsive" id="Custpaymenttable">
                            <table class="table table-bordered table-condensed table-responsive-lg" id="Custpaymenttable" style="border:0.7px solid;">
                                <thead>
                                    <tr style="border:0.7px solid;border-bottom:1.4px solid">
                                        <th style="color: #020caf;">Amount Paid</th>
                                        <th>Amount Alloc</th>
                                        <th>Payment Type</th>
                                        <th>Ck/Card Number</th>
                                        <th style="color: #c92d21">Hold Date</th>

                                        <th><span class="add-rowpayment ti-plus"></span></th>
                                    </tr>
                                </thead>
                                <tbody id="paymentmodaltable" style="background-color: white;">
                                    <!-- hidden row -->

                                </tbody>
                            </table>
                        </div>
                        <hr>
                        <div class="row">
                            <div class="col-lg-3 col-md-6 col-sm-12 col-12">
                                <div class="form-group bordercolormodal">
                                    <label class="dim col-sm-12 label-style" style="color: #53adcb">
                                        Total Paid
                                    </label>
                                    <label id="totalpaid" class="dim col-sm-12 label-style" style="color: #53adcb">
                                        $60.00
                                    </label>

                                </div>
                            </div>
                            <div class="col-lg-3 col-md-6 col-sm-12 col-12">
                                <div class="form-group bordercolormodal">
                                    <label class="dim col-sm-12 label-style" style="color: #53adcb">
                                        Total Paid
                                    </label>
                                    <label id="totalpaidd" class="dim col-sm-12 label-style" style="color: #53adcb">
                                        $60.00
                                    </label>

                                </div>
                            </div>
                            <div class="col-lg-3 col-md-6 col-sm-12 col-12">
                                <div class="form-group bordercolormodal">
                                    <label class="dim col-sm-12 label-style" style="color:red">
                                        Change
                                    </label>
                                    <label id="change" class="dim col-sm-12 label-style" style="color: #53adcb">
                                        $60.00
                                    </label>

                                </div>
                            </div>
                            <div class="col-lg-3 col-md-6 col-sm-12 col-12">
                                <div class="form-group bordercolormodal">
                                    <label class="dim col-sm-12 label-style" style="color:blue">
                                        Balance
                                    </label>
                                    <label id="balance" class="dim col-sm-12 label-style" style="color: #53adcb">
                                        10.00
                                    </label>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="row mt-2" style="background-color: #cccccc">
                        <div class="col-lg-4">
                            <label id="paythisinv" style="border: 2px solid #c99797;font-size: 13px;"><span style="color:Blue">F3</span> Pay This Invoice First </label>
                        </div>
                        <div class="col-lg-1">
                        </div>
                        <div class="col-lg-6">
                            <div class="row">
                                <div class="col-lg-4">
                                    <input type="checkbox" id="emailcopy" style=" height: 9px;" name="vehicle1" value="Bike">
                                    <label for="emailcopy" style=" font-size: 10px; font-weight: 800; color: red;">Email Copy</label>
                                </div>
                                <div class="col-lg-6">
                                    <label id="emaillabel" style=" font-size: 11px; font-weight: 700;">qondalistion@gmail.com</label>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-lg-4">
                                    <input type="checkbox" id="textcopy" style=" height: 9px;" name="vehicle1" value="Bike">
                                    <label for="textcopy" style=" font-size: 10px; font-weight: 800; color: red;">Text Copy</label>
                                </div>
                                <div class="col-lg-8">
                                    <div class="row">
                                        <div class="col-lg-6 ps-3 pe-0 me-0">
                                            <!--<input class=" form-control" type="text"--> @*style=" font-size: 11px; font-weight: 700;"*@ <!--/>-->
                                            <label id="textlabel" style=" font-size: 11px; font-weight: 700;">qondalistion@gmail.com</label>
                                        </div>
                                        @*<input style=" font-size: 11px; font-weight: 700;">qondalistion@gmail.com>*@
                                        <div class="col-lg-6 form-group ms-0 ps-0">
                                            <select id="selectdropdown" class="form-control" aria-label="Default select example">
                                                <option selected>Open this select menu</option>
                                                <option value="1">One</option>
                                                <option value="2">Two</option>
                                                <option value="3">Three</option>
                                            </select>
                                        </div>

                                    </div>
                                </div>
                            </div>


                        </div>

                    </div>
                    <div class="col-lg-12" style="background-color: #cccccc"></div>
                    <div class="row" style="background-color: #cccccc">
                        <div class="col-md-2 ms-0">
                            <button type="button" class="btn btn-light p-3" style="border-radius: 0;">OrderByDescription</button>
                        </div>
                        <div class="ms-5 col-md-2">
                            <img class="responsive mtop" style="cursor:pointer" src="~/images/icons8-microsoft-excel-96.png" />
                        </div>
                        <div class="col-md-2">
                            <button type="button" onclick="SavePaymentDetails()" class="btn btn-light p-3" style="border-radius: 0;">PrintInvoiceF5</button>
                        </div>
                        <div class="col-md-2 ms-3">
                            <button type="button" class="btn btn-light p-3" style="border-radius: 0;">SilentF4</button>
                        </div>
                        @*<div class="col-md-2">
                            <img class="responsive mtop" style="cursor:pointer" src="~/images/icons8-shutdown-96.png" />

                            </div>*@
                    </div>

                </div>

                <div id="InvoicePayments" class="tabcontent">
                    <h3>InvoicePayments</h3>
                    <p>Paris is the capital of France.</p>
                </div>

                <div id="PrintOptions" class="tabcontent">
                    <h3>PrintOptions</h3>
                    <p>Tokyo is the capital of Japan.</p>
                </div>
                <div id="FooterMessages" class="tabcontent">
                    <h3>FooterMessages</h3>
                    <p>Tokyo is the capital of Japan.</p>
                </div>
                <div id="UnPaidInvoices" class="tabcontent">
                    <h3>UnPaidInvoices</h3>
                    <p>Tokyo is the capital of Japan.</p>
                </div>

            </div>

        </div>
    </div>
</div>
@*<div id="receivablesid" class="modal fade" role="dialog">
    <div class="modal-dialog">
    </div>
    </div>*@
<div id="receivablesid" class="modal fade bd-example-modal-sm customModal" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog modal-sm">
    </div>
</div>
<div id="freightmodal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header" style="padding:0.5rem!important;">
                <h5 class="modal-title" id="ModalLabel">Shipping & Handling</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close" onclick="closemodalfreight()">
                    <span aria-hidden="true">×</span>
                </button>
            </div>
            <div class="modal-body" style="color: #0000ab; padding-top: 10px;padding-bottom:10px;">
                <div class="row">
                    <div class="col-lg-12 col-md-12 col-sm-12 col">
                        <div class="row">
                            <div class="col-lg-3 col-md-3 col-sm-12 col">
                                <label>Invoice</label>
                            </div>
                            <div class="col-lg-4 col-md-4 col-sm-12 col p-0 m-0">
                                <input type="text" class="form-control inputblue" name="name" id="Invoice-no" value="3232" />
                            </div>
                            <div class="col-lg-4 col-md-4 col-sm-12 col p-0 m-0">
                                <input type="date" class="form-control inputbluesmall" id="cdate" value="" />
                            </div>
                        </div>
                        <div class="row mt-1">
                            <div class="col-lg-3 col-md-3 col-sm-12 col">
                                <label class="col-lg-12">Customer</label>
                            </div>
                            <div class="col-lg-8 col-md-8 col-sm-12 col p-0 m-0">
                                <input type="text" class="form-control inputblue" id="customerName" name="name" value="" />
                            </div>
                        </div>
                        <div class="row mt-1">
                            <div class="col-lg-3 col-md-3 col-sm-12 col">
                                <label>Date</label>
                            </div>
                            <div class="col-lg-5 col-md-4 col-sm-12 col p-0 m-0">
                                <input type="datetime-local" class="form-control inputbluesmall m-0 p-0" name="name" value="" />
                            </div>
                            <div class="col-lg-4 col-md-5 col-sm-12 col">
                                <label>RouteDeliveryDay</label>
                                <select class="form-control" name="cars" id="deliveryDay">
                                    <option value="Monday">Monday</option>
                                    <option value="Tuesday">Tuesday</option>
                                    <option value="Wednesday">Wednesday</option>
                                    <option value="Thursday">Thursday</option>
                                    <option value="Friday">Friday</option>
                                </select>
                            </div>
                        </div>
                        <div class="row mt-1">
                            <div class="col-lg-3 col-md-3 col-sm-12 col" style="margin-top:-18px">
                                <label>Carrier</label>
                            </div>
                            <div class="col-lg-5 col-md-4 col-sm-12 col p-0 me-0" style="margin-top:-18px">
                                <select class="form-control" name="cars" id="carrier" style="min-width: 100%;">
                                    <option value="Monday">Bus</option>
                                    <option value="Truck">Truck</option>
                                    <option value="Railway">Railway</option>
                                </select>
                            </div>
                            <div class="col-lg-4 col-md-5 col-sm-12 col">
                                <label>Route Name</label>
                                <select class="form-control" name="cars" id="deliveryDay">
                                    <option value="">Lhr-KH</option>

                                </select>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-lg-3 col-md-3 col-sm-12 col" style="margin-top:-33px">
                                <label>Tracking</label>
                            </div>
                            <div class="col-lg-5 col-md-4 col-sm-12 col p-0 me-0" style="margin-top:-33px">
                                <input type="text" class="form-control" name="name" value="" />
                            </div>
                        </div>
                        <div class="row mt-1">
                            <div class="col-lg-7 col-md-7 col-sm-12 col me-0">
                                <textarea id="txtid" name="txtname" class="form-control m-0 p-0" rows="4" style="width: 105%; height: 75%;">A nice day is a nice day.Lao Tseu</textarea>
                            </div>
                            <div class="col-lg-5 col-md-5 col-sm-12 col">
                                <textarea id="txtid" name="txtname" class="form-control" rows="4" style="width: 100%; height: 75%;">A nice day is a nice day.Lao Tseu</textarea>
                            </div>
                        </div>
                        <div class="row mt-1">
                            <div class="col-lg-4 col-md-4 col-sm-12 col pe-1 text-center">
                                <label>Shipping Cost</label>
                                <input type="text" class="form-control " name="name" value="" />
                            </div>
                            <div class="col-lg-4 col-md-4 col-sm-12 col ps-1 pe-1 text-center">
                                <label>Handling Cost</label>
                                <input type="text" class="form-control" name="name" value="" />
                            </div>
                            <div class="col-lg-4 col-md-4 col-sm-12 col ps-1 text-center">
                                <label style="color:maroon">CustomerCharge</label>
                                <input type="text" class="form-control" name="name" value="" />
                            </div>
                        </div>
                        <div class="row mt-1">
                            <div class="col-lg-9 col-md-9 col-sm-12 col">
                                <textarea id="txtid" class="form-control" name="txtname" rows="4" style="width:100%;height:75%;">A nice day is a nice day.Lao Tseu</textarea>
                            </div>
                            <div class="col-lg-3 col-md-3 col-sm-12 col">
                                <img class="" src="~/images/attach.png" style="width:50px" title="Attachment" onclick="" />
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-lg-9 col-md-9 col-sm-12 col"></div>
                            <div class="col-lg-3 col-md-3 col-sm-12 col ps-0">
                                <button type="button" class="btn btn-lg btn-warning ps-4 pe-4">Save</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div id="supervisorModal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header" style="padding:0.5rem!important;">
                <h5 class="modal-title" id="ModalLabelAuth">Authorize Supervisor</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close" onclick="closemodalAuth()">
                    <span aria-hidden="true">×</span>
                </button>
            </div>
            <div class="modal-body" style="color: #0000AB; padding-top: 10px;padding-bottom:10px;">
                <div class="row">
                    <div class="col-lg-12 col-md-12 col-sm-12 col">
                        <div class="row mt-3">
                            <div class="col-lg-3 col-md-3 col-sm-12 col">
                                <label class="col-lg-12">Pin</label>
                            </div>
                            <div class="col-lg-8 col-md-8 col-sm-12 col p-0 m-0">
                                <input type="password" class="form-control" id="superPin" name="pin" value="" placeholder="Pin" />
                            </div>
                        </div>
                        <div class="row mt-3">
                            <div class="col-lg-3 col-md-3 col-sm-12 col">
                                <label class="col-lg-12">Comment</label>
                            </div>
                            <div class="col-lg-8 col-md-8 col-sm-12 col p-0 m-0">
                                <textarea id="superComment" class="form-control h-100" rows="4" cols="33" name="comment" form="usrform" placeholder="Enter Comment's here..."></textarea>
                            </div>
                        </div>
                        <div class="row mt-3">
                            <div class="col-lg-8 col-md-8 col-sm-12 col"></div>
                            <div class="col-lg-4 col-md-4 col-sm-12 col ps-0">
                                <button type="button" onclick="authorizeSupervisor()" class="btn btn-lg btn-warning ps-4 pe-4">Authenticate</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>





@*<script>
    function SavePaymentDetails() {
    //debugger;
    var custname = $("#custname").text();
    var customerno = $("#custno").text();
    var InvoiceNo = $("#invno").text().trim();
    var InvoiceTotal = $("#invtotal").text();
    var BalanceDue = $("#balancedue").text();
    var TotalPaid = $("#totalpaid").text().trim();
    var TotalPaidd = $("#totalpaidd").text().trim();
    var Change = $("#change").text().trim();
    var Balance = $("#balance").text().trim();
    var EmailCopy = $("#emailcopy").is(':checked');/////checkbox//
    var TextCopy = $("#textcopy").is(':checked');/////checkbox//
    var Emaillabel = $("#emaillabel").text();
    var Textlabel = $("#textlabel").text();
    var SelectDropdown = $("#selectdropdown").val();
    console.log(customerno + "1/" + InvoiceNo + "2/" + InvoiceTotal + "3/" + BalanceDue + "4/" + TotalPaid + "5/" + TotalPaidd + "6/" + Change + "7/" + Balance + "8/" + EmailCopy + "9/" + TextCopy + "10/" + Emaillabel + "11/" + Textlabel + "12/" + SelectDropdown);
    var paymentdetail = new Array();
    $("#Custpaymenttable TBODY TR").each(function () {
    var row = $(this);
    var SalePayment = {};
    SalePayment.ItemNumberr = row.find("TD").eq(0).html();
    SalePayment.ItemNumber = row.find("TD").eq(1).html();
    SalePayment.ItemDescription = row.find("TD").eq(2).html();
    SalePayment.Quantity = row.find("TD").eq(3).html();
    SalePayment.AmountRetail = row.find("TD").eq(4).html();
    SalePayment.InDiscount = row.find("TD").eq(5).html();
    SalePayment.OutDiscount = row.find("TD").eq(6).html();
    SalePayment.InUnits = row.find("TD").eq(7).html();
    SalePayment.OutUnits = row.find("TD").eq(8).html();
    SalePayment.Price = row.find("TD").eq(9).html();
    SalePayment.Total = row.find("TD").eq(10).html();
    SalePayment.CustomerName = customername;
    SalePayment.CustomerNumber = customercode;
    SalePayment.CustomerID = CustomerID;
    SalePayment.ItemId = row.find("TD").eq(14).html();
    SalePayment.SaleManName = saleman;
    SalePayment.InvoiceNumber = invoicenumber;
    SalePayment.InvoiceTotal = invoicetotal;
    SalePayment.Discount = discountidadd;
    SalePayment.Other = otherid;
    SalePayment.Tax = taxid;
    SalePayment.Freight = freightid;
    SalePayment.ItemName = row.find("TD").eq(2).html();

    if (GetSaleDiscount == true) {
    SalePayment.GetSaleDiscount = "true";
    } else {

    SalePayment.GetSaleDiscount = "false";

    }

    SalePayment.Count = CountNumber;

    // Sale.GetSaleDiscount = GetSaleDiscount;

    //   alert(Sale.GetSaleDiscount);

    paymentdetail.push(SalePayment);
    });
    console.log(paymentdetail);



    if (customername != "" && customername != "undefined") {
    $("#ValCustomerName").hide();
    isValid = true;

    } else {
    $("#ValCustomerName").first().focus();
    $("#ValCustomerName").text("CustomerName Is Required.");
    $("#ValCustomerName").show();
    isValid = false;
    }
    if (customercode != "" && customercode != "undefined") {

    $("#ValCustomercode").hide();
    isValid = true;

    } else {
    $("#ValCustomercode").first().focus();
    $("#ValCustomercode").text("ValCustomercode Is Required.");
    $("#ValCustomercode").show();
    isValid = false;
    }
    if (isValid == true) {
    $.confirm({
    title: 'Save New Sale Invoice!',
    content: 'Are you sure to save new Sale Invoice?',
    buttons: {
    confirm: function () {
    $.ajax({
    type: "POST",
    url: '@Url.Action("AddSalePos", "Sale")',

    data: JSON.stringify(SaleDetails),
    contentType: "application/json; charset=utf-8",
    dataType: "json",
    success: function (data) {
    if (data == true) {
    location.reload();
    }
    }
    });
    },
    cancel: function () {
    },
    }
    });


    }
    }
    </script>*@
<script src="~/vendors/jQuery-Scanner-Detection-master/jquery.scannerdetection.js"></script>
<link href="~/sweetalert/sweetalert2.min.css" rel="stylesheet" />
<script src="/vendors/sweetalert/sweetalert.min.js"></script>
<script src="~/sweetalert/sweetalert2.min.js"></script>
<script type="text/javascript">
        var nowDate = new Date();
        var nowDay = ((nowDate.getDate().toString().length) == 1) ? '0' + (nowDate.getDate()) : (nowDate.getDate());
        var nowMonth = ((nowDate.getMonth().toString().length) == 1) ? '0' + (nowDate.getMonth() + 1) : (nowDate.getMonth() + 1);
        var nowYear = nowDate.getFullYear();
        var formatDate = nowDay + "/" + nowMonth + "/" + nowYear;
        var sernum = 1;
        var paymentserial = 1;
        $(document).ready(function () {
            var subtotalvalue = $("#valueofsubtotal").val();
            $("#subtotalauto").val("$" + subtotalvalue);
            $("#amountdue").val("$" + subtotalvalue);
            $("#invoicetotal").val("$" + subtotalvalue);
            var customerid = $("#customerInformationId").val();
            var customercodeinfo = $("#customercodeinfo").val();
            var customername = $("#customername").val();
            $("#customerid").val(customerid);
            var otherid = $("#otherid").val();
            //if (otherid == "") {

            //    $("#otherid").val("0");
            //}

            AppendAllMissions(event);
            var grosstotal = 0;
            $('.add-row').click(function () {


                var customername = $("#customername").val();
                var customercode = $("#customercodeinfo").val();
                var CustomerID = $("#customerid").val();

                var GetSaleDiscount= $("#getsalediscount").is(':checked');
                var html = '';
                html += '<tr  id="rowid-' + sernum + '" class="">';
                html += '<td id="countser-' + sernum + '" style="width: 10px" class="counter" contenteditable="true">' + sernum + '</td>';
                html += '<td id="itemnumber-' + sernum + '" style="width: 10px" contenteditable="true" onkeyup="GetItemByItemNumber(' + sernum + ')"></td>';
                html += '<td id="description-' + sernum + '" style="width: 10px" contenteditable="true"  val"' + sernum + '"><input style="width: 100%;" id="DescriptionInput-' + sernum + '" type="text" name="city" list="productList-' + sernum + '" onkeyup="GetItemList(' + sernum + ')" autocomplete="off"><datalist class="dropt input-lg mx-auto dropdown w-100" id="productList-' + sernum + '" onclick="AppendItem(' + sernum + ')"></datalist></td>';
                html += '<td id="Quantity-' + sernum + '" contenteditable="true" class="table-primary" val"' + 1 + '" onkeyup="QuantityMultipyPrice(' + sernum + ')">1</td>';
                html += '<td id="amount-' + sernum + '" contenteditable="true"></td>';
                html += '<td id="discountin-' + sernum + '"  contenteditable="true">$0.00</td>';
                html += '<td id="discountout-' + sernum + '" contenteditable="true" onkeyup="DiscuntChangePrice(' + sernum + ')">0.00%</td>';
                html += '<td id="InUnits-' + sernum + '"  contenteditable="true" class="table-success"></td>';
                html += '<td id="OutUnits-' + sernum + '"  contenteditable="true" class="table-success"></td>';
                html += '<td id="price-' + sernum + '" contenteditable="true" class="table-warning"></td>';
                html += '<td id="total-' + sernum + '" contenteditable="true" class="table-warning"></td>';
                html += '<td id="customername-' + sernum + '" style="display:none;">' + customername + '</td>';
                html += '<td style="display:none" id="customercode-' + sernum + '" contenteditable="true" class="table-warning">' + customercode + '</td>';
                html += '<td style="display:none" id="customerid-' + sernum + '" contenteditable="true" class="table-warning">' + CustomerID + '</td>';
                html += '<td style="display:none" id="itemid-' + sernum + '" contenteditable="true" class="table-warning"></td>';
                html += '<td style="display:none" id="stockno-' + sernum + '" contenteditable="true" class="table-warning"></td>';
                /*html += '<td style="display:none" id="getsalediscount-' + sernum + '" contenteditable="true" class="table-warning">' + GetSaleDiscount +'</td>';*/
                html += '<td id="delete-' + sernum + '"  onclick="RemoveRow(' + sernum + ')"><span class="delete-row ti-close"></span></td>';
                html += '<input type="hidden" value="" id="productId"/>';
                html += '</tr >';


                /// var $row = $('#mytable').find('tr.hidden').clone(true).removeClass('hidden');
                $('#appendnewrowforsale').append(html);
                $("#countnum").text(sernum);
                sernum++;
                CountTotalOfAllTD();
            });
            $("#btn").click(function () {
                InsertSaleDetails(false);
            });

            $("#invoicenumber").val('@ViewBag.InvoiceNumberOFI');
            window.isSuperVisorCreditSuccess = false;

        });
        /*  /to append list on posted open dropdown/*/
        $('.add-rowpayment').click(function () {

            var html = '';
            html += '<tr  id="rowidsalepayment-' + paymentserial + '" class="">';
            html += '<td id="amountpayed-' + paymentserial + '" onkeyup="AddCreditTax(' + paymentserial + ')" contenteditable="true" class="table-warning" style="color: #020caf;"></td>';
            html += '<td id="amountallocate-' + paymentserial + '" contenteditable="true" class="table-warning"></td>';
            html += '<td id="paymenttype-' + paymentserial + '"  contenteditable="true" class="table-primary"><select id="selectid-' + paymentserial + '" class="selectcash" onchange="AddCreditTax(' + paymentserial + ')" name="D1">';
            html += '<option value = "Cash" >Cash</option >';
            html += '<option value="Check">Check</option>';
            html += '<option value="MoneyOrder">MoneyOrder</option>';
            html += '<option value="CreditCard">CreditCard</option>';
            html += '<option value="DebitCard">DebitCard</option>';
            html += '<option value="cust">Cust.Advance</option>';
            html += '</select ></td>';
            html += '<td id="cardnumber-' + paymentserial + '" contenteditable="true" class="table-warning"></td>';
            html += '<td id="holddate-' + paymentserial + '" contenteditable="true" class="table-warning" style="color: #c92d21;font-weight: 500;">'+ formatDate +'</td>';
            html += '<td id="paymentrowdelete-' + paymentserial + '"  onclick="RemoveRowPayment(' + paymentserial + ')"><span class="delete-row ti-close"></span></td>';
            html += '</tr >';
            paymentserial++;
            CountTotalOfAllTDOfPayment();
            $('#paymentmodaltable').append(html);
        });

       function AddCreditTax(id)
       {

           var amountvalue = 0;
           amountvalue = $("#amountpayed-" + id).text();

         var selectvalue=$("#paymenttype-1").find("select").val();
         if (selectvalue ==="CreditCard") {
             var percentage = (amountvalue * 2) / 100;

             var tofixedvalue =percentage;
             //alert(tofixedvalue);
             $("#cardnumber-" + id).text("@@2%=$"+tofixedvalue);
           }
        }
        var openinvoices = $('#open-invoice');
            $.ajax({
                type: "GET",
                url: '@Url.Action("GetOnGoingSale", "Sale")',
                dataType: 'json',
                success: function (data) {

                    $.each(data, function (val, text) {
                        openinvoices.append(
                            /*  $('<option></option>').val(val).html("<div onclick=seletchdkjsa(" + text.currentInvoiceNumber + ")" + text.currentInvoiceNumber + "-" + text.customerNumber + "-" + text.customerName +"</div>")*/
                            $('<option></option>').val(val).html(text.currentInvoiceNumber + "-" + text.customerNumber + "-" + text.customerName )
                        );
                    });
                },
                error: function (xhr, status, error) {
                    var errorMessage = xhr.status + ': ' + xhr.statusText
                },
            });
        var postedinvoices = $('#posted-invoice');
            $.ajax({
                type: "GET",
                url: '@Url.Action("PostedSales", "Sale")',
                dataType: 'json',
                success: function (data) {
                    console.log(data);
                    $.each(data, function (val, text) {
                        postedinvoices.append(
                            $('<option></option>').val(val).html( text.customerAccountNumber + "-" + text.customerName + "-" + text.customerNumber)
                        );
                    });
                },
                error: function (xhr, status, error) {
                    var errorMessage = xhr.status + ': ' + xhr.statusText
                },
            });

        function CountTotalOfAllTD() {
           /* $("#subtotalauto").empty();*/
          var total=0

         //   var alltr = $("#saletable").find('tr');
            $("#saletable tr").each(function () {
                var self = $(this);

                var col_11_value = self.find("td:eq(10)").text().trim();

                var result = col_11_value.replace(/\$/g, '');

                console.log(result + "result");
               var afterparsing =  parseFloat(result);
                if (!isNaN(afterparsing)) {
                    total += afterparsing;
                }

                console.log(total + "////");
                $("#subtotalauto").val("$" + total);
            });
            CalculatetaxPlusDiscount()
        }
        function CountTotalOfAllTDOfPayment() {

          var total=0


            //$("#saletable tr").each(function () {
            //    var self = $(this);

            //    var col_11_value = self.find("td:eq(10)").text().trim();

            //    var result = col_11_value.replace(/\$/g, '');

            //    console.log(result + "result");
            //   var afterparsing =  parseFloat(result);
            //    if (!isNaN(afterparsing)) {
            //        total += afterparsing;
            //    }

            //    console.log(total + "////");
            //    $("#subtotalauto").val("$" + total);
            //});
          //  CalculatetaxPlusDiscount()
        }
        function RemoveRow(val) {

            $("#rowid-" + val).remove();
            var alltr = $("#saletable").find('tr');
            $.each(alltr, function (i, t) {
                if (i > 0) {
                    var TRid = $(t)[0].id.split('-');
                    $(t).attr('id', TRid[0] + "-" + i);

                    var alltd = $(t).find('td');
                    $.each(alltd, function (f, it) {
                      //  console.log($(it)[0].id.split('-'));
                        var id = $(it)[0].id.split('-');
                        if (id[0] == "countser") {
                            $(it).attr('id', id[0] + "-" + i);
                            $(it).text(i);
                        }
                        if (id[0] == "itemnumber") {
                            $(it).attr('onkeyup', 'GetItemByItemNumber('+i+')');
                        }
                        if (id[0] == "Quantity") {
                            $(it).attr('onkeyup', 'QuantityMultipyPrice('+i+')');
                        }
                        if (id[0] == "delete") {
                            $(it).attr('onclick', 'RemoveRow('+i+')');
                        }
                        $(it).attr('id', id[0] + "-" + i);

                    });
                }

            });

            sernum--;
            $("#countnum").text(sernum - 1);
            CountTotalOfAllTD();

        }
        function RemoveRowPayment(val) {
             $("#rowidsalepayment-" + val).remove();
            var alltr = $("#customerpaymentsaletable").find('tr');

            $.each(alltr, function (i, t) {
                if (i > 0) {
                    var TRid = $(t)[0].id.split('-');
                    $(t).attr('id', TRid[0] + "-" + i);

                    var alltd = $(t).find('td');
                    $.each(alltd, function (f, it) {
                        var id = $(it)[0].id.split('-');


                        if (id[0] == "paymentrowdelete") {
                            $(it).attr('onclick', 'RemoveRowPayment(' + i + ')');
                        }
                        if (id[0] == "amountpayed") {
                            $(it).attr('onkeyup', 'AddCreditTax(' + i + ')');
                        }
                        if (id[0] == "paymenttype") {
                            $(it).find("select").attr('onchange', 'AddCreditTax(' + i + ')');
                        }
                        $(it).attr('id', id[0] + "-" + i);
                        var idselect = $(it).find("select").attr('id');
                        console.log(idselect + "selectmyid");
                        if (idselect != null && idselect != "undefined") {
                            var selectid = idselect.split('-');
                            if (selectid[0] != null && selectid[0] != "undefined") {
                                $(it).find("select").attr('id', selectid[0] + "-" + i);
                            }

                        }


                    });
                }

            });

            paymentserial--;
          //  $("#countnum").text(sernum - 1);
            CountTotalOfAllTDOfPayment();

        }


        function closemodal() {
            $("#payment").modal('hide');
        }
        function openmodal() {
            $("#customerpayment").modal('show');
        }
        function openmodalabcde() {
            $("#payment").modal('show');
            }
        function openmodalabcd()
        {
            $("#abcd").modal('show');
        }
        function closemodalabcd() {
            $("#abcd").modal('hide');
            $("#receivablesid").modal('hide');
            $("#customerpayment").modal('hide');


        }

        $('.add-row1').click(function () {

            var html = '';
            html += '<tr class="">';
            html += '<td style="width: 10px" class="counter" contenteditable="true"></td>';

            html += '<td style="width: 10px" contenteditable="true"></td>';
            html += '<td contenteditable="true" class="table-primary"></td>';
            html += '<td contenteditable="true"></td>';
            html += '<td contenteditable="true"></td>';
            html += '<td><span class="delete-row ti-close" onclick="RemoveRow()"></span></td>';
            html += '</tr >';

            $('#appendnewrowforsalepayment').append(html);
        });
        function Increamenrgross(val) {

            //var idnum = sernum - 1;

            var totalamountgrossindex1 = $("#total-" + val).text();
            var ReplacedAmountgross1 = totalamountgrossindex1.replace(/\$/g, '');

            var existingValue = $("#subtotalauto").val().split('$');
            var existingvalueAmount = existingValue[1];
            if (existingvalueAmount > 0) {
                var newtotal = parseFloat(existingvalueAmount) + parseFloat(ReplacedAmountgross1);
                $("#subtotalauto").val("$" + newtotal);
            } else {
                var newtotal1 = ReplacedAmountgross1;
                $("#subtotalauto").val("$" + newtotal1);
            }
            CountTotalOfAllTD();
            //var totalamountgrossindex2 = $("#total" + val).text();
            //var ReplacedAmountgross2 = totalamountgrossindex1.replace(/\$/g, '');


            //alert(newtotal);
           /* var ReplacedAmountgross2 = totalamountgrossindex2.replace(/\$/g, '');*/

            //var newgrosstotalfinal = ReplacedAmountgross1 + ReplacedAmountgross2;


        }
        function InsertSaleDetails(printorNot) {

            var customername = $("#searchname").val();
            var customercode = $("#customercodeinfo").val();
            var CustomerID = $("#customerid").val();
            var saleman = $("#salesmanid").text();
            var invoicenumber = $("#invoicenumber").val();
            var invoicetotal = $("#invoicetotal").val();
            var discountidadd = $("#discountidadd").val();
            var otherid = $("#otherid").val();
            var taxid = $("#taxid").val();
            var freightid = $("#freightid").val();
            var GetSaleDiscount = $("#getsalediscount").is(':checked');
            var CountNumber = $("#countnum").text();

            var SaleDetails = new Array();
            //$("#saletable TBODY TR").each(function () {
            //    if ($(this).find("#productId").val() == '') {
            //        RemoveRow(($(this).attr("id")).split("rowid-")[1]);
            //    }
            //});
            $("#saletable TBODY TR").each(function () {
                var row = $(this);
                var Sale = {};
                console.log(row.find("TD"));

                Sale.ItemNumber = row.find("TD").eq(1).html();
                Sale.ItemDescription = row.find("TD").eq(2).html();
                Sale.Quantity = row.find("TD").eq(3).html();
                Sale.AmountRetail = row.find("TD").eq(4).html();
                Sale.InDiscount = row.find("TD").eq(5).html();
                Sale.OutDiscount = row.find("TD").eq(6).html();
                Sale.InUnits = row.find("TD").eq(7).html();
                Sale.OutUnits = row.find("TD").eq(8).html();
                Sale.Price = row.find("TD").eq(9).html();
                Sale.Total = row.find("TD").eq(10).html();
                Sale.RingerQuantity = row.find("TD").eq(12).html();
                Sale.ShipmentLimit = row.find("TD").eq(11).html();
                Sale.CustomerName = customername;
                Sale.CustomerNumber = customercode;
                Sale.CustomerID = CustomerID;
                Sale.ItemId = row.find("TD").eq(16).html();
                Sale.SaleManName = saleman;
                Sale.InvoiceNumber = invoicenumber;
                Sale.InvoiceTotal = invoicetotal;
                Sale.Discount = discountidadd;
                Sale.Other = otherid;
                Sale.Tax = taxid;
                Sale.Freight = freightid;
                Sale.ItemName = row.find("TD").eq(2).html();

                if (GetSaleDiscount == true) {
                    Sale.GetSaleDiscount = "true";
                } else {

                    Sale.GetSaleDiscount = "false";

                }
                if (printorNot) {
                    Sale.IsPrintinvoice = true;
                    Sale.IsClose = true;
                    Sale.IsOpen = false;
                }
                else {
                    Sale.IsClose = false;
                    Sale.IsOpen = true;
                }
                Sale.BusinessAddress = $("#bussinessAddress").text();
                if ($("#customerAddToMail").text() == "true") {
                    Sale.AddToMailList = true;
                }
                else {
                    Sale.AddToMailList = false;
                }
                Sale.CustomerEmail = $("#customerEmail").text();
                Sale.Count = CountNumber;
                Sale.SupervisorID = $("#supervisorId").text();
               // Sale.GetSaleDiscount = GetSaleDiscount;

             //   alert(Sale.GetSaleDiscount);

                SaleDetails.push(Sale);
            });
            console.log(SaleDetails);


            if (customername != "" && customername != "undefined") {
                $("#ValCustomerName").hide();
                isValid = true;

            } else {
                $("#ValCustomerName").first().focus();
                $("#ValCustomerName").text("CustomerName Is Required.");
                $("#ValCustomerName").show();
                isValid = false;
            }
            if (customercode != "" && customercode != "undefined") {

                $("#ValCustomercode").hide();
                isValid = true;

            } else {
                $("#ValCustomercode").first().focus();
                $("#ValCustomercode").text("ValCustomercode Is Required.");
                $("#ValCustomercode").show();
                isValid = false;
            }
            var tablecount = $("#saletable TBODY TR").length;
            if (parseInt(tablecount) == 0) {
                isValid = false;
            }
            if (window.isSuperVisorCreditSuccess == false) {
                isValid = false;
            }
            if (isValid == true) {
                   $.confirm({
                        title: 'Save New Sale Invoice!',
                        content: 'Are you sure to save new Sale Invoice?',
                        buttons: {
                            confirm: function () {
                                var isamountValid = true;
                                if ($("#isExclude").text() == "true")
                                {
                                    var amount = $("#remainingAmount").text();
                                    if (amount != "") {
                                        if (parseInt(amount) > 0) {
                                            isamountValid = false;
                                        }
                                    }
                                }
                                if (isamountValid) {
                                    if ($("#isPopupMessage").text() == "true") {
                                        Swal.fire({
                                            title: $("#popupMessage").text(),
                                            confirmButtonText: 'OK',
                                            showCancelButton: true,
                                        }).then((result) => {
                                            /* Read more about isConfirmed, isDenied below */
                                            if (result.isConfirmed) {
                                                $.ajax({
                                                    type: "POST",
                                                    url: '@Url.Action("AddSalePos", "Sale")',

                                                    data: { 'SaleDetails': SaleDetails},
                                                    //contentType: "application/json; charset=utf-8",
                                                    dataType: "json",
                                                    success: function (data) {
                                                        //debugger;
                                                        if (data == true) {
    @*window.location.href = '@Url.Action("SaleInvoicePdf", "Sale")';*@
                                                        toastr.success('Invoice Posted/Saved Successfully.');

                                                            var actionUrl = '@Url.Action("SaleInvoicePdf", "Sale")';
                                                            window.open(actionUrl, "_blank");
                                                             window.location.href = '@Url.Action("OrdersForInvoice", "Customer")';
                                                            //window.open('Purchase/PurchaseInvoice','_blank');
                                                        }
                                                        if (data == false) {
                                                        toastr.error('Unable to save the invoice');
                                                        }
                                                    }
                                                });
                                            }
                                        })
                                    }
                                    else {
                                        $.ajax({
                                            type: "POST",
                                            url: '@Url.Action("AddSalePos", "Sale")',

                                            data: JSON.stringify(SaleDetails),
                                            contentType: "application/json; charset=utf-8",
                                            dataType: "json",
                                            success: function (data) {

                                                if (data == true) {
                                                        toastr.success('Invoice Posted/Saved Successfully & Ready to print.');
                                                    var actionUrl = '@Url.Action("SaleInvoicePdf", "Sale")';
                                                            window.open(actionUrl, "_blank");
                                                             window.location.href = '@Url.Action("OrdersForInvoice", "Customer")';
                                                    //window.open('Purchase/PurchaseInvoice','_blank');
                                                }
                                                if (data == false) {
                                                      window.location.href = '@Url.Action("OrdersForInvoice", "Customer")';
                                                      toastr.error('Unable to print and save the invoice');
                                                }
                                            }
                                        });
                                    }
                                }
                                else {
                                    var pendingAmount = $("#remainingAmount").text();
                                    Swal.fire(
                                        'Customer Amount Pending',
                                        "Customer have to pay "+pendingAmount+"$ ",
                                        'error'
                                    )

                                }
                        },
                        cancel: function () {
                        },
                    }
                });


            }
        }
        function SaveOnGoingSales() {

            var  isValid = true;
            var customername = $("#searchname").val();
            var customercode = $("#customercodeinfo").val();
            var CustomerID = $("#customerid").val();
            var saleman = $("#salesmanid").text();
            var invoicenumber = $("#invoicenumber").val();
            var invoicetotal = $("#invoicetotal").val();
            var discountidadd = $("#discountidadd").val();
            var otherid = $("#otherid").val();
            var taxid = $("#taxid").val();
            var freightid = $("#freightid").val();
            var GetSaleDiscount = $("#getsalediscount").is(':checked');
            var CountNumber = $("#countnum").text();
            var desnam = $("#description-1").text();
            var SaleDetails = new Array();
            $("#saletable TBODY TR").each(function () {
                var row = $(this);
                var Sale = {};
                Sale.ItemNumber = row.find("TD").eq(1).html();
                Sale.ItemDescription = row.find("TD").eq(2).html();
                Sale.Quantity = row.find("TD").eq(3).html();
                Sale.AmountRetail = row.find("TD").eq(4).html();
                Sale.InDiscount = row.find("TD").eq(5).html();
                Sale.OutDiscount = row.find("TD").eq(6).html();
                Sale.InUnits = row.find("TD").eq(7).html();
                Sale.OutUnits = row.find("TD").eq(8).html();
                Sale.Price = row.find("TD").eq(9).html();
                Sale.Total = row.find("TD").eq(10).html();
                Sale.CustomerName = customername;
                Sale.CustomerNumber = customercode;
                Sale.CustomerID = CustomerID;
                Sale.ItemId = row.find("TD").eq(14).html();
                Sale.SaleManName = saleman;
                Sale.CurrentInvoiceNumber = invoicenumber;
                Sale.InvoiceTotal = invoicetotal;
                Sale.Discount = discountidadd;
                Sale.Other = otherid;
                Sale.Tax = taxid;
                Sale.Freight = freightid;
                Sale.ItemName = row.find("TD").eq(2).html();

                if (GetSaleDiscount == true) {
                    Sale.GetSaleDiscount = "true";
                } else {

                    Sale.GetSaleDiscount = "false";

                }

                Sale.Count = CountNumber;

               // Sale.GetSaleDiscount = GetSaleDiscount;

             //   alert(Sale.GetSaleDiscount);

                SaleDetails.push(Sale);
            });
            console.log(SaleDetails);



            if (customername != "" && customername != "undefined") {
                $("#ValMsgQuantity").hide();


            } else {
                $("#ValCustomerName").first().focus();
                $("#ValCustomerName").text("CustomerName Is Required.");
                $("#ValCustomerName").show();
                isValid = false;
            }
            if (customercode != "" && customercode != "undefined") {

                $("#ValCustomercode").hide();


            } else {
                $("#ValCustomercode").first().focus();
                $("#ValCustomercode").text("ValCustomercode Is Required.");
                $("#ValCustomercode").show();
                isValid = false;
            }
            if (desnam != "" && desnam != "undefined") {




            } else {

                isValid = false;
            }


            if (isValid == true) {

                             $.ajax({
                    type: "POST",
                    url: '@Url.Action("OngoingSale", "Sale")',

                    data: JSON.stringify(SaleDetails),
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                                 success: function (data) {

                          }
                          });

                    }

        }
    function QuantityMultipyPrice(val) {

        $("#total-" + val).empty();
        var i = 1;
        var limit_exceeded = false;
        $(".onlinelimitexeeded").each(function () {
            var compare_quantity = 0;
            if (parseInt($("#Quantity-" + i).text()) > parseInt($("#onlineLimit-" + i).text())) {
                compare_quantity = parseInt($("#onlineLimit-" + i).text());
            }
            else {
                compare_quantity = parseInt($("#Quantity-" + i).text());
            }
            if (parseInt($("#ringer-" + i).text()) > compare_quantity) {
                limit_exceeded = true;
            }

            i++;
        });

        if (limit_exceeded == true) {

            $("#shield-icon").css("display", "inline-block");
        }
        else {
            $("#shield-icon").css("display", "none");
        }

        var onlinelimit = $("#onlineLimit-" + val).text();
        var quantity = $("#ringer-" + val).text();
        var orderquantity = $("#Quantity-" + val).text();
        if (quantity == "") {
            quantity = "0";
        }
        //if (parseFloat(onlinelimit) >= parseFloat(quantity)) {
        //    $("#Quantity-" + val).css("background-color", "transparent");
        //    $("#Quantity-" + val).css("color", "black");
        //    $("#onlinelimitexeeded-" + val).val("false");
        //} else {
        //    $("#Quantity-" + val).css("background-color", "red");
        //    $("#Quantity-" + val).css("color", "white");
        //    $("#onlinelimitexeeded-" + val).val("true");
        //}

        var getStock = $("#stockno-" + val).text();
        if (getStock == null || getStock == 0 || getStock == "" || getStock == "undefined") {
            alert('you cannot sale product stock is not available');
            $("#delete-" + val).trigger("click");
        }
        if (parseInt(quantity) > parseInt(getStock)) {
            /* alert('you cannot excede the existing stock');*/
            Swal.fire(
                "Error",
                "you cannot excede the existing stock",
                'error'
            );
            $("#delete-" + val).trigger("click");
        }


        var tootal = $("#price-" + val).text();
        //debugger;
        var ReplacedAmount = tootal.replace(/\$/g, '');
        var foundtotal = parseFloat(quantity) * parseFloat(ReplacedAmount);

        var ceilingvalue = foundtotal;

        ceilingvalue = ceilingvalue;

        $("#total-" + val).text("$" + foundtotal);
        //var subtotalnew = $("#subtotalauto").val();
        //var finalsubtotalvalue = subtotalnew.split('$');
        //var subtotalsuplitednew = finalsubtotalvalue[1];
        //var additionoftotalquantitysub = parseFloat(subtotalsuplitednew) + parseFloat(foundtotal);

        //  $("#subtotalauto").val("$" + additionoftotalquantitysub);
        CountTotalOfAllTD();
        DiscuntChangePrice(val);
        }
        function CalculateQrossTotal() {

            var freightid = $("#freightid").val();
            var taxidval = $("#taxid").val();
            var discountadd = $("#discountidadd").val();
            var otherval = $("#otherid").val();
            var subtotal = $("#subtotal").val();
           var previousbalance = $("#previousbalance").val();
            $("#amountdue").text("$"+ foundtotal);
        }
        function CalculatetaxPlusDiscount() {

            var subtotal = $("#subtotalauto").val().split('$');

            var discount = $("#discountidadd").val();
            var otheridval = $("#otherid").val();
            var taxidval = $("#taxid").val();
            var freight = $("#freightid").val();
            if (discount == "" ) {
                discount = 0;

            } if (otheridval == "" ) {
                otheridval = 0;

            }
            if (taxidval == "") {
                taxidval = 0;

            } if (freight == "") {
                freight = 0;

            }

            var newsubtotal = subtotal[1];
         //   alert(newsubtotal);
            // var newdiscount = discount[1];
            //debugger;
            var sumofallexpences = parseFloat(newsubtotal) + parseFloat(otheridval) + parseFloat(taxidval) + parseFloat(freight);
            var minusdiscount = parseFloat(sumofallexpences) - parseFloat(discount);
            var invoicetotal = parseFloat(minusdiscount);


            if (isNaN(invoicetotal))
            {
                $("#invoicetotal").val("$" + 0);
                $("#amountdue").val("$" + 0);
            } else
            {
                   $("#invoicetotal").val("$" + invoicetotal);

               $("#amountdue").val("$" + invoicetotal);
            }

            //if (invoicetotal == "NaN") {

            //    $("#invoicetotal").val("$" + 0);
            //    $("#amountdue").val("$" + 0);
            //} else
            //{
            //    $("#invoicetotal").val("$" + invoicetotal);

            //    $("#amountdue").val("$" + invoicetotal);
            //}

        }
        function CalculateTaxFreight() {
            //debugger;
            var val1 = $("#subtotal").val();
            var val2 = $("#discountidadd").val();
            var val3 = $("#taxid").val();
            var val4 = $("#freightid").val();
            //var val5 = parseInt(($("#otherid").val()).split("$")[1]);


            var invoicetotal1 = val3 + val4;
         //   alert(invoicetotal1);
            var invoicetotal2 = val1 + invoicetotal1;
         //   alert(invoicetotal2);
            $("#invoicetotal").val(invoicetotal2);
           // alert(val);
        }
        function GetItemByItemNumber(val) {
         //   var blocker = $("#itemnumber" + ID).text();
            var total = $("#total-" + val).text();
            var subtotalnew = $("#subtotalauto").val();
              var finalsubtotalvalue =    subtotalnew.split('$');
            //debugger;
            if (total!=null && total!='') {
                var newtotal = total.split('$');
                 var newtotalsuplitted =   newtotal[1];
                var subtotalsuplitednew = finalsubtotalvalue[1];
                if (subtotalsuplitednew != null && subtotalsuplitednew != '' && subtotalsuplitednew != "$NaN") {

                    var subtractedtotal = parseFloat(subtotalsuplitednew) - parseFloat(newtotalsuplitted);
                    $("#subtotalauto").val("$" + subtractedtotal);
                    $("#itemnumber-" + val).empty();
                    $("#Quantity-" + val).empty();
                    $("#amount-" + val).empty();
                    $("#discountin-" + val).empty();
                    $("#discountout-" + val).empty();
                    $("#InUnits-" + val).empty();
                    $("#OutUnits-" + val).empty();
                    $("#price-" + val).empty();
                    $("#total-" + val).empty();
                    $("#description-" + val).empty();
                    $("#ringer-" + val).empty();
                }
            }

            var itemnumber = $("#itemnumber-" + val).text();

            $.ajax({
                type: "GET",
                url: '@Url.Action("GetItemStockFinancialByItemNumber", "Sale")',

                data: { 'itemnumber': itemnumber },

                dataType: 'json',

                success: function (data) {
                    console.log(data);

                    $("#rowid-" + val).find("#productId").val(data.id);
                    var Id = data.id;
                    var count = 0;
                    var exist = 0;
                    var notexist = true;
                    $('#saletable tr').each(function (index, tr) {
                        if (count > 0) {
                            var Id = tr.attributes["id"].value.split("rowid-")[1];
                            var productId = parseInt($("#rowid-" + Id).find("#productId").val());
                            //debugger;
                            if (productId === data.id) {
                                exist++;
                            }
                            if (exist > 1) {
                                swal("Error!", "Item Already Added!", "error");
                                notexist = false;
                                RemoveRow(val);
                            }

                        }

                        count++;
                    });
                    if (notexist === true) {
                        if (data.stock != null) {
                            if (data.stock.quantity != null && data.stock.quantity != "undefined") {
                                $("#stockno-" + val).text(data.stock.quantity);

                            } else {
                                $("#stockno-" + val).text(data.stock.quantity);

                            }
                        }
                        //debugger;
                        if (data.name != null && data.name != "undefined") {
                            $("#description-" + val).text(data.name);
                            $("#description-" + val).attr('contenteditable', 'false');

                        }
                        if (data.cost != null && data.name != "undefined") {
                            $("#amount-" + val).text("$" + data.cost);

                        }
                        if (data.cost != null && data.cost != "undefined") {

                            var price = 0;
                            if (window.stTax != null) {
                                $.each(window.stTax, function (index, value) {
                                    var firstVal = (value.productId).toString();
                                    var tax = parseInt(value.tax);
                                    if (data.id == firstVal) {
                                        data.cost = parseFloat(data.cost) + tax;
                                    }
                                });
                            }
                            $("#price-" + val).text("$" + data.cost);
                            $("#total-" + val).text("$" + data.cost);
                            //  var totalamountgrossindex1 = $("#total" + val).text();
                            // var ReplacedAmountgross1 = totalamountgrossindex1.replace(/\$/g, '');
                            var existingValue = $("#subtotalauto").val().split('$');
                            var existingvalueAmount = existingValue[1];
                            if (existingvalueAmount > 0) {
                                var newtotal = parseFloat(existingvalueAmount) + parseFloat(data.cost);
                                $("#subtotalauto").val("$" + newtotal);
                            } else {
                                //var newtotal1 = ReplacedAmountgross1;
                                $("#subtotalauto").val("$" + data.cost);
                            }

                            //calculate function

                        }

                        if (data.id != null && data.id != "undefined") {
                            $("#itemid-" + val).text(data.id);

                        }
                        CalculatetaxPlusDiscount();

                        SaveOnGoingSales();
                    }

                },
                error: function (xhr, status, error) {
                    var errorMessage = xhr.status + ': ' + xhr.statusText
                },
            });
        }
        function AppendAllMissions(event) {
            $.ajax({
                type: "GET",
                url: "@Url.Action("AutoCompleteSearchCustomerInfo", "Sale")",
                async: false,
                dataType: 'json',
                cache: false,
                success: function (data) {
                    var inner = '';
                    var opts = jQuery.parseJSON(JSON.stringify(data));
                    console.log(opts);
                    if (opts.length > 0) {
                        //$("#matchedCharityTemplate").show();
                    }
                    $("#listallmissions").empty();
                    console.log(data);
                    //$('#ddlAllMission').empty();
                    $.each(opts, function (i, d) {
                        inner = '';
                        inner += '<div class="setsearchbox anitem dropdown-menu searchitem cp" onclick="GetCompanyByID(' + d.id + ')";>';
                        if (i == 0) {
                            inner += '<div class="searchheader">Company Name</div></br>';
                        }
                        inner += '<span class="item_name di w-50" data-rel="' + d.id + '">' + d.company + '</span>';
                        inner += '</div>';


                        // $("#listallmissions").modal('show');
                        $("#listallmissions").append(inner);


                    });
                },
                error: function (xhr, status, error) {
                    var errorMessage = xhr.status + ': ' + xhr.statusText
                },
            });
                };
                var Increament = 0;
        function GetAllMatchedItems(event) {
            if (Increament != 0) {
                AppendAllMissions();
            }
            var naming = $(".searchname").val();
            if (naming == "") {
                $(".item_name").parent().hide();
            }
            else {
                var text = naming;
                var items = $(".item_name");
                //first, hide all:
                items.parent().hide();

                //show only those matching user input:
                items.filter(function () {
                    return $(this).text().toLowerCase().indexOf(text) == 0;
                }).parent().show();
            }
            Increament++;
        };
        function GetCompanyByID(val) {

            var id = val;
            $.ajax({
                type: "GET",
                url: '@Url.Action("GetCompanyByID", "Sale")',

                data: {
                    id: id
                },
                dataType: 'json',
                success: function (data) {
                    //debugger;
                    if (data != null) {
                        ShowReceivables(data);
                        $("#searchname").val(data.company);
                        $("#bussinessAddress").text(data.businessAddress);
                        $("#customerEmail").text(data.email);
                        if(data.customerClassification != null && data.customerClassification != "undefined")
                        {
                            $("#customerAddToMail").text(data.customerClassification.addtoMaillingList);
                            if (data.customerClassification.viewInvoicePrevBalance) {
                                if (data.receivable != null) {
                                    $("#previousbalance").val(data.receivable.amount);
                                }
                            }
                            else {
                                $("#previousbalance").val("");
                            }
                        }
                        if (data.receivable != null && data.receivable != "undefined")
                        {
                            $("#remainingAmount").text(data.receivable.amount);
                        }
                        if (data.customerBillingInfo != null && data.customerBillingInfo != "undefined")
                        {
                            $("#otherid").val(data.customerBillingInfo.additionalInvoiceCharge);
                            $("#isExclude").text(data.customerBillingInfo.isExclude);
                            $("#isPopupMessage").text(data.customerBillingInfo.isPopupMessage);
                            if (data.customerBillingInfo.isPopupMessage) {
                                $("#popupMessage").text(data.customerBillingInfo.popupMessage);
                            }
                            if (data.customerBillingInfo.isTaxExempt == false) {
                                $.ajax({
                                    type: "GET",
                                    async: false,
                                    cache: false,
                                    url: '@Url.Action("GetSttax", "Sale")',
                                    dataType: 'json',
                                    success: function (data) {
                                        window.stTax = data;
                                        $.each(data, function (index, value) {
                                            var firstVal = (value.productId).toString();
                                            var tax = parseInt(value.tax);
                                            $("#saletable tr").each(function (index, value) {

                                                if (index > 0) {
                                                    var secondVal = $("#rowid-" + index).find("#productId").val();
                                                    if (firstVal == secondVal) {
                                                        var newValue = tax + parseFloat(($("#amount-" + index).text()).split("$")[1]);

                                                        $("#price-" + index).text("$" + newValue);
                                                        var qty = parseInt($("#Quantity-" + index).text());
                                                        var total = qty * newValue;
                                                        $("#total-" + index).text("$" + total);
                                                    }
                                                    CountTotalOfAllTD();
                                                }
                                            });
                                        });

                                    },
                                    error: function (xhr, status, error) {
                                        var errorMessage = xhr.status + ': ' + xhr.statusText
                                    },
                                });
                            }
                            else {
                                $("#saletable tr").each(function (index, value) {
                                    var price = parseInt($("#Quantity-" + index).text()) * parseFloat(($("#amount-" + index).text()).split("$")[1]);
                                    $("#price-" + index).text($("#amount-" + index).text());
                                    $("#total-" + index).text("$" + price);
                                    CountTotalOfAllTD();
                                });
                                window.stTax = null;
                            }
                        }
                        if (data.customerCode != null && data.customerCode != "undefined") {

                            //$("#customercodeinfo").val(data.customerCode);



                        } if (data.id != null && data.id != "undefined") {
                            console.log(data.customerCode);
                          //  $("#customerid").val(data.id);



                        }
                        if (data.company != null && data.company != "undefined") {
                            console.log(data.customerCode);
                           // $("#customername").val(data.company);
                        }
                        if (data.accountNumber != null && data.accountNumber != "undefined") {
                            console.log(data.accountNumber);
                            $("#Accountnumber").val(data.accountNumber);
                        }
                        //if (data.balance != null && data.balance != "undefined") {
                        //    $("#previousbalance").val(data.balance);

                        //} else {
                        //    $("#previousbalance").val("0");
                        //}
                        if (data.customerClassification != null && data.customerClassification != "undefined") {

                            if (data.customerClassification.salesman != null && data.customerClassification.salesman != "undefined") {

                                $("#salesmanid").text(data.customerClassification.salesman);
                            }
                            if (data.customerClassification.driverName != null && data.customerClassification.driverName != "undefined") {

                                $("#driverid").text(data.customerClassification.driverName);
                            }

                        }
                        if (data.customerBillingInfo != null && data.customerBillingInfo != "undefined") {
                            if (data.customerBillingInfo.isGetSalesDiscounts == false) {

                            $("#discountidadd").attr("disabled", true);
                            $("#discountidadd").val("");
                            $('#getsalediscount').prop('checked', true);
                            } else {

                            $("#discountidadd").attr("disabled", false);
                            $('#getsalediscount').prop('checked', false);
                            }
                        }
                        $('#salesmanid').empty();
                        $('#paymentTermsid').empty();
                        $('#shippedViaid').empty();
                        $('#driverid').empty();
                        $('#weightid').empty();
                        $('#salesmanid').append(data.customerClassification.salesman);
                        $('#paymentTermsid').append(data.customerBillingInfo.paymentTerms);
                        $('#shippedViaid').append(data.customerClassification.shippedVia);
                        $('#driverid').append(data.customerClassification.driverName);
                        CalculatetaxPlusDiscount();
                    }

                    $("#listallmissions").empty();
                    SaveOnGoingSales();
                },
                error: function (xhr, status, error) {
                    var errorMessage = xhr.status + ': ' + xhr.statusText
                },
            });


        }
        function ReloadPage() {
            location.reload();
        };
        var isCtrl = false;
        $(document).keyup(function (e) {
            if (e.which == 17)
                isCtrl = false;
        }).keydown(function (e) {
            if (e.which == 17) isCtrl = true;
            if (e.which == 83 && isCtrl == true) {
                InsertSaleDetails(false);
                CountTotalOfAllTD();
                return false;
            }
        });
        $(document).keyup(function (e) {

            if (e.which == 17) isCtrl = false;
        }).keydown(function (e) {
            if (e.which == 17) isCtrl = true;
            if (e.which == 73 && isCtrl == true) {
                $(".add-row").trigger("click");
                event.stopPropagation();
                CountTotalOfAllTD();
                return false;
            }
        });
        $('body').keydown(function (event) {
            var letter = String.fromCharCode(event.which);

            if (event.keyCode == 46) {
                var id = $("#countnum").text();
                if (id > 0) {
                    $("#rowid-" + id).remove();
                    sernum--;
                    $("#countnum").text(sernum - 1);
                }
                CountTotalOfAllTD();
            }
            //console.log(event);
            //console.log(event.keyCode);
        });
        //document.addEventListener('keydown', function (event) {
        //    const key = event.key; // const {key} = event; ES6+
        //    if (key === 46) {
        //        var id = $("#countnum").text();
        //        if (id>0) {
        //            $("#rowid-" + id).remove();
        //            sernum--;
        //            $("#countnum").text(sernum - 1);
        //        }


        //    }
        //    CountTotalOfAllTD();
        //});



         function openCity(evt, cityName) {
          var i, tabcontent, tablinks;
          tabcontent = document.getElementsByClassName("tabcontent");
          for (i = 0; i < tabcontent.length; i++) {
            tabcontent[i].style.display = "none";
          }
          tablinks = document.getElementsByClassName("tablinks");
          for (i = 0; i < tablinks.length; i++) {
            tablinks[i].className = tablinks[i].className.replace(" active", "");
          }
          document.getElementById(cityName).style.display = "block";
          evt.currentTarget.className += " active";
    }



         function ShowReceivables(data) {
             if (data != null && data != "undefined") {


             }

             $(".forremovingmodel").empty();
             var html = "";

             html += '<div class="modal-content forremovingmodel">';
             html += '<div class="modal-header" style="padding:1rem!important;">';
             html += '<h5 class="modal-title" id="ModalLabel">Balance Overdue</h5>';
             html += '<button type="button" class="close" data-dismiss="modal" aria-label="Close" onclick="closemodalabcd()">';
             html += '<span aria-hidden="true">×</span>';
             html += '</button>';
             html += '</div>';
             html += '<div class="modal-body" style="color: #0000ab; background-color: #ff99cc;padding-top:10px;">';
             html += '<div class="row">';
             html += '<div class="col-lg-12 col-md-12 col-sm-12 col">';
             html += '<label style="font-weight:700">Customer: <label id="customerNo">1011</label></label>';
             html += '</div>';
             html += '</div>';
             html += '<div class="row mt-1">';
             html += '<div class="col-lg-6 col-md-12 col-sm-12 col font-size">';
             html += '<label id="Storename">lorem ipsum</label>';
             html += '</div>';
             html += '</div>';
             html += '<div class="row mt-1">';
             html += '<div class="col-lg-6 col-md-12 col-sm-12 col font-size">';
             html += '< label > loremhvssa sakskdasd sad as d</label >';
             html += '</div>';
             html += '</div>';
             html += '<div class="row mt-1">';
             html += '<div class="col-lg-12 col-md-12 col-sm-12 col font-size">';
             html += '<label>Tel: <label id="telno">+92832742398</label></label>';
             html += '</div>';
             html += '</div>';
             html += '<div class="row mt-2">';
             html += '<div class="col-lg-12 col-md-12 col-sm-12 col">';
             html += '<h2 class="text-center">Balance Overdue</h2>';
             html += '</div>';
             html += '</div>';
             html += '<div class="row mt-2">';
             html += '<div class="col-lg-12 col-md-12 col-sm-12 col text-center">';
             html += '<input type="text" class="text-center st-1" name="name" value="$64357"  />';
             html += '</div>';
             html += '</div>';
             html += '<div class="row mt-2">';
             html += '<div class="col-lg-12 col-md-12 col-sm-12 col text-center">';
             html += '<label>DueDate: <label id="date"></label></label>';
             html += '</div>';
             html += '</div>';
             html += '</div>';
             html += '</div>';

             $('#receivablesid').append(html);
             $('#receivablesid').modal('show');

            //    console.log(html);
        }

         function closemodalfreight() {
                    $("#freightmodal").modal('hide');
                }

                function taxfunc() {
                    $("#freightmodal").modal('show');
        }


        function GetItemList(val) {

            var data_array = [];
            var search = $("#DescriptionInput-" + val).val();
            $("#productList-"+val).empty();
            var dropdown = '';
             $.ajax({
               type: "GET",
                    async: false,
                    cache: false,
                url: '@Url.Action("GetAllItem", "Sale")',
                dataType: 'json',
                 success: function (data) {

                 $.each(data, function (index, value) {
                        if (search != "") {
                            if (value.text.toLowerCase().indexOf(search.toLowerCase()) >= 0) {
                                dropdown += '<option data-value="' + value.value + '">' + value.text + '</option>';
                                let my_object = {};
                                my_object.title = value.text;
                                my_object.value = value.value;

                                data_array.push(my_object);
                            }
                        }
                    });

                },
                error: function (xhr, status, error) {
                    var errorMessage = xhr.status + ': ' + xhr.statusText
                },
                });

            $("#productList-" + val).append(dropdown);
            $.each(data_array, function (index, value) {
                if (data_array[index].title == search) {
                    $("#itemnumber-" + val).text(data_array[index].value);
                    GetItemByItemNumber(val);
                }
            });
            //data_array.empty();

        }
        function DiscuntChangePrice(val) {
            //debugger;

            var quantity = $("#ringer-" + val).text();
            var tootal = $("#price-" + val).text();
            var discount = parseFloat(($("#discountout-" + val).text()).split("%")[0]);

            var ReplacedAmount = tootal.replace(/\$/g, '');
            var priceDiscount = (ReplacedAmount / 100) * discount;
            var foundtotalDiscount = parseFloat(quantity) * parseFloat(priceDiscount);
            var amount = parseFloat(quantity) * parseFloat(ReplacedAmount);
            amount = amount - foundtotalDiscount;
            $("#total-" + val).empty();
            $("#total-" + val).text("$" + amount);
            CountTotalOfAllTD();
        }
        var printorNotStatus = false;
        function creditCheck(printorNot) {
            var i = 1;
            var issue = false;
            var low_quantity_items = ""
            var lowquantitymessage = false;
            $(".onlinelimitexeeded").each(function () {

                var quantity = $("#ringer-" + i).text();
                if (quantity == "") {
                    quantity = "0";
                }

                var getStock = $("#stockno-" + i).text();
                if (getStock == null || getStock == 0 || getStock == "" || getStock == "undefined") {
                    Swal.fire(
                        "Stock is not available",
                        "you cannot sale " + $("#description-" + i).text() + " because stock is not available.. Kindly Set it",
                        'error'
                    );
                    $("#delete-" + i).trigger("click");
                    issue = true;
                    return false;
                }
                if (parseInt(quantity) > parseInt(getStock)) {
                    /*alert('you cannot excede the existing stock');*/
                    Swal.fire(
                        'Invalid Quantity of ' + $("#description-" + i).text(),
                        "you cannot sale " + $("#description-" + i).text() + " because quantity is exceeded than stock.. Kindly Set it",
                        'error'
                    );
                    $("#delete-" + i).trigger("click");
                    issue = true;
                    return false;
                }
                if ($("#ringer-" + i).text() == "" || !/^[0-9]+$/.test($("#ringer-" + i).text())) {
                    Swal.fire(
                        'Invalid Quantity of ' + $("#description-" + i).text(),
                        "Invalid Quantity of " + $("#description-" + i).text() + " Kindly Set it",
                        'error'
                    );
                    issue = true;
                    return false;
                }
                if (parseInt($("#ringer-" + i).text()) > parseInt($("#onlineLimit-" + i).text())) {
                    $("#onlinelimitexeeded-" + i).val("true");
                }
                else {
                    $("#onlinelimitexeeded-" + i).val("false");
                }
                if ('@requestapprove' == 'False') {

                if ($("#onlinelimitexeeded-" + i).val() == "true") {
                    Swal.fire(
                        'Ringer Quantity Exceeded of ' + $("#description-" + i).text(),
                        /*"Ringer Quantity of " + $("#description-" + i).text() + " is Greater then Shipment Limit.. Kindly Set it",*/
                        "Kindy Send Request For Approval",
                        'error'
                    );
                    issue = true;
                    return false;
                    }

                if (parseInt($("#Quantity-" + i).text()) < parseInt($("#ringer-" + i).text())) {
                    Swal.fire(
                        'Ringer Quantity Exceeded of ' + $("#description-" + i).text(),
                       /* "Ringer Quantity is greater than  quantity of " + $("#description-" + i).text() + "",*/
                        "Kindy Send Request For Approval",
                        'error'
                    );
                    issue = true;
                    return false;
                    }
                }


                if (parseInt($("#Quantity-" + i).text()) > parseInt($("#onlineLimit-" + i).text())) {
                    if (parseInt($("#ringer-" + i).text()) < parseInt($("#onlineLimit-" + i).text())) {
                //        Swal.fire(
                //    "Message",
                //    "You ringged up for " + $("#description-" + i).text()+" with less quantity than Shimpent limit",
                //    'message'
                //);
                        lowquantitymessage = true;
                        var itemName = $('#description-' + i).text();
                        low_quantity_items += itemName +", ";



            }
        }
        else {
                    if (parseInt($("#ringer-" + i).text()) < parseInt($("#Quantity-" + i).text())) {
                //        Swal.fire(
                //    "Message",
                //    "You ringged up for " + $("#description-" + i).text() + " with less quantity than Shimpent limit",
                //    'message'
                //);
                        lowquantitymessage = true;
                        var itemName = $('#description-' + i).text();
                        low_quantity_items += itemName + ", ";

            }
        }
                i++;
            });


            if (issue == true) {
                return false;
            }

            if (lowquantitymessage == true) {
                Swal.fire({
                    title: '',
                    text: 'You ringged up for ' + low_quantity_items + ' with less quantity than Shimpent limit',
                    showDenyButton: false, showCancelButton: false,
                    confirmButtonText: `ok`,
                    denyButtonText: `No`,
                }).then((result) => {
                    /* Read more about isConfirmed, isDenied below */
                    if (result.isConfirmed) {
                        printorNotStatus = printorNot;
                        // window.isSuperVisorCreditSuccess = false;
                        window.isSuperVisorCreditSuccess = true;
                        InsertSaleDetails(printorNotStatus);
                        // $("#supervisorModal").modal("show");
                    } else if (result.isDenied) {
                        return false;
                    }
                });
            }
            else {
                printorNotStatus = printorNot;
                // window.isSuperVisorCreditSuccess = false;
                window.isSuperVisorCreditSuccess = true;
                InsertSaleDetails(printorNotStatus);
            }


    }



    function SendApprovalForExceedQty() {
        var i = 1;
        var limit_exceeded = false;
        var issue = false;
        $(".onlinelimitexeeded").each(function () {

            var quantity = $("#ringer-" + i).text();
            if (quantity == "") {
                quantity = "0";
            }

            var compare_quantity = 0;

            var getStock = $("#stockno-" + i).text();
            if (getStock == null || getStock == 0 || getStock == "" || getStock == "undefined") {
                Swal.fire(
                    "Stock is not available",
                    "you cannot sale " + $("#description-" + i).text() + " because stock is not available.. Kindly Set it",
                    'error'
                );
               // $("#delete-" + i).trigger("click");
                issue = true;
                return false;

            }
            if (parseInt(quantity) > parseInt(getStock)) {
                /*alert('you cannot excede the existing stock');*/
                Swal.fire(
                    'Invalid Quantity of ' + $("#description-" + i).text(),
                    "you cannot sale " + $("#description-" + i).text() + " because quantity is exceeded than stock.. Kindly Set it",
                    'error'
                );
               // $("#delete-" + i).trigger("click");
                issue = true;
                return false;
            }
            if ($("#ringer-" + i).text() == "" || !/^[0-9]+$/.test($("#ringer-" + i).text())) {
                Swal.fire(
                    'Invalid Quantity of ' + $("#description-" + i).text(),
                    "Invalid Quantity of " + $("#description-" + i).text() + " Kindly Set it",
                    'error'
                );
                issue = true;
                return false;
            }
            if (parseInt($("#Quantity-" + i).text()) > parseInt($("#onlineLimit-" + i).text())) {
                compare_quantity = parseInt($("#onlineLimit-" + i).text());
            }
            else {
                compare_quantity = parseInt($("#Quantity-" + i).text());
            }
            if (parseInt($("#ringer-" + i).text()) > compare_quantity) {
               // $("#onlinelimitexeeded-" + i).val("true");
                limit_exceeded = true;
            }

            //if ($("#onlinelimitexeeded-" + i).val() == "true") {
            //    Swal.fire(
            //        '"Ringer Quantity Exceeded of ' + $("#description-" + i).text(),
            //        "Ringer Quantity of " + $("#description-" + i).text() + " is Greater then Shipment Limit.. Kindly Set it",
            //        'error'
            //    );
            //    issue = true;
            //    return false;
            //}
            //if (parseInt($("#Quantity-" + i).text()) < parseInt($("#ringer-" + i).text())) {
            //    Swal.fire(
            //        'Invalid Quantity of ' + $("#description-" + i).text(),
            //        "Ringer Quantity is greater than  quantity of " + $("#description-" + i).text() + "",
            //        'error'
            //    );
            //    issue = true;
            //    return false;
            //}
            i++;
        });
        if (issue == true) {
            return false;
        }
        if (limit_exceeded == false) {
            Swal.fire(
                    'Cannot send approval',
                    "You did not ringed up with exceeded limit for any item. So you did not need to send request",
                    'error'
                );
                return false;
        }



            var customername = $("#searchname").val();
            var customercode = $("#customercodeinfo").val();
            var CustomerID = $("#customerid").val();
            var saleman = $("#salesmanid").text();
            var invoicenumber = $("#invoicenumber").val();
            var invoicetotal = $("#invoicetotal").val();
            var discountidadd = $("#discountidadd").val();
            var otherid = $("#otherid").val();
            var taxid = $("#taxid").val();
            var freightid = $("#freightid").val();
            var GetSaleDiscount = $("#getsalediscount").is(':checked');
            var CountNumber = $("#countnum").text();

            var SaleDetails = new Array();

        $("#saletable TBODY TR").each(function () {

                var row = $(this);
                var Sale = {};
            console.log(row.find("TD"));
            var comparequantity = 0;

                Sale.ItemNumber = row.find("TD").eq(1).html();
                Sale.ItemDescription = row.find("TD").eq(2).html();
                Sale.Quantity = row.find("TD").eq(3).html();
                Sale.RingerQuantity = row.find("TD").eq(12).html();
            Sale.ShipmentLimit = row.find("TD").eq(11).html();

            //if (parseInt(Sale.Quantity) > parseInt(Sale.ShipmentLimit)) {
            //    comparequantity = parseInt(Sale.ShipmentLimit);
            //}
            //else {
            //    comparequantity = parseInt(Sale.Quantity);
            //}
            //if (parseInt(Sale.RingerQuantity) > comparequantity) {
                Sale.AmountRetail = row.find("TD").eq(4).html();
                Sale.InDiscount = row.find("TD").eq(5).html();
                Sale.OutDiscount = row.find("TD").eq(6).html();
                Sale.InUnits = row.find("TD").eq(7).html();
                Sale.OutUnits = row.find("TD").eq(8).html();
                Sale.Price = row.find("TD").eq(9).html();
                Sale.Total = row.find("TD").eq(10).html();

                Sale.CustomerName = customername;
                Sale.CustomerNumber = customercode;
                Sale.CustomerID = CustomerID;
                Sale.ItemId = row.find("TD").eq(16).html();
                Sale.SaleManName = saleman;
                Sale.InvoiceNumber = invoicenumber;
                Sale.InvoiceTotal = invoicetotal;
                Sale.Discount = discountidadd;
                Sale.Other = otherid;
                Sale.Tax = taxid;
                Sale.Freight = freightid;
                Sale.ItemName = row.find("TD").eq(2).html();

                if (GetSaleDiscount == true) {
                    Sale.GetSaleDiscount = "true";
                } else {

                    Sale.GetSaleDiscount = "false";

                }
                //if (printorNot) {
                //    Sale.IsPrintinvoice = true;
                //    Sale.IsClose = true;
                //    Sale.IsOpen = false;
                //}
                //else {
                //    Sale.IsClose = false;
                //    Sale.IsOpen = true;
                //}
                Sale.BusinessAddress = $("#bussinessAddress").text();
                if ($("#customerAddToMail").text() == "true") {
                    Sale.AddToMailList = true;
                }
                else {
                    Sale.AddToMailList = false;
                }
                Sale.CustomerEmail = $("#customerEmail").text();
                Sale.Count = CountNumber;
                Sale.SupervisorID = $("#supervisorId").text();
                // Sale.GetSaleDiscount = GetSaleDiscount;

                //   alert(Sale.GetSaleDiscount);

                SaleDetails.push(Sale);
           // }
            });
            console.log(SaleDetails);


            if (customername != "" && customername != "undefined") {
                $("#ValCustomerName").hide();
                isValid = true;

            } else {
                $("#ValCustomerName").first().focus();
                $("#ValCustomerName").text("CustomerName Is Required.");
                $("#ValCustomerName").show();
                isValid = false;
            }
            if (customercode != "" && customercode != "undefined") {

                $("#ValCustomercode").hide();
                isValid = true;

            } else {
                $("#ValCustomercode").first().focus();
                $("#ValCustomercode").text("ValCustomercode Is Required.");
                $("#ValCustomercode").show();
                isValid = false;
            }
            //var tablecount = $("#saletable TBODY TR").length;
            //if (parseInt(tablecount) == 0) {
            //    isValid = false;
            //}
            //if (window.isSuperVisorCreditSuccess == false) {
            //    isValid = false;
            //}
            if (isValid == true) {
                   $.confirm({
                        title: 'Send Approval For Exceed product Quantity!',
                       content: 'Are you sure you want to Send Approval For Exceed product Quantity?',
                        buttons: {
                            confirm: function () {
                                var isamountValid = true;
                                if ($("#isExclude").text() == "true")
                                {
                                    var amount = $("#remainingAmount").text();
                                    if (amount != "") {
                                        if (parseInt(amount) > 0) {
                                            isamountValid = false;
                                        }
                                    }
                                }
                                if (isamountValid) {
                                    if ($("#isPopupMessage").text() == "true") {
                                        Swal.fire({
                                            title: $("#popupMessage").text(),
                                            confirmButtonText: 'OK',
                                            showCancelButton: true,
                                        }).then((result) => {
                                            /* Read more about isConfirmed, isDenied below */
                                            if (result.isConfirmed) {
                                                $.ajax({
                                                    type: "POST",
                                                    url: '@Url.Action("SendApproval", "Sale")',

                                                    data: { 'SaleDetails': SaleDetails},
                                                    //contentType: "application/json; charset=utf-8",
                                                    dataType: "json",
                                                    success: function (data) {
                                                        //debugger;
                                                        if (data == true) {
                                                        toastr.success('Request send Successfully.');

                                                            @*var actionUrl = '@Url.Action("SaleInvoicePdf", "Sale")';
                                                            window.open(actionUrl, "_blank");*@
                                                             window.location.href = '@Url.Action("OrdersForInvoice", "Customer")';
                                                            //window.open('Purchase/PurchaseInvoice','_blank');
                                                        }
                                                        if (data == false) {
                                                            window.location.href = '@Url.Action("OrdersForInvoice", "Customer")';
                                                            toastr.error('Unable to Request send Successfully');
                                                        }
                                                    }
                                                });
                                            }
                                        })
                                    }
                                    else {
                                        $.ajax({
                                            type: "POST",
                                            url: '@Url.Action("SendApproval", "Sale")',

                                            data: JSON.stringify(SaleDetails),
                                            contentType: "application/json; charset=utf-8",
                                            dataType: "json",
                                            success: function (data) {

                                                if (data == true) {
                                                       toastr.success('Request send Successfully.');

                                                            @*var actionUrl = '@Url.Action("SaleInvoicePdf", "Sale")';
                                                            window.open(actionUrl, "_blank");*@
                                                             window.location.href = '@Url.Action("OrdersForInvoice", "Customer")';
                                                            //window.open('Purchase/PurchaseInvoice','_blank');

                                                }
                                                if (data == false) {
                                                      window.location.href = '@Url.Action("OrdersForInvoice", "Customer")';
                                                    toastr.error('Unable to Request send Successfully');
                                                }
                                            }
                                        });
                                    }
                                }
                                else {
                                    var pendingAmount = $("#remainingAmount").text();
                                    Swal.fire(
                                        'Customer Amount Pending',
                                        "Customer have to pay "+pendingAmount+"$ ",
                                        'error'
                                    )

                                }
                        },
                        cancel: function () {
                        },
                    }
                });


            }
    }

    function exceedrequest() {
        Swal.fire(
            'Request Waiting for Approval',
            "",
            'error'
        )
    }
        function authorizeSupervisor() {
            var pin = $("#superPin").val();
            var comment = $("#superComment").text();
            var customerId = $("#customerid").val();
            var Supervisor = {
                accessPin : pin,
                customerId: customerId,
            };
        //Supervisor.customerId = customerId.toString();
            var customer = JSON.stringify(customerId);
            var supper = JSON.stringify(Supervisor);
            var invoiceTotal = ($("#invoicetotal").val()).split("$")[1];
       //     invoiceTotal = JSON.stringify(invoiceTotal);
            var things = { "customerId": customerId, 'supervisor': Supervisor};
            //debugger;

            $.ajax({
                type: "POST",
                data: { 'customerId': customerId, 'accessPin': pin, 'creditAmount': invoiceTotal},
                dataType: 'json',
                url: '@Url.Action("CheckSupervisorCreditAmount", "Sale")',
                success: function (response) {
                    //debugger;
                    if (response.message == "Success.") {
                        $("#supervisorId").text(response.data.supervisorId);
                        $("#supervisorComment").text($("#superComment").val());
                        window.isSuperVisorCreditSuccess = true;
                        $("#supervisorModal").modal("hide");
                        InsertSaleDetails(printorNotStatus);
                        Swal.fire(
                            'Autorized',
                            'Success',
                            'success'
                        );
                    }
                    if (response.message == "Cannot Exceed Credit Limit.") {
                        Swal.fire(
                            'Error',
                            'Your Credit limit exceeded!',
                            'error'
                        )
                    }
                    if (response.message == "Invalid Email or Password.") {
                        Swal.fire(
                            'Error',
                            'You entered Invalid pin!',
                            'error'
                        )
                    }
                },
                error: function (err) {

                }

            });
        }
        function closemodalAuth() {
            $("#supervisorModal").modal("hide");
        }
</script>


<script>
        $(document).scannerDetection({
            timeBeforeScanTest: 200, // wait for the next character for upto 200ms
            startChar: [120], // Prefix character for the cabled scanner (OPL6845R)
            endChar: [13], // be sure the scan is complete if key 13 (enter) is detected
            avgTimeByChar: 40, // it's not a barcode if a character takes longer than 40ms

            onComplete: function (barcode, qty) {
                debugger;
                var lastProgress = 1;
    @*$.ajax({
        contentType: 'application/json; charset=utf-8',
        dataType: 'json',
        type: 'GET',
        xhr: function () {
        $(".main-progress").fadeIn();
        var xhr = new window.XMLHttpRequest();
        xhr.onreadystatechange = function () {
        var rdstate = xhr.readyState;
        var progress = rdstate * 25;
        for (parseInt(lastProgress); parseInt(lastProgress) <= parseInt(progress); parseInt(lastProgress++)) {
        $(".main-progress").css({ "width": parseInt(lastProgress) + "%" });
        if (parseInt(lastProgress) == 100) {
        $(".main-progress").fadeOut(2000);
        }
        }
        lastProgress = progress;
        }
        return xhr;
        },
        data: { barcodeId: barcode },
        url: '@Url.Action("GetIdbyBarcode", "SaleOrder")',
        success: function (response) {
        var Id = response.value.data.id;
        $(".product-list article").each(function () {
        var productId = $(this).attr('data-id');
        if (Id.toString() === productId) {
        $(this).click();
        }
        });

        },
        error: function (xhr, exception) {

        }
        })*@

                $(".rowclass").each(function () {
                    // Test if the div element is empty
                    var rowid = $(this).attr('id');
                    var rowidindex = rowid.split('-');
                    var serialnumber = rowidindex[1];
                   // $("#Quantity-" + serialnumber).text("32");
                    var itembarcode = $("#barcode-" + serialnumber).text();
                    if (itembarcode == barcode.slice(0, -1)) {
                        var quantity = $("#ringer-" + serialnumber).text();
                        if (quantity == "") {
                            quantity = "0";
                        }
                        var intquantity = parseInt(quantity);
                        intquantity++;
                        $("#ringer-" + serialnumber).text("");
                        $("#ringer-" + serialnumber).text(intquantity);
                        //QuantityMultipyPrice(serialnumber);
                    }

                });
            }
    });

</script>
